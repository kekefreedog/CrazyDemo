/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkcrazy_demo"] = self["webpackChunkcrazy_demo"] || []).push([["page/app/Button"],{

/***/ 8075:
/*!*****************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./app/Environment/Page/Button/style.scss ***!
  \*****************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js */ 1601);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/api.js */ 6314);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/* Import navigation rail */\n#crazy-left-navigation-rail {\n  z-index: 1100;\n  width: 88px;\n  height: 100vh;\n  /* Children */\n}\n#crazy-left-navigation-rail .crazy-left-navigation-rail-always-visible {\n  position: relative;\n  z-index: 1200;\n  background: var(--md-sys-color-tertiary-container);\n  height: 100vh;\n  overflow: auto;\n  /* Children */\n}\n#crazy-left-navigation-rail .crazy-left-navigation-rail-always-visible nav {\n  height: auto;\n  padding-top: 20px;\n  background: unset;\n  box-shadow: unset;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  /* Children */\n}\n#crazy-left-navigation-rail .crazy-left-navigation-rail-always-visible nav.justify-top {\n  justify-content: flex-start;\n}\n#crazy-left-navigation-rail .crazy-left-navigation-rail-always-visible nav.justify-bottom {\n  justify-content: flex-end;\n}\n#crazy-left-navigation-rail .crazy-left-navigation-rail-always-visible nav.justify-center {\n  justify-content: center;\n}\n#crazy-left-navigation-rail .crazy-left-navigation-rail-always-visible nav a {\n  z-index: 1300;\n  margin-bottom: 15px;\n}\n#crazy-left-navigation-rail .crazy-left-navigation-rail-collapsible {\n  z-index: 1000;\n  position: absolute;\n  top: 0;\n  left: -142px;\n  width: 230px;\n  min-height: 100vh;\n  /* background: violet; */\n}\n\n/* Import Crazy Content */\n#crazy-content {\n  height: 100vh;\n  width: min-content;\n  overflow: auto;\n}`, \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://crazy_demo/./app/Environment/Page/Button/style.scss?./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js");

/***/ }),

/***/ 6963:
/*!**************************************************!*\
  !*** ./app/Environment/Page/Button/template.hbs ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var Handlebars = __webpack_require__(/*! ../../../../node_modules/handlebars/runtime.js */ 3633);\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template({\"compiler\":[8,\">= 4.3.0\"],\"main\":function(container,depth0,helpers,partials,data) {\n    var stack1;\n\n  return \"<div id=\\\"crazy-root\\\" descriptive-id=\\\"\\\" class=\\\"screen-fit-min-y screen-flex screen-center\\\">\\n\\n\"\n    + ((stack1 = container.invokePartial(__webpack_require__(/*! ../../../../assets/Hbs/partials/preloader_linear_indeterminate.hbs */ 1354),depth0,{\"name\":\"preloader_linear_indeterminate\",\"data\":data,\"indent\":\"    \",\"helpers\":helpers,\"partials\":partials,\"decorators\":container.decorators})) != null ? stack1 : \"\")\n    + \"\\n\"\n    + ((stack1 = container.invokePartial(__webpack_require__(/*! ../../../../assets/Hbs/partials/navigation.hbs */ 8910),depth0,{\"name\":\"navigation\",\"data\":data,\"indent\":\"    \",\"helpers\":helpers,\"partials\":partials,\"decorators\":container.decorators})) != null ? stack1 : \"\")\n    + \"\\n    <div id=\\\"crazy-content\\\" descriptive-id=\\\"\\\" class=\\\"element-flex-grow-1 pb-5\\\">\\n\\n        <div class=\\\"row container\\\">\\n\\n            <div class=\\\"col s12 m10 row\\\">\\n\\n                <div class=\\\"col s12\\\">\\n                    <h1>Crazy Button</h1>\\n                </div>\\n\\n                <div id=\\\"btn-floating-round\\\" class=\\\"section col s6 m6 s12 row scrollspy\\\">\\n\\n                    <div class=\\\"col s12\\\">\\n                        <h5>Btn Floating Round</h5>\\n                    </div>\\n\\n                    <div class=\\\"col s12 screen-flex screen-bottom-y screen-center-distributed-x screen-wrap\\\">\\n\\n                        <regular-btn class=\\\"mb-5 mr-5\\\" label=\\\"Floating small round\\\" color-primary=\\\"orange\\\" size=\\\"small\\\" depth=\\\"1\\\" shape=\\\"box\\\" type=\\\"floating\\\"></regular-btn>\\n\\n                        <regular-btn class=\\\"mb-5 mr-5\\\" label=\\\"Floating normal round\\\" color-primary=\\\"red\\\" size=\\\"normal\\\" depth=\\\"1\\\" shape=\\\"box\\\" type=\\\"floating\\\"></regular-btn>\\n\\n                        <regular-btn class=\\\"mb-5 mr-5\\\" label=\\\"Floating large round\\\" color-primary=\\\"blue\\\" size=\\\"large\\\" depth=\\\"1\\\" shape=\\\"box\\\" type=\\\"floating\\\"></regular-btn>\\n\\n                        <regular-btn class=\\\"mb-5 mr-5\\\" label=\\\"Floating extra-large round\\\" color-primary=\\\"green\\\" size=\\\"extra-large\\\" depth=\\\"1\\\" shape=\\\"box\\\" type=\\\"floating\\\"></regular-btn>\\n\\n                    </div>\\n\\n                </div>\\n\\n                <div id=\\\"btn-floating-box\\\" class=\\\"section col s6 m6 s12 row scrollspy\\\">\\n\\n                    <div class=\\\"col s12\\\">\\n                        <h5>Btn Floating Box</h5>\\n                    </div>\\n\\n                    <div class=\\\"col s12 screen-flex screen-bottom-y screen-center-distributed-x screen-wrap\\\">\\n\\n                        <regular-btn class=\\\"mb-5 mr-5\\\" label=\\\"Floating small box\\\" color-primary=\\\"orange\\\" size=\\\"small\\\" depth=\\\"1\\\" shape=\\\"round\\\" type=\\\"floating\\\"></regular-btn>\\n\\n                        <regular-btn class=\\\"mb-5 mr-5\\\" label=\\\"Floating normal box\\\" color-primary=\\\"red\\\" size=\\\"normal\\\" depth=\\\"1\\\" shape=\\\"round\\\" type=\\\"floating\\\"></regular-btn>\\n\\n                        <regular-btn class=\\\"mb-5 mr-5\\\" label=\\\"Floating large box\\\" color-primary=\\\"blue\\\" size=\\\"large\\\" depth=\\\"1\\\" shape=\\\"round\\\" type=\\\"floating\\\"></regular-btn>\\n\\n                        <regular-btn class=\\\"mb-5 mr-5\\\" label=\\\"Floating extra-large box\\\" color-primary=\\\"green\\\" size=\\\"extra-large\\\" depth=\\\"1\\\" shape=\\\"round\\\" type=\\\"floating\\\"></regular-btn>\\n\\n                    </div>\\n\\n                </div>\\n\\n                <div id=\\\"btn-extended-box\\\" class=\\\"section col m12 s12 row scrollspy\\\">\\n\\n                    <div class=\\\"col s12\\\">\\n                        <h5>Btn Extended Box</h5>\\n                    </div>\\n\\n                    <div class=\\\"col s12 screen-flex screen-bottom-y screen-center-distributed-x screen-wrap\\\">\\n\\n                        <regular-btn class=\\\"mb-5 mr-5\\\" label=\\\"Floating small\\\" color-primary=\\\"orange\\\" size=\\\"small\\\" depth=\\\"1\\\" shape=\\\"box\\\" type=\\\"extended\\\"></regular-btn>\\n\\n                        <regular-btn class=\\\"mb-5 mr-5\\\" label=\\\"Floating normal\\\" color-primary=\\\"red\\\" size=\\\"normal\\\" depth=\\\"1\\\" shape=\\\"box\\\" type=\\\"extended\\\"></regular-btn>\\n\\n                        <regular-btn class=\\\"mb-5 mr-5\\\" label=\\\"Floating large\\\" color-primary=\\\"blue\\\" size=\\\"large\\\" depth=\\\"1\\\" shape=\\\"box\\\" type=\\\"extended\\\"></regular-btn>\\n                        \\n                        <regular-btn class=\\\"mb-5 mr-5\\\" label=\\\"Floating extra-large\\\" color-primary=\\\"green\\\" size=\\\"extra-large\\\" depth=\\\"1\\\" shape=\\\"box\\\" type=\\\"extended\\\"></regular-btn>\\n\\n                    </div>\\n\\n                </div>\\n\\n                <div id=\\\"btn-extended-round\\\" class=\\\"section col m12 s12 row scrollspy\\\">\\n\\n                    <div class=\\\"col s12\\\">\\n                        <h5>Btn Extended Round</h5>\\n                    </div>\\n\\n                    <div class=\\\"col s12 screen-flex screen-bottom-y screen-center-distributed-x screen-wrap\\\">\\n\\n                        <regular-btn class=\\\"mb-5 mr-5\\\" label=\\\"Floating small\\\" color-primary=\\\"orange\\\" size=\\\"small\\\" depth=\\\"1\\\" shape=\\\"round\\\" type=\\\"extended\\\"></regular-btn>\\n\\n                        <regular-btn class=\\\"mb-5 mr-5\\\" label=\\\"Floating normal\\\" color-primary=\\\"red\\\" size=\\\"normal\\\" depth=\\\"1\\\" shape=\\\"round\\\" type=\\\"extended\\\"></regular-btn>\\n\\n                        <regular-btn class=\\\"mb-5 mr-5\\\" label=\\\"Floating large\\\" color-primary=\\\"blue\\\" size=\\\"large\\\" depth=\\\"1\\\" shape=\\\"round\\\" type=\\\"extended\\\"></regular-btn>\\n                        \\n                        <regular-btn class=\\\"mb-5 mr-5\\\" label=\\\"Floating extra-large\\\" color-primary=\\\"green\\\" size=\\\"extra-large\\\" depth=\\\"1\\\" shape=\\\"round\\\" type=\\\"extended\\\"></regular-btn>\\n\\n                    </div>\\n\\n                </div>\\n\\n            </div>\\n\\n        </div>\\n\\n    </div>\\n\\n</div>\\n\\n\\n\";\n},\"usePartial\":true,\"useData\":true});\n\n//# sourceURL=webpack://crazy_demo/./app/Environment/Page/Button/template.hbs?");

/***/ }),

/***/ 8910:
/*!********************************************!*\
  !*** ./assets/Hbs/partials/navigation.hbs ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var Handlebars = __webpack_require__(/*! ../../../node_modules/handlebars/runtime.js */ 3633);\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template({\"compiler\":[8,\">= 4.3.0\"],\"main\":function(container,depth0,helpers,partials,data) {\n    return \"<div\\n    id=\\\"crazy-left-navigation-rail\\\" \\n    descriptive-id=\\\"\\\"\\n    class=\\\"\\\"\\n    partial=\\\"navigation\\\"\\n>\\n\\n    <div class=\\\"crazy-left-navigation-rail-always-visible\\\">\\n\\n        <nav>\\n\\n            <regular-btn data-redirect-name=\\\"Home\\\" label=\\\"Hello world !\\\" class=\\\"mb-4\\\" size=\\\"large\\\" shape=\\\"box\\\" depth=\\\"1\\\" icon-text=\\\"waving_hand\\\"></regular-btn>\\n\\n            <regular-btn data-redirect-name=\\\"Button\\\" label=\\\"Button\\\" class=\\\"mb-4\\\" size=\\\"large\\\" shape=\\\"box\\\" depth=\\\"1\\\" icon-text=\\\"adjust\\\"></regular-btn>\\n\\n            <regular-btn data-redirect-name=\\\"Progressbar\\\" label=\\\"Progress Bar\\\" class=\\\"mb-4\\\" size=\\\"large\\\" shape=\\\"box\\\" depth=\\\"1\\\" icon-text=\\\"remove\\\"></regular-btn>\\n\\n            <regular-btn data-redirect-name=\\\"Form\\\" label=\\\"Form\\\" class=\\\"mb-4\\\" size=\\\"large\\\" shape=\\\"box\\\" depth=\\\"1\\\" icon-text=\\\"checklist\\\"></regular-btn>\\n\\n        </nav>\\n\\n    </div>\\n\\n    <div class=\\\"crazy-left-navigation-rail-collapsible\\\">\\n\\n\\n    </div>\\n\\n</div>\";\n},\"useData\":true});\n\n//# sourceURL=webpack://crazy_demo/./assets/Hbs/partials/navigation.hbs?");

/***/ }),

/***/ 1354:
/*!****************************************************************!*\
  !*** ./assets/Hbs/partials/preloader_linear_indeterminate.hbs ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var Handlebars = __webpack_require__(/*! ../../../node_modules/handlebars/runtime.js */ 3633);\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template({\"compiler\":[8,\">= 4.3.0\"],\"main\":function(container,depth0,helpers,partials,data) {\n    return \"<div \\n  class=\\\"progress mt-0 mb-0\\\"\\n  partial=\\\"preloader_linear_indeterminate\\\"\\n  disabled\\n>\\n    <div class=\\\"indeterminate\\\"></div>\\n</div>\";\n},\"useData\":true});\n\n//# sourceURL=webpack://crazy_demo/./assets/Hbs/partials/preloader_linear_indeterminate.hbs?");

/***/ }),

/***/ 6624:
/*!************************************************!*\
  !*** ./app/Environment/Page/Button/style.scss ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ 5072);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js */ 7825);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../../../node_modules/style-loader/dist/runtime/insertBySelector.js */ 7659);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ 5056);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js */ 540);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js */ 1113);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_style_scss__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./style.scss */ 8075);\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());\noptions.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());\noptions.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, \"head\");\noptions.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());\noptions.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_style_scss__WEBPACK_IMPORTED_MODULE_6__[\"default\"], options);\n\n\n\n\n       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_style_scss__WEBPACK_IMPORTED_MODULE_6__[\"default\"] && _node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_style_scss__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals ? _node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_style_scss__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals : undefined);\n\n\n//# sourceURL=webpack://crazy_demo/./app/Environment/Page/Button/style.scss?");

/***/ }),

/***/ 2196:
/*!**********************************************!*\
  !*** ./app/Environment/Page/Button/index.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var crazyphp__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crazyphp */ 1804);\n/**\n * Page\n *\n * Pages of your app\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\n/**\n * Dependances\n */\nconst css = __webpack_require__(/*! !!css-loader!sass-loader!./style.scss */ 8075);\nconst html = __webpack_require__(/*! ./template.hbs */ 6963);\n\n__webpack_require__(/*! ./style.scss */ 6624);\n/**\n * Button\n *\n * Class for build your crazy page\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\nclass Button extends crazyphp__WEBPACK_IMPORTED_MODULE_0__.Crazypage {\n    /**\n     * Constructor\n     */\n    constructor(options) {\n        /**\n         * Parent constructor\n         */\n        super(options);\n        /**\n         * On Ready\n         *\n         * @return void\n         */\n        this.onReady = () => {\n            console.log(\"hello Button\");\n        };\n        /**\n         * On Ready\n         */\n        this.onReady();\n    }\n}\n/**\n * @param className:string\n * Duplicate of the class name because build change name of class\n */\nButton.className = \"Button\";\n/**\n * @param html:string\n * Duplicate of the class name because build change name of class\n */\nButton.html = html;\n/**\n * @param css:string\n * Duplicate of the class name because build change name of class\n */\nButton.css = css;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Button);\n/**\n * Register current class\n */\nwindow.Crazyobject.register(Button);\n\n\n//# sourceURL=webpack://crazy_demo/./app/Environment/Page/Button/index.ts?");

/***/ }),

/***/ 1304:
/*!*************************************************!*\
  !*** ../CrazyPHP/src/Front/Core/Crazyobject.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Crazyobject)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! tslib */ 4539);\n/* harmony import */ var _Library_Register_Partial__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../Library/Register/Partial */ 8661);\n/* harmony import */ var _Library_Utility_Events__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../Library/Utility/Events */ 3042);\n/* harmony import */ var _Library_Register_Page__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../Library/Register/Page */ 4101);\n/* harmony import */ var _Library_Componentregister__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../Library/Componentregister */ 2130);\n/* harmony import */ var _Library_Error_Page__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./../Library/Error/Page */ 6506);\n/* harmony import */ var _Library_Utility_ColorSchema__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./../Library/Utility/ColorSchema */ 6987);\n/* harmony import */ var _Library_Crazyconsole__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./../Library/Crazyconsole */ 4600);\n/* harmony import */ var _Library_Current_Page__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./../Library/Current/Page */ 4623);\n/* harmony import */ var _Library_History_Page__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./../Library/History/Page */ 8912);\n/* harmony import */ var _Library_Crazystate__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./../Library/Crazystate */ 7764);\n/* harmony import */ var _Library_Utility_Hash__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./../Library/Utility/Hash */ 1259);\n/**\n * Front\n *\n * Front TS Scrips for your Crazy App\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\n\n/**\n * Dependances\n */\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Crazy Object\n *\n * Methods for build your front interface\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\nclass Crazyobject {\n    /**\n     * Constructor\n     */\n    constructor(input) {\n        /** Private Async Methods Init\n         ******************************************************\n         */\n        /**\n         * Hash Init\n         *\n         * Prepare hash in your crazy page\n         * Hash allow app to load the script from back when you are loading a new page\n         *\n         * @returns Promise<void>\n         */\n        this.hashInit = (input) => (0,tslib__WEBPACK_IMPORTED_MODULE_11__.__awaiter)(this, void 0, void 0, function* () {\n            // Hash instance\n            this.hash = new _Library_Utility_Hash__WEBPACK_IMPORTED_MODULE_10__[\"default\"]();\n            // Set hash from meta tag\n            if (!this.hash.setFromMetaTag()) {\n                // Set hash from request\n                let resultFromRequest = yield this.hash.setFromRequest();\n                // Check result not null\n                if (resultFromRequest === null)\n                    // New error\n                    throw new _Library_Error_Page__WEBPACK_IMPORTED_MODULE_4__[\"default\"](\"Can't retrieve the hash from back.\");\n            }\n            // Return input\n            return input;\n        });\n        /**\n         * State Init\n         *\n         * Prepare state instances in your crazy page\n         *\n         * @returns Promise<void>\n         */\n        this.stateInit = (input) => (0,tslib__WEBPACK_IMPORTED_MODULE_11__.__awaiter)(this, void 0, void 0, function* () {\n            // New crazy state instance\n            this.state = new _Library_Crazystate__WEBPACK_IMPORTED_MODULE_9__[\"default\"](input);\n            // Return input\n            return input;\n        });\n        /**\n         * Partials Init\n         *\n         * Prepare partial in your crazy page\n         *\n         * @returns Promise<void>\n         */\n        this.partialsInit = (input) => (0,tslib__WEBPACK_IMPORTED_MODULE_11__.__awaiter)(this, void 0, void 0, function* () {\n            // Register global partials\n            this.partials.register(input.globalPartials);\n            // Return input\n            return input;\n        });\n        /**\n         * History Page Init\n         *\n         * Prepare History Instance\n         *\n         * @returns Promise<void>\n         */\n        this.historyPageInit = (input) => (0,tslib__WEBPACK_IMPORTED_MODULE_11__.__awaiter)(this, void 0, void 0, function* () {\n            // New instance\n            this.historyPage = new _Library_History_Page__WEBPACK_IMPORTED_MODULE_8__[\"default\"]();\n            // Return input\n            return input;\n        });\n        /**\n         * Register Page Init\n         *\n         * Prepare History Instance\n         *\n         * @returns Promise<void>\n         */\n        this.registerPageInit = (input) => (0,tslib__WEBPACK_IMPORTED_MODULE_11__.__awaiter)(this, void 0, void 0, function* () {\n            // New instance\n            this.registerPage = new _Library_Register_Page__WEBPACK_IMPORTED_MODULE_2__[\"default\"]();\n            // Open Register (init when the registered is creates)\n            window.Crazyobject.events.dispatch(\"onRegisterPageOpen\");\n            // Return input\n            return input;\n        });\n        /**\n         * Current Page Init\n         *\n         * Init current page\n         *\n         * @returns Promise<void>\n         */\n        this.currentPageInit = (input) => (0,tslib__WEBPACK_IMPORTED_MODULE_11__.__awaiter)(this, void 0, void 0, function* () {\n            // New current page instance\n            this.currentPage = new _Library_Current_Page__WEBPACK_IMPORTED_MODULE_7__[\"default\"]();\n            // Return input\n            return input;\n        });\n        /**\n         * Events Init\n         *\n         * Init Events\n         *\n         * @returns Promise<void>\n         */\n        this.eventInit = (input) => (0,tslib__WEBPACK_IMPORTED_MODULE_11__.__awaiter)(this, void 0, void 0, function* () {\n            // New Config Register\n            this.events = new _Library_Utility_Events__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\n            // New crazy event\n            /* new Crazyevents(); */\n            // Create default custom events\n            this.events.add(\"onRegisterPageOpen\"); //--> Event to register new page\n            this.events.add(\"onFirstPageRegistered\"); //--> Event to first page is registered\n            // Return input\n            return input;\n        });\n        /**\n         * Console Init\n         *\n         * Init console\n         *\n         * @returns Promise<void>\n         */\n        this.consoleInit = (input) => (0,tslib__WEBPACK_IMPORTED_MODULE_11__.__awaiter)(this, void 0, void 0, function* () {\n            // New Config Register\n            this.console = new _Library_Crazyconsole__WEBPACK_IMPORTED_MODULE_6__[\"default\"]();\n            // Return input\n            return input;\n        });\n        /** Public Methods | Register\n         ******************************************************\n         */\n        this.register = (page) => {\n            /**\n             * On Register Page Open Event\n             *\n             * @param e\n             * @returns void\n             */\n            var onRegisterPageOpenEvent = (e) => {\n                // Register current page\n                this.registerPage.register(page);\n                // Add Event listener\n                document.removeEventListener(\"onRegisterPageOpen\", onRegisterPageOpenEvent);\n            };\n            // Check if register has been init\n            if (window.Crazyobject.registerPage !== undefined &&\n                \"register\" in window.Crazyobject.registerPage &&\n                typeof window.Crazyobject.registerPage.register === \"function\")\n                // Register current page\n                this.registerPage.register(page);\n            else\n                // Add Event listener and wait page register is ready\n                document.addEventListener(\"onRegisterPageOpen\", onRegisterPageOpenEvent);\n        };\n        /** Methods | Page Register\n         ******************************************************\n         */\n        this.getRegisteredPage = (name) => {\n            // Set result\n            let result = null;\n            // Check function\n            /* if(\"getRegistered\" in this._registerPage && typeof this._registerPage.getRegistered === \"function\")\n    \n                // Call register in window\n                result = this._registerPage.getRegistered(name); */\n            // Return result\n            return result;\n        };\n        /** Private Methods | Events\n         ******************************************************\n         */\n        /** Constants\n         ******************************************************\n         */\n        /**\n         * Global Variable\n         */\n        this.GLOBAL_VARIABLE = \"Crazyobject\";\n        // Register Global Web Components give by the app\n        this.components = new _Library_Componentregister__WEBPACK_IMPORTED_MODULE_3__[\"default\"](input);\n        // Register Partials\n        this.partials = new _Library_Register_Partial__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n        // Color schema\n        this.colorSchema = new _Library_Utility_ColorSchema__WEBPACK_IMPORTED_MODULE_5__[\"default\"]();\n        // Init of the app\n        this.hashInit(input) // Init Hash\n            .then(this.stateInit) // Init state\n            .then(this.partialsInit) // Init Partials\n            .then(this.historyPageInit) // Init History Page\n            .then(this.eventInit) // Init Event\n            .then(this.registerPageInit) // Init Register Page\n            .then(this.currentPageInit) // Init Current Page\n            .then(this.consoleInit) // Init Current Page\n        ;\n    }\n}\n\n\n//# sourceURL=webpack://crazy_demo/../CrazyPHP/src/Front/Core/Crazyobject.ts?");

/***/ }),

/***/ 2130:
/*!**********************************************************!*\
  !*** ../CrazyPHP/src/Front/Library/Componentregister.ts ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Componentregister)\n/* harmony export */ });\n/**\n * Front\n *\n * Front TS Scrips for your Crazy App\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\n/**\n * Component Register\n *\n * Methods for manage components loaded and to load\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\nclass Componentregister {\n    /** Parameters\n     ******************************************************\n     */\n    /**\n     * Constructor\n     */\n    constructor(input) {\n        /** Methods | Global\n         ******************************************************\n         */\n        /**\n         * Register Global\n         *\n         * Register Global components\n         *\n         * @return void\n         */\n        this.registerGlobal = (globalComponentsCollection) => {\n            // Check modules\n            if (Object.keys(globalComponentsCollection).length > 0)\n                // Iteration of globalComponentsCollection\n                for (let module in globalComponentsCollection) {\n                    let classCallable = globalComponentsCollection[module];\n                    // Declare current module\n                    window.customElements.define(module, classCallable);\n                }\n        };\n        // Register Global Components\n        this.registerGlobal(input.globalComponentsCollection);\n    }\n}\n\n\n//# sourceURL=webpack://crazy_demo/../CrazyPHP/src/Front/Library/Componentregister.ts?");

/***/ }),

/***/ 7947:
/*!***************************************************!*\
  !*** ../CrazyPHP/src/Front/Library/Crazycache.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Crazycache)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ 4539);\n/* harmony import */ var localforage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! localforage */ 8838);\n/* harmony import */ var localforage__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(localforage__WEBPACK_IMPORTED_MODULE_0__);\n/**\n * Front\n *\n * Front TS Scrips for your Crazy App\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\n\n/**\n * Dependances\n */\n\n/**\n * Cache\n *\n * Methods for manage cache in worker service\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\nclass Crazycache {\n    /**\n     * Constructor\n     */\n    constructor(name = \"crazy-cache\") {\n        /** @param nameReserved  Reserved name of item */\n        this.nameReserved = [\n            \"dateCreated\", \"dateUpdated\", \"dateLoaded\"\n        ];\n        /** Public Methods\n         ******************************************************\n         */\n        /**\n         * Get\n         *\n         * Get item in current cache instance\n         *\n         * @param key:string\n         * @return any\n         */\n        this.get = (key) => (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(this, void 0, void 0, function* () {\n            var _a;\n            // Get value\n            return (_a = this.instance) === null || _a === void 0 ? void 0 : _a.getItem(key);\n        });\n        /**\n         * Get All\n         *\n         * Get All items of cache instance\n         */\n        /* public getAll = async ():Promise<any> => {\n    \n            \n    \n        } */\n        /**\n         * Set\n         *\n         * Set item in current cache instance\n         *\n         * @param key:string\n         * @param value:any\n         * @param callback?:CallableFunction\n         * @return void\n         */\n        this.set = (key, value, callback) => (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(this, void 0, void 0, function* () {\n            var _a;\n            // Set value\n            return (_a = this.instance) === null || _a === void 0 ? void 0 : _a.setItem(key, value);\n        });\n        /** Private methods\n         ******************************************************\n         */\n        /**\n         * Set Default Properties\n         *\n         * Set Default Propoerties in LocalForage\n         *\n         * @return void\n         */\n        this.setDefaultProperties = () => {\n            // New date\n            let date = new Date();\n            // Check instance\n            if (this.instance)\n                // Iteration key\n                for (let item of [\"dateCreated\", \"dateUpdated\", \"dateLoaded\"])\n                    // Set created date and update time\n                    this.instance.getItem(item).then((value) => {\n                        var _a;\n                        // Check if null\n                        if (value === null || item == \"dateLoaded\")\n                            // Set current date\n                            (_a = this.instance) === null || _a === void 0 ? void 0 : _a.setItem(item, date);\n                        // Catch error\n                    }).catch((err) => {\n                        /* Warning */\n                        console.warn(err);\n                    });\n        };\n        /* Check name */\n        if (!name)\n            /* New error */\n            throw new Error(\"Cache name can't be empty !\");\n        /* Create instance */\n        this.instance = localforage__WEBPACK_IMPORTED_MODULE_0__.createInstance({\n            name: \"crazy-\" + name\n        });\n        /* Get ready moment of localforage */\n        this.instance.ready().then(() => {\n            /* Set default properties */\n            this.setDefaultProperties();\n        }).catch(function (e) {\n            /* Warning */\n            console.warn(e);\n        });\n    }\n}\n\n\n//# sourceURL=webpack://crazy_demo/../CrazyPHP/src/Front/Library/Crazycache.ts?");

/***/ }),

/***/ 9206:
/*!***************************************************!*\
  !*** ../CrazyPHP/src/Front/Library/Crazycolor.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Crazycolor)\n/* harmony export */ });\n/* harmony import */ var _material_material_color_utilities__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @material/material-color-utilities */ 6512);\n/* harmony import */ var _Utility_ColorSchema__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Utility/ColorSchema */ 6987);\n/**\n * Front\n *\n * Front TS Scrips for your Crazy App\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\n/**\n * Dependances\n */\n\n\n/**\n * Crazy Color\n *\n * Methods for manage color and theme\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\nclass Crazycolor {\n    /**\n     * Constructor\n     * @param source:string\n     */\n    constructor(source) {\n        /** Parameters\n         ******************************************************\n         */\n        /**\n         * Theme\n         * @var theme\n         */\n        this.theme = null;\n        /**\n         * Set new theme\n         *\n         * @param source:string\n         */\n        this.setNewTheme = (source = \"#4caf50\", CustomColors) => {\n            // Check source\n            if (source)\n                // Set theme\n                this.theme = (0,_material_material_color_utilities__WEBPACK_IMPORTED_MODULE_0__.themeFromSourceColor)((0,_material_material_color_utilities__WEBPACK_IMPORTED_MODULE_0__.argbFromHex)(source), CustomColors);\n        };\n        /**\n         * Get theme\n         *\n         * @returns {Theme|null}\n         */\n        this.getTheme = () => {\n            // Return theme\n            return this.theme;\n        };\n        /**\n         * Get Theme As Json\n         *\n         * @return {string}\n         */\n        this.getThemeAsJson = () => {\n            // Set result\n            let result = \"\";\n            // Get theme\n            let theme = this.getTheme();\n            // Check theme\n            if (theme)\n                // Set result\n                result = JSON.stringify(theme, null, 2);\n            // Return result\n            return result;\n        };\n        /**\n         * Apply Theme\n         *\n         * @return {boolean}\n         */\n        this.applyTheme = () => {\n            // Set result\n            let result = false;\n            // Check theme\n            if (this.theme) {\n                // Apply theme\n                (0,_material_material_color_utilities__WEBPACK_IMPORTED_MODULE_0__.applyTheme)(this.theme, {\n                    target: document.body,\n                    dark: _Utility_ColorSchema__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getTheme() == \"dark\" ? true : false,\n                });\n                // Set theme\n                result = true;\n            }\n            // Get dark mode preference\n            const darkModePreference = window.matchMedia(\"(prefers-color-scheme: dark)\");\n            // Detect change\n            darkModePreference.addEventListener(\"change\", this._onColorModeChange);\n            // Get light mode preference\n            const lightModePreference = window.matchMedia(\"(prefers-color-scheme: light)\");\n            // Detect change\n            lightModePreference.addEventListener(\"change\", this._onColorModeChange);\n            // Return result\n            return result;\n        };\n        /** Private methods\n         ******************************************************\n         */\n        /**\n         * On Dark Mode\n         *\n         * @param e:Event\n         * @returns {void}\n         */\n        this._onColorModeChange = (e) => {\n            if (\"matches\" in e && e.matches && this.theme)\n                // Apply theme\n                (0,_material_material_color_utilities__WEBPACK_IMPORTED_MODULE_0__.applyTheme)(this.theme, {\n                    target: document.body,\n                    dark: _Utility_ColorSchema__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getTheme() == \"dark\" ? true : false,\n                });\n        };\n        // Check source\n        if (source)\n            // Set new theme\n            this.setNewTheme(source);\n    }\n}\n\n\n//# sourceURL=webpack://crazy_demo/../CrazyPHP/src/Front/Library/Crazycolor.ts?");

/***/ }),

/***/ 5150:
/*!*******************************************************!*\
  !*** ../CrazyPHP/src/Front/Library/Crazycomponent.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Crazycomponent)\n/* harmony export */ });\n/**\n * Front\n *\n * Front TS Scrips for your Crazy App\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\n/**\n * Crazycomponenet\n *\n * Usefull functions / classes / const for manipulate Web Component\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\nclass Crazycomponent extends HTMLElement {\n    /**\n     * Constructor\n     */\n    constructor(options = {\n        allowChildNodes: false,\n    }) {\n        // Parent constructor\n        super();\n        /** @var ?observer:MutationObserver */\n        this.observer = null;\n        // Ingest Options\n        this.ingestOptions(options);\n        // Set crazy root\n        this.crazy = new CrazycomponentAction(this.properties);\n    }\n    /** Methods | Events\n     ******************************************************\n     */\n    /**\n     * Post Render\n     *\n     * Event executed post render\n     *\n     * @return void\n     */\n    postRender() { }\n    ;\n    /** Methods\n     ******************************************************\n     */\n    /**\n     * Render\n     *\n     * Render current template\n     *\n     * @return string\n     */\n    render() {\n        // Declare result\n        let result = \"\";\n        // Get content\n        let content = this.crazy.getContent();\n        // Get style\n        let style = this.crazy.getStyle();\n        // Prepare collection\n        let collection = this.prepareCollectionForRender();\n        // Check if content is callable\n        if (typeof content === \"function\") {\n            // Set content in result\n            result += content(collection).replace(/\\s+/g, ' ').trim();\n        }\n        else \n        // String\n        if (typeof content === \"string\" && content) {\n            // Set content in result\n            result += content.replace(/\\s+/g, ' ').trim();\n        }\n        // Check if style is callable\n        if (typeof style === \"function\") {\n            // Set style\n            style = style(collection).replace(/\\s+/g, ' ').trim();\n        }\n        else \n        // String\n        if (typeof style === \"string\" && style) {\n            // Set style in result\n            result += style.replace(/\\s+/g, ' ').trim();\n        }\n        // Check child node\n        if (this.options.allowChildNodes) {\n            // Declare id\n            var id;\n            // Convert string to dom\n            const resultDom = new DOMParser().parseFromString(result, 'text/html');\n            // Iteration of first elements\n            let els = resultDom.body.children;\n            // Check children\n            if (els.length) {\n                // Iteration of els\n                for (var i = 0; i < els.length; i++) {\n                    // Get timestamp\n                    id = Date.now();\n                    // Add component-id\n                    els[i].setAttribute(\"component-id\", id.toString());\n                }\n                // Convert dom to string\n                result = resultDom.body.innerHTML;\n            }\n        }\n        // Return content\n        return result;\n    }\n    /**\n     * Set Default Properties\n     *\n     * @param properties:Object\n     * @return\n     */\n    setDefaultProperties(properties) {\n        // Set attributes by default\n        this.crazy.setAttributes(properties, true);\n    }\n    /**\n     * Set Properties\n     *\n     * @param node:node\n     * @return\n     */\n    setProperties() {\n        var _a;\n        // Check properties\n        if (Object.keys(this.properties).length > 0)\n            // Iteration of properties\n            for (let propertie in this.properties) {\n                // let value\n                let value = (_a = this.properties[propertie].value) !== null && _a !== void 0 ? _a : \"\";\n                // Check if value exists in attributes\n                if (this.hasAttribute(propertie)) {\n                    // Attribute value\n                    let attributeValue = this.getAttribute(propertie);\n                    // Else check type\n                    if (attributeValue !== null && typeof attributeValue === this.properties[propertie].type) {\n                        // Check if select\n                        if (\"select\" in this.properties && typeof this.properties.select === \"object\" && this.properties.select !== null) {\n                            // Check in select\n                            if (attributeValue in this.properties.select)\n                                // Push value\n                                value = attributeValue;\n                            // Push directly value\n                        }\n                        else\n                            // Push value\n                            value = attributeValue;\n                    }\n                }\n                // Set current attribute\n                this.crazy.setAttribute(propertie, value, this.properties);\n            }\n    }\n    /**\n     * Has Current Attribute\n     *\n     * Check if current component has attribute\n     *\n     * @return boolean\n     */\n    hasCurrentAttribute(name) {\n        // Declare result\n        let result = this.crazy.hasAttribute(name);\n        // Return result\n        return result;\n    }\n    /**\n     * Get Current Attribute\n     *\n     * Check if current component has attribute\n     *\n     * @return string|boolean|null\n     */\n    getCurrentAttribute(name) {\n        // Declare result\n        let result = this.crazy.getAttribute(name);\n        // Return result\n        return result;\n    }\n    /**\n     * Set Html And Css\n     *\n     * @param html:Function|string Html or callable html generator\n     * @param css:Function|string|CrazyelementStyle Css or callable css generator\n     * @return void\n     */\n    setHtmlAndCss(html, css) {\n        // Check html\n        if (html)\n            // Set content\n            this.crazy.setContent(html);\n        // Check css\n        if (css)\n            // Set css\n            this.crazy.setStyle(css);\n    }\n    /**\n     * Ingest Default Options\n     *\n     * @param options:CrazycomponentOptions\n     * @return void\n     */\n    ingestOptions(options) {\n        // Set options\n        this.options = options;\n    }\n    /**\n     * Prepare Collection\n     *\n     * Prepare collection for render\n     *\n     * @return Object\n     */\n    prepareCollectionForRender() {\n        // Declare result\n        let result = {\n            attributes: {},\n            name: this.tagName.toLowerCase(),\n        };\n        /// Attributes\n        // Prepare attributes\n        let attributeNames = this.crazy.getAttributesName();\n        // Check attributes\n        if (attributeNames.length)\n            // Iteration of attributes\n            for (let attributeName of attributeNames)\n                // Get attribute\n                result.attributes[attributeName] = this.crazy.getAttribute(attributeName);\n        // Return result\n        return result;\n    }\n    /**\n     * Move Children\n     *\n     * Move givent children <=> nodes that doesn't contain component-id\n     *\n     * @return void\n     */\n    moveChildren() {\n        // Observer\n        var observer = new MutationObserver((mutations) => {\n            // Iteration mutations\n            mutations.forEach((mutation) => {\n                var _a;\n                //Detect <img> insertion\n                if (mutation.addedNodes.length) {\n                    // Check child node\n                    if (this.options.allowChildNodes) {\n                        // Get children\n                        let childrenEls = this.querySelectorAll(\":scope > :not([component-id])\");\n                        // Get slote\n                        let slotEl = this.querySelector(\"slot\");\n                        // Delete children\n                        if (childrenEls.length && slotEl === null) {\n                            // Iteration children\n                            for (var i = 0; i < childrenEls.length; i++) {\n                                // Remove children\n                                childrenEls[i].remove();\n                            }\n                        }\n                        else \n                        // Replace slote by children\n                        if (childrenEls.length && slotEl !== null) {\n                            // Iteration children\n                            for (var i = 0; i < childrenEls.length; i++) {\n                                // Move children before slot\n                                (_a = slotEl.parentNode) === null || _a === void 0 ? void 0 : _a.insertBefore(childrenEls[i], slotEl.previousSibling);\n                            }\n                        }\n                    }\n                }\n            });\n        });\n        // Lauch observer\n        observer.observe(this, { childList: true });\n    }\n    /** Methods | Callbacks\n     ******************************************************\n     */\n    /**\n     * Connected Callback\n     */\n    connectedCallback() {\n        // Set Move Children\n        this.moveChildren();\n        // Set attributes by default\n        this.setProperties();\n        // Set html content\n        this.innerHTML = this.render();\n        // Execute post render \n        this.postRender();\n    }\n    ;\n    /**\n     * Disconnected Callback\n     */\n    disconnectedCallback() {\n    }\n    ;\n    /**\n     * Attribute Changed Callback\n     *\n     * @param name Name of the attribute\n     * @param string oldValue Old value\n     * @param string newValue New value\n     */\n    attributeChangedCallback(name, oldValue, newValue) {\n        // Check new value isn't the old value\n        if (newValue != oldValue && this.isConnected) {\n            // Update attribute collection\n            this.crazy.updateAttribute(name, newValue);\n            // Set html content\n            this.innerHTML = this.render();\n            // Execute post render \n            this.postRender();\n        }\n    }\n    ;\n    /**\n     * Adopted Callback\n     */\n    adoptedCallback() {\n    }\n    ;\n}\n/**\n * CrazycomponenetAction\n *\n * Usefull functions / classes / const for manipulate Web Component\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\nclass CrazycomponentAction {\n    /**\n     * Constructor\n     */\n    constructor(properties = {}) {\n        /** @var attributesByDefault Collection Default */\n        this.attributesByDefault = {};\n        /** @var attributesCurrent Current attribute */\n        this.attributesCurrent = {};\n        /**\n         * Attribute Changed Callback\n         *\n         * Update attribute on current element event\n         *\n         * @param name\n         * @param value\n         * @return Check if update is a success\n         */\n        this.attributeChangedCallback = (name, oldValue, newValue) => {\n            // Update attribute\n            this.updateAttribute(name, newValue);\n        };\n        // Set properties\n        this.properties = properties;\n    }\n    /** Methods | Attributes\n     ******************************************************\n     */\n    /**\n     * Set Attributes\n     *\n     * Set multiple attributes\n     *\n     * @param attributes Attributes object\n     * @param setAsDefault Set given attributes as default attributes\n     * @return void\n     */\n    setAttributes(attributes, setAsDefault = false) {\n        // Check attributes\n        if (Object.keys(attributes).length > 0) {\n            // Iteration of attributes\n            for (let attributeName in attributes)\n                // Set attribute\n                this.setAttribute(attributeName, attributes[attributeName]);\n            // Check setAsDefault\n            if (setAsDefault)\n                // Fill Attributes By Default\n                this.attributesByDefault = attributes;\n        }\n    }\n    /**\n     * Set Attribute\n     *\n     * Set Attribute on current element\n     *\n     * @param name\n     * @param value\n     * @return\n     */\n    setAttribute(name = \"\", value = \"\", properties = null) {\n        // Check name\n        if (!name)\n            // Stop\n            return;\n        // Declare Current Value\n        let currentValue = {\n            name: name,\n            value: \"\",\n            type: \"string\",\n        };\n        // Get name in properties\n        if (properties && name in properties) {\n            // Set current schema\n            let currentSchema = properties[name];\n            // Check type is string\n            if (currentSchema.type == \"string\")\n                // Set current value\n                currentValue.value = !value && currentSchema.value\n                    ? currentSchema.value\n                    : value;\n            else \n            // Check type is number\n            if (currentSchema.type == \"number\")\n                // Set current value\n                currentValue.value = !value && currentSchema.value\n                    ? currentSchema.value\n                    : (typeof value == \"number\"\n                        ? value\n                        : Number(value));\n            else \n            // Check type is number\n            if (currentSchema.type == \"bool\" || currentSchema.type == \"boolean\")\n                // Set current value\n                currentValue.value = !value && currentSchema.value\n                    ? currentSchema.value\n                    : (typeof value === \"string\" && [\"true\", \"1\", \"TRUE\"].includes(value)\n                        ? true\n                        : false);\n        }\n        else {\n            // Chack value is type string\n            if (typeof value === \"string\")\n                // Set current value\n                currentValue.value = value;\n            else \n            // Chack value is type string\n            if (typeof value === \"number\")\n                // Set current value\n                currentValue.value = value;\n            else \n            // Check if value is type boolean\n            if (typeof value === \"boolean\")\n                // Set value\n                currentValue.value = value ? \"true\" : \"false\";\n            // Check if object\n            if (typeof value === \"object\" && Object.keys(value).length > 0)\n                // Iteration of object\n                for (let key in value)\n                    // Check if key in current value\n                    if (key in currentValue) {\n                        // Declare v\n                        let v = value[key];\n                        // Check if value is type boolean\n                        if (typeof v === \"boolean\")\n                            // Set value\n                            v = v ? \"true\" : \"false\";\n                        // Set current value\n                        currentValue[key] = v;\n                    }\n        }\n        // Push value in current attributes\n        this.attributesCurrent[name] = currentValue;\n    }\n    /**\n    * Update Attribute\n    *\n    * Update attribute on current element\n    *\n    * @param name\n    * @param value\n    * @return Check if update is a success\n    */\n    updateAttribute(name = \"\", value = \"\") {\n        // Declare result\n        let result = false;\n        let maybeBoolean = false;\n        // Check name\n        if (!name)\n            // Return result\n            return result;\n        // Get current result\n        if (!(name in this.attributesCurrent))\n            // Return result\n            return result;\n        // Check if string\n        if (typeof value === \"string\") {\n            // Check if current given value is maybe a boolean\n            if ([\"true\", \"1\", \"TRUE\", \"false\", \"0\", \"FALSE\"].includes(value))\n                // Set maybe boolean\n                maybeBoolean = true;\n            // Check type is boolean\n            if (this.attributesCurrent[name].type === \"boolean\" && maybeBoolean) {\n                // Set attribute value\n                this.attributesCurrent[name].value = [\"true\", \"1\", \"TRUE\"].includes(value) ? true : false;\n                // Set result\n                result = true;\n            }\n            else \n            // Check if number \n            if (this.attributesCurrent[name].type === \"number\") {\n                // Set attribute value\n                this.attributesCurrent[name].value = Number(value);\n                // Set result\n                result = true;\n            }\n            else \n            // Check if is string\n            if (this.attributesCurrent[name].type === \"string\") {\n                // Set attribute value\n                this.attributesCurrent[name].value = value;\n                // Set result\n                result = true;\n            }\n        }\n        else \n        // Check if boolean\n        if (typeof value === \"boolean\") {\n            // Check type is boolean\n            if (this.attributesCurrent[name].type === \"boolean\") {\n                // Set attribute value\n                this.attributesCurrent[name].value = value === true /* [\"true\", \"1\", \"TRUE\"].includes(value) */ ? \"true\" : \"false\";\n                // Set result\n                result = true;\n            }\n        }\n        else \n        // Check if number\n        if (typeof value === \"number\") {\n            // Check type is boolean\n            if (this.attributesCurrent[name].type === \"number\") {\n                // Set attribute value\n                this.attributesCurrent[name].value = value;\n                // Set result\n                result = true;\n            }\n            else {\n                // Set attribute value\n                this.attributesCurrent[name].value = value.toString();\n                // Set result\n                result = true;\n            }\n        }\n        else \n        // Check if object\n        if (typeof value === \"object\" && (\"value\" in value) && (\"type\" in value)) {\n            // Check type match\n            if (this.attributesCurrent[name].type == value.type) {\n                // Check boolean\n                if (value.type === \"boolean\") {\n                    // Set attribute value\n                    this.attributesCurrent[name].value =\n                        ((typeof value.value === \"string\" &&\n                            [\"true\", \"1\", \"TRUE\"].includes(value.value)) ||\n                            (typeof value.value === \"boolean\" &&\n                                value.value)) ? \"true\" : \"false\";\n                    // Set result\n                    result = true;\n                }\n                else \n                // If string\n                if (value.type === \"string\")\n                    // Set attribute value\n                    this.attributesCurrent[name].value = value;\n                // Set result\n                result = true;\n            }\n        }\n        // Return result\n        return result;\n    }\n    /**\n     * Get Attributes Name\n     *\n     * @return string[]\n     */\n    getAttributesName() {\n        // Declare result\n        let result = Object.keys(this.attributesCurrent);\n        // Return result\n        return result;\n    }\n    /**\n     * Has Attribute\n     *\n     * Check if current component has attribute\n     *\n     * @return boolean\n     */\n    hasAttribute(name) {\n        // Declare result\n        let result = true;\n        // Check name\n        if (!name || !(name in this.attributesCurrent))\n            // Set value\n            result = false;\n        // Return result\n        return result;\n    }\n    /**\n     * Get Attribute\n     *\n     * @param name Name of the attribute to return\n     */\n    getAttribute(name) {\n        // Declare result\n        let result = null;\n        // Check name\n        if (!name || !(name in this.attributesCurrent))\n            // Return result\n            return result;\n        // Get value of attribute current\n        let attribute = this.attributesCurrent[name];\n        // Check type\n        if (attribute.type === \"boolean\" || attribute.type === \"bool\")\n            // Set result\n            result = ([\"true\", \"1\", \"TRUE\"].includes(attribute.value)) ?\n                true :\n                false;\n        else \n        // Check type\n        if (attribute.type === \"number\")\n            // Set result\n            result = Number(attribute.value);\n        else\n            // Set result\n            result = attribute.value;\n        // Return result\n        return result;\n    }\n    /** Methods | Content\n     ******************************************************\n     */\n    /**\n     * Set Content\n     *\n     * Set Content string or contect callable\n     *\n     * @param content Content to put inside webcomponenet\n     * @return void\n     */\n    setContent(content) {\n        // Check content\n        if (typeof content === \"function\") {\n            // Fill callable\n            this.htmlTemplate = content;\n            // Set html as null\n            this.htmlContent = null;\n        }\n        else \n        // If string\n        if (typeof content === \"string\") {\n            // Fill html content\n            this.htmlContent = content;\n            // Set callable as null\n            this.htmlTemplate = null;\n        }\n    }\n    /**\n     * Get Content\n     *\n     * Get Content string of content callable\n     * @return string|Function\n     */\n    getContent() {\n        // Declare result\n        let result = \"\";\n        // Get content\n        if (this.htmlTemplate !== null)\n            // Fill result\n            result = this.htmlTemplate;\n        else \n        // Check is content\n        if (this.htmlContent !== null)\n            // Fill result\n            result = this.htmlContent;\n        // Return result\n        return result;\n    }\n    /**\n     * Set Style\n     *\n     * Set Style string or content callable\n     *\n     * @param content Content to put inside webcomponenet\n     */\n    setStyle(content) {\n        // Checj CrazyelementStyle\n        if (typeof content === \"object\" && \"default\" in content) {\n            // Set css content\n            this.cssContent = content.default.toString();\n            // Set callable as null\n            this.cssTemplate = null;\n        }\n        else \n        // Check content\n        if (typeof content === \"function\") {\n            // Fill callable\n            this.cssTemplate = content;\n            // Set html as null\n            this.cssContent = null;\n        }\n        else \n        // If string\n        if (typeof content === \"string\") {\n            // Fill html content\n            this.cssContent = content;\n            // Set callable as null\n            this.cssTemplate = null;\n        }\n    }\n    /**\n     * Get Style\n     *\n     * Get Style string of content callable\n     * @return string|Function\n     */\n    getStyle() {\n        // Declare result\n        let result = \"<style>\";\n        // Get content\n        if (this.cssTemplate !== null)\n            // Fill result\n            result += this.cssTemplate;\n        else \n        // Check is content\n        if (this.cssContent !== null)\n            // Fill result\n            result += this.cssContent;\n        // Check result\n        if (result === \"<style>\") {\n            // Set result\n            result = \"\";\n        }\n        else {\n            // Set result\n            result += \"</style>\";\n        }\n        // Return result\n        return result;\n    }\n}\n;\n\n\n//# sourceURL=webpack://crazy_demo/../CrazyPHP/src/Front/Library/Crazycomponent.ts?");

/***/ }),

/***/ 4600:
/*!*****************************************************!*\
  !*** ../CrazyPHP/src/Front/Library/Crazyconsole.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Crazyconsole)\n/* harmony export */ });\n/**\n * Front\n *\n * Front TS Scrips for your Crazy App\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\n/**\n * Crazy Console\n *\n * Methods for manage components loaded and to load\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\nclass Crazyconsole {\n    /** Parameters\n     ******************************************************\n     */\n    /**\n     * Constructor\n     */\n    constructor() {\n    }\n}\n\n\n//# sourceURL=webpack://crazy_demo/../CrazyPHP/src/Front/Library/Crazyconsole.ts?");

/***/ }),

/***/ 6033:
/*!*****************************************************!*\
  !*** ../CrazyPHP/src/Front/Library/Crazyelement.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/**\n * Front\n *\n * Front TS Scrips for your Crazy App\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\n/**\n * Crazyelements\n *\n * Usefull functions / classes / const for manipulate Webcomponent\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\n/**\n * Crazy Element\n *\n * Methods for help to create custom elements\n */\nclass Crazyelement extends HTMLElement {\n    /**\n     * Constructor\n     */\n    constructor() {\n        // Parent constructor\n        super();\n        /** @var innerHtmlCallableFunction:string|null */\n        this.innerHtmlCallableFunction = null;\n        /** Crazy Elements | Methods\n         ******************************************************\n         */\n        /**\n         * Set Shadow Mode\n         *\n         * Set shadow mode depending of variable shadow mode of if the tag get attrubutes shadow = \"open\"|\"close\"\n         *\n         * @return void\n         */\n        this.attachShadowMode = () => {\n            var _a;\n            // Declare mode\n            let mode = (_a = this.shadowMode) !== null && _a !== void 0 ? _a : null;\n            // Check if shadow is set as open on node attribute \n            if (this.getAttribute(\"shadow\") === \"open\") {\n                mode = \"open\";\n            }\n            // Check if shadow is set as closed on node attribute \n            if (this.getAttribute(\"shadow\") === \"closed\") {\n                mode = \"closed\";\n            }\n            // check\n            if (mode === null) {\n                // Set shadow\n                this.shadow = null;\n                // Stop function\n                return;\n            }\n            // Attach Shadow\n            this.shadow = this.attachShadow({ mode: mode });\n        };\n        /**\n         * Set Html Content\n         *\n         * Set inner Html\n         *\n         * @return void\n         */\n        this.setHtmlContent = (content) => {\n            // Check content\n            if (!content)\n                // Stop function\n                return;\n            // Check if CallableFunction\n            if (typeof content === \"string\")\n                // Check shadow\n                if (this.shadowMode === null) {\n                    // Append to inner html\n                    this.innerHtmlContent = content;\n                }\n                else if (this.shadowRoot !== null) {\n                    // St shadowUse\n                    this.shadowRoot.innerHTML += content;\n                }\n                else \n                // Else\n                if (typeof content === \"function\")\n                    // Set CallableFunction\n                    this.innerHtmlCallableFunction = content;\n        };\n        /**\n         * Append Html Node\n         *\n         * Append Hyml Node in the root of webcomponent\n         *\n         * @return void\n         */\n        this.appendHtmlNode = (node) => {\n            // Check shadow\n            if (this.shadow === null) {\n                // Append on this\n                this.appendChild(node);\n            }\n            else {\n                // Append on shadow\n                this.shadow.appendChild(node);\n            }\n        };\n        /**\n         * Set Style Content\n         *\n         * Set Style\n         *\n         * @return void\n         */\n        this.setStyleContent = (content) => {\n            // Check content\n            if (!content)\n                // Stop function\n                return;\n            // Check shadow\n            if (this.shadowRoot === null) {\n                // Append to inner html\n                this.innerHtmlContent += \"<style>\" + content.default.toString() + \"</style>\";\n            }\n            else if (this.shadowRoot !== null) {\n                // St shadowUse\n                this.shadowRoot.innerHTML += \"<style>\" + content.default.toString() + \"</style>\";\n            }\n        };\n        /**\n         * Set Attributes\n         *\n         * Set Attributes of current element\n         *\n         * @param attributesCollection:Object|null\n         * @retirn void\n         */\n        this.setAttributes = (attributesCollection) => {\n            // Check if attributesCollection is null\n            if (attributesCollection === null && this.attributesCollection !== undefined)\n                // Set atrribute\n                attributesCollection = this.attributesCollection;\n            // Check attribute collection\n            if (attributesCollection !== null && Object.keys(attributesCollection).length > 0)\n                // Iteration\n                for (let attribute in attributesCollection) {\n                    // Set value\n                    let value = attributesCollection[attribute];\n                    // Check if bool\n                    if (typeof value === \"boolean\")\n                        // Set value\n                        value = value ? \"true\" : \"false\";\n                    else \n                    // Array\n                    if (typeof value === \"object\")\n                        // Set value\n                        value = JSON.stringify(value);\n                    // Set attributes\n                    this.setAttribute(attribute, attributesCollection[attribute]);\n                }\n        };\n        // Set html inner\n        this.innerHTML = \"\";\n    }\n    /** Lifr Cycle Callbacks | Methods\n     ******************************************************\n     */\n    /**\n     * Connected Callback\n     *\n     * Call when element is created\n     *\n     * @rreturn void\n     */\n    connectedCallback() {\n        // Check callable function\n        if (this.innerHtmlCallableFunction !== null)\n            // Set inner content\n            this.innerHTML = this.innerHtmlCallableFunction();\n        // Check innerHtmlContent\n        if (this.innerHtmlContent)\n            // Set inner html\n            this.innerHTML = this.innerHtmlContent;\n    }\n    /**\n     *\n     */\n    static get observedAttributes() {\n        // Set result\n        let result = ['name'];\n        // Return result\n        return result;\n    }\n    /**\n     * Attributes Changes\n     */\n    attributeChangedCallback(name, oldValue, newValue) {\n        console.log(name);\n    }\n}\n/**\n * Content Data\n *\n * Data for callable function\n *\n * @return void\n */\nCrazyelement.contentData = () => {\n    // Set result\n    let result = {};\n    // Push attributes\n    //result.attributes = this.observedAttributes();\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Crazyelement);\n\n\n//# sourceURL=webpack://crazy_demo/../CrazyPHP/src/Front/Library/Crazyelement.ts?");

/***/ }),

/***/ 2160:
/*!****************************************************!*\
  !*** ../CrazyPHP/src/Front/Library/Crazyevents.ts ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Crazyevents)\n/* harmony export */ });\n/**\n * Front\n *\n * Front TS Scrips for your Crazy App\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\n/**\n * Component Register\n *\n * Methods for manage components loaded and to load\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\nclass Crazyevents {\n    /**\n     * Constructor\n     */\n    constructor() {\n        /** Public methods\n         ******************************************************\n         */\n        /**\n         * Register Event Listeners\n         *\n         * Register Click / Double Click... Events on front interface\n         *\n         * @return void\n         */\n        this.registerEventListeners = () => {\n            // Check type\n            if (this.TYPE.length)\n                // Iteration of type\n                for (let type of this.TYPE)\n                    // Register event listener\n                    document.addEventListener(type, this._eventDispatcher, { capture: true });\n        };\n        /** Private methods\n         ******************************************************\n         */\n        /**\n         * Event Dispatcher\n         *\n         * Dispatch current event\n         *\n         * @param e:Event Event catch vu event listener\n         * @return void\n         */\n        this._eventDispatcher = (e) => {\n            // Get target el\n            let targetEl = e.target;\n            // Check tagname\n            let tagName = targetEl.tagName;\n            console.log(tagName);\n            // Check function exits\n            if (typeof this[`${tagName.toLowerCase()}Event`] === \"function\")\n                // Execute\n                this[`${tagName.toLowerCase()}Event`](targetEl);\n        };\n        /** Events By Tag\n         ******************************************************\n         */\n        /**\n         * A Event\n         *\n         * Event on element \"a\"\n         *\n         * @param el\n         */\n        this.aEvent = (el) => {\n            console.log(\"is aaa\");\n        };\n        /** Constants\n         ******************************************************\n         */\n        /** @const TYPE:Array<string>  */\n        this.TYPE = [\"click\"];\n        // Register Events Listeners\n        this.registerEventListeners();\n    }\n}\n\n\n//# sourceURL=webpack://crazy_demo/../CrazyPHP/src/Front/Library/Crazyevents.ts?");

/***/ }),

/***/ 4139:
/*!******************************************************!*\
  !*** ../CrazyPHP/src/Front/Library/Crazylanguage.ts ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Crazylanguage)\n/* harmony export */ });\n/* harmony import */ var _Crazynavigator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Crazynavigator */ 1816);\n/**\n * Front\n *\n * Front TS Scrips for your Crazy App\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\n/**\n * Dependances\n */\n\n/**\n * Language\n *\n * Methods for manage language\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\nclass Crazylanguage {\n    /** Public static methods\n     ******************************************************\n     */\n    /**\n     *\n     * @param shortResponse Return short version of language \"fr\" else \"fr-FR\"\n     */\n    static getNavigatorLanguage(shortResponse = true) {\n        var _a, _b, _c;\n        // Set result\n        let result = shortResponse ? \"en\" : \"en-US\";\n        // Declare variables\n        let shortLanguage = \"\";\n        let longLanguage = \"\";\n        // Get current navigator\n        let currentNavigator = _Crazynavigator__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get();\n        // Check current Navigator\n        if ([\"firefox\"].includes(currentNavigator)) {\n            // Get current language\n            shortLanguage = window.navigator.language;\n            // Set long language\n            longLanguage = (_a = window.navigator.languages.filter(item => item.startsWith(`${shortLanguage}-`)).shift()) !== null && _a !== void 0 ? _a : \"\";\n        }\n        else if ([\"chrome\"].includes(currentNavigator)) {\n            // Get current language\n            longLanguage = window.navigator.language;\n            // Set short langLanguage\n            shortLanguage = (_b = longLanguage.split(\"-\").at(0)) !== null && _b !== void 0 ? _b : \"\";\n        }\n        else if (\"language\" in window.navigator && window.navigator.language) {\n            // Get current language\n            longLanguage = window.navigator.language;\n            // Set short langLanguage\n            shortLanguage = (_c = longLanguage.split(\"-\").at(0)) !== null && _c !== void 0 ? _c : \"\";\n        }\n        else {\n            // Get current language\n            longLanguage = \"en-US\";\n            // Set short langLanguage\n            shortLanguage = \"en\";\n        }\n        // Set result\n        result = shortResponse ? shortLanguage : longLanguage;\n        // Return result\n        return result;\n    }\n}\n\n\n//# sourceURL=webpack://crazy_demo/../CrazyPHP/src/Front/Library/Crazylanguage.ts?");

/***/ }),

/***/ 1816:
/*!*******************************************************!*\
  !*** ../CrazyPHP/src/Front/Library/Crazynavigator.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/**\n * Front\n *\n * Front TS Scrips for your Crazy App\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\nvar _a;\n/**\n * Navigator utilities\n *\n * Methods for manage components loaded and to load\n *\n * @source https://stackoverflow.com/questions/9847580/how-to-detect-safari-chrome-ie-firefox-and-opera-browsers\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\nclass Crazynavigator {\n}\n_a = Crazynavigator;\n/** Public static methods | Validator\n ******************************************************\n */\n/**\n * Is Chrome\n *\n * Chrome 1 - 79\n *\n * @return boolean\n */\nCrazynavigator.isChrome = () => (navigator.userAgent.indexOf(\"Chrome\") != -1);\n/**\n * Is Firefox\n *\n * Firefox 1.0+\n *\n * @return bool\n */\nCrazynavigator.isFirefox = () => (navigator.userAgent.indexOf(\"Firefox\") != -1);\n/**\n * Is Opera\n *\n * Opera 8.0+\n *\n * @return boolean\n */\nCrazynavigator.isOpera = () => ((navigator.userAgent.indexOf(\"Opera\") ||\n    navigator.userAgent.indexOf('OPR')) != -1);\n/**\n * Is Safari\n *\n *  Safari 3.0+ \"[object HTMLElementConstructor]\"\n *\n * @return bool\n */\nCrazynavigator.isSafari = () => (navigator.userAgent.indexOf(\"Safari\") != -1);\n/**\n * Is Internet Explorer\n *\n * Internet Explorer 6-11\n *\n * @return boolean\n */\nCrazynavigator.isIE = () => ((navigator.userAgent.indexOf(\"MSIE\") != -1) ||\n    (\"documentMode\" in document &&\n        !!document.documentMode == true));\n/**\n * Is Edge\n *\n * Edge 20+\n */\nCrazynavigator.isEdge = () => (navigator.userAgent.indexOf(\"Edg\") != -1);\n/**\n * Is Edge\n *\n * Edge (based on chromium) detection\n *\n * @return boolean\n */\nCrazynavigator.isEdgeChromium = () => _a.isChrome() && (navigator.userAgent.indexOf(\"Edg\") != -1);\n/**\n * Blink navigator\n *\n * Blink engine detection\n *\n * @returns boolean\n */\nCrazynavigator.isBlink = () => (_a.isChrome() || _a.isOpera()) && !!window.CSS;\n/**\n * Get Current Navigator\n *\n * @return string\n */\nCrazynavigator.get = () => {\n    // Set result\n    let result = \"\";\n    // Get all methods of current class starting by is\n    let currentMethods = Object\n        .getOwnPropertyNames(_a)\n        .filter(function (item) {\n        return item.startsWith(\"is\");\n    });\n    // Iteration of currentMethods\n    for (let is of currentMethods) {\n        // Check if current assert is true\n        if (_a[is]()) {\n            // Return \n            result = is.substring(2).toLowerCase();\n            // Stop loop\n            break;\n        }\n    }\n    // Check result\n    if (!result)\n        // New error\n        throw new Error('Navigator isn\\'t implement in Crazy Php');\n    // Return result\n    return result;\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Crazynavigator);\n\n\n//# sourceURL=webpack://crazy_demo/../CrazyPHP/src/Front/Library/Crazynavigator.ts?");

/***/ }),

/***/ 2682:
/*!**************************************************!*\
  !*** ../CrazyPHP/src/Front/Library/Crazypage.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ 4539);\n/* harmony import */ var _Pageregister__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Pageregister */ 6844);\n/* harmony import */ var _Crazyrequest__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Crazyrequest */ 8384);\n/* harmony import */ var _Utility_Arrays__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Utility/Arrays */ 4989);\n/* harmony import */ var _Crazyurl__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Crazyurl */ 4368);\n/**\n * Front\n *\n * Front TS Scrips for your Crazy App\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\nvar _a;\n\n/**\n * Dependances\n */\n\n\n\n\n/**\n * Crazy Page\n *\n * Methods for build your page script\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\nclass Crazypage {\n    /**\n     * Constructor\n     */\n    constructor(options = null) {\n        /** Private Parameters\n         ******************************************************\n         */\n        /**\n         * Page register\n         */\n        this.pageRegister = null;\n        /** Private methods\n         ******************************************************\n         */\n        /**\n         * Set current page\n         *\n         * @return void\n         */\n        this.setCurrentPage = () => {\n        };\n        /**\n         * Dispatch Events\n         *\n         * Dispatch all new events\n         *\n         * @return void\n         */\n        this.dispatchEvents = () => {\n        };\n        /**\n         * Dispatch Event\n         *\n         * Dispatch one event\n         *\n         * @param event:string\n         * @param callable:CallableFunction\n         * @return void\n         */\n        this.dispatchEvent = (event, callable) => {\n        };\n        /**\n         * convertToUrl\n         *\n         * @param path Path to the url\n         * @param base Base of the path\n         * @return URL\n         */\n        this.convertToUrl = (path = \"\", base = window.location.href) => {\n            // Declare variables\n            let result;\n            // Check path start with /\n            if (path.startsWith(\"/\"))\n                // New url with base\n                result = new URL(path, base);\n            else\n                // New url\n                result = new URL(path);\n            // Return result\n            return result;\n        };\n        /** Public methods partial\n         ******************************************************\n         */\n        /**\n         * Get All Partials\n         *\n         * @returns {Array<Object>}\n         */\n        this.getAllPartials = () => {\n            var _b, _c;\n            // Declare result\n            let result = [];\n            // Check partials\n            if (Array.isArray((_b = this.options) === null || _b === void 0 ? void 0 : _b.partials))\n                // Fill result\n                result = (_c = this.options) === null || _c === void 0 ? void 0 : _c.partials;\n            // Return result\n            return result;\n        };\n        /**\n         * Get Partial By Name\n         *\n         * @returns {Object|null}\n         */\n        this.getPartial = (name) => {\n            // Prepare result\n            let result = null;\n            // Check name\n            if (name) {\n                // Get partials\n                let partials = this.getAllPartials();\n                // Filter\n                let filtered = _Utility_Arrays__WEBPACK_IMPORTED_MODULE_2__[\"default\"].filterByKey(partials, \"name\", name);\n                // Check filtered\n                if (Array.isArray(filtered) && filtered.length)\n                    // Get first element found\n                    result = filtered.shift();\n            }\n            // Return result\n            return result;\n        };\n        /** Public methods\n         ******************************************************\n         */\n        /**\n         * Redirect To\n         *\n         * Redirect to another page\n         * @param path:string Name of the page to redirect to\n         * @param reloadPage:boolean Force a real reload of the page\n         * @return result\n         */\n        this.redirectTo = (path = \"\", reloadPage = false) => {\n            // Declare variables\n            let url = this.convertToUrl(path);\n            // Set result\n            let result = false;\n            // Check if reload page\n            if (reloadPage) {\n                // Set new location\n                window.location.assign(url);\n                // Return result\n                return result;\n            }\n            // Check page redirect\n            if (this.pageRegister === null)\n                // New page redirect\n                this.pageRegister = new _Pageregister__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n            // New redirection\n            this.pageRegister.redirect(path);\n            // Return result\n            return result;\n        };\n        /**\n         * Redirect By Name\n         *\n         * Redirect to page by name\n         *\n         * @param name:string Name of the page -> script with ask to server the path\n         * @param options:RedirectByNameOptions Option for define arguments / mimetype...\n         * @param reloadPage:boolean Force a real reload of the page\n         * @return\n         */\n        this.redirectByName = (name, options, reloadPage = false) => {\n            // Prepare query\n            let query = {\n                filters: {\n                    name: name\n                },\n                options: {}\n            };\n            // Check options arguments\n            if (\"arguments\" in options && options.arguments !== null) {\n                // Add options\n                query[\"options\"].arguments = options.arguments;\n            }\n            // New request\n            new _Crazyrequest__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\"/api/v2/Router/filter\", {\n                method: \"GET\",\n                responseType: options.mimetype,\n                from: \"internal\",\n                ignoreHash: true\n            }).fetch(query)\n                .then(result => {\n                var _b;\n                // Check result\n                if (result &&\n                    \"results\" in result &&\n                    Array.isArray(result.results) &&\n                    result.results.length === 1 &&\n                    \"name\" in result.results[0] &&\n                    \"path\" in result.results[0]) {\n                    // Load new page\n                    (_b = window[\"Crazyobject\"][\"pages\"]) === null || _b === void 0 ? void 0 : _b.loadInternalPage(result.results[0]);\n                }\n                else {\n                    throw new Error(`No page corresponding to \"${name}\" in the router collection`);\n                }\n            });\n        };\n        /** Public methods | State\n         ******************************************************\n         */\n        /**\n         * Get Page State\n         *\n         * Load current page state\n         *\n         * @param forceRefresh:boolean\n         * @return Promise(Object|Array<any>)\n         */\n        this.getPageState = (...args_1) => (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(this, [...args_1], void 0, function* (forceRefresh = false) {\n            // Set result\n            let result = {};\n            // Check if state in options\n            if (forceRefresh ||\n                this.options === null ||\n                this.options.state === undefined) {\n                // Get current url\n                let url = _Crazyurl__WEBPACK_IMPORTED_MODULE_3__[\"default\"].get(true);\n                // New query\n                let query = new _Crazyrequest__WEBPACK_IMPORTED_MODULE_1__[\"default\"](`${url}?catch_state=true`, {\n                    method: \"get\",\n                    cache: false,\n                    responseType: \"json\",\n                    from: \"internal\"\n                });\n                // Rerurn result\n                result = query.fetch()\n                    .then((data) => {\n                    // Check options\n                    if (this.options && this.options.status) {\n                        // Set state\n                        this.options.state = data;\n                        // Set state status\n                        this.options.status.hasState = true;\n                        // Return result\n                        return this.options.state;\n                    }\n                    // Else return data\n                    return data;\n                });\n            }\n            else {\n                // Set result\n                // @ts-ignore\n                result = this.options.state;\n            }\n            // Return result\n            return result;\n        });\n        /**\n         * Set Options\n         */\n        this.options = options;\n        /**\n         * Set Current Page\n         */\n        this.setCurrentPage();\n        /**\n         * Dispatch Events\n         */\n        this.dispatchEvents();\n    }\n}\n_a = Crazypage;\n/**\n * @param html:string\n * Duplicate of the class name because build change name of class\n */\nCrazypage.html = null;\n/**\n * @param css:string\n * Duplicate of the class name because build change name of class\n */\nCrazypage.css = null;\n/**\n * Get Class Name\n *\n * @return string\n */\nCrazypage.getClassName = () => {\n    // Return name\n    return _a.className;\n};\n/** Private methods | Utilities\n ******************************************************\n */\n/**\n * Load Script\n *\n * Load JS Script after page loaded\n *\n * @source https://www.educative.io/answers/how-to-dynamically-load-a-js-file-in-javascript\n *\n * @param url:string Url to load\n * @param async\n */\nCrazypage.loadScript = (url, async = true, type = \"text/javascript\") => {\n    // Return promise\n    return new Promise((resolve, reject) => {\n        // Try\n        try {\n            // Script\n            const scriptEle = document.createElement(\"script\");\n            // Set type\n            scriptEle.type = type;\n            // Set async\n            scriptEle.async = async;\n            // Set url\n            scriptEle.src = url;\n            // Event if loaded\n            scriptEle.addEventListener(\"load\", (ev) => {\n                // Set resolve response\n                resolve({ status: true });\n            });\n            // Event if error\n            scriptEle.addEventListener(\"error\", (ev) => {\n                // Set resolve response\n                reject({\n                    status: false,\n                    message: `Failed to load the script ${url}`\n                });\n            });\n            // Add element in body\n            document.body.appendChild(scriptEle);\n            // Error\n        }\n        catch (error) {\n            // Reject\n            reject(error);\n        }\n    });\n};\n/** Public static methods\n ******************************************************\n */\n/**\n * Load Action\n *\n * Load Action if js file using the page name and the hash stored.\n * Template use : `/dist/page/app/${name}.${hash}.js`\n *\n * @deprecated\n *\n * @return Promise\n */\nCrazypage.loadAction = (name, async = true) => {\n    // Get hash\n    let hash = \"\";\n    // Check global\n    if (\"Crazyobject\" in window && typeof window.Crazyobject == \"object\" && window.Crazyobject !== null)\n        // Set hash\n        hash = window.Crazyobject[\"getHash\"]();\n    else\n        // Error\n        new Error(\"Crazyobject isn't valid, can't retrieve the hash. Try to reload the page\");\n    // Set url\n    let url = `/dist/page/app/${name}.${hash}.js`;\n    // console.log(`Url loaded : \"${url}\"`);\n    // Load script\n    return _a.loadScript(url, async);\n};\n/**\n * Load Page State\n *\n * Load current page state\n *\n * @param url:string\n * @return Promise(Object|Array<any>)\n */\nCrazypage.loadPageState = (...args_1) => (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, [...args_1], void 0, function* (url = \"\") {\n    // Check url\n    if (!url)\n        // Get current url\n        url = _Crazyurl__WEBPACK_IMPORTED_MODULE_3__[\"default\"].get(true);\n    // New query\n    let query = new _Crazyrequest__WEBPACK_IMPORTED_MODULE_1__[\"default\"](`${url}?catch_state=true`, {\n        method: \"get\",\n        cache: false,\n        responseType: \"json\",\n        from: \"internal\"\n    });\n    // Rerurn result\n    return query.fetch();\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Crazypage);\n\n\n//# sourceURL=webpack://crazy_demo/../CrazyPHP/src/Front/Library/Crazypage.ts?");

/***/ }),

/***/ 7784:
/*!*****************************************************!*\
  !*** ../CrazyPHP/src/Front/Library/Crazypartial.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/**\n * Front\n *\n * Front TS Scrips for your Crazy App\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\n/**\n * Crazy Partial\n *\n * Methods for build your partial script\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\nclass Crazypartial {\n    /**\n     * Constructor\n     *\n     * @param input\n     */\n    constructor(input) {\n        /** Public methods\n         ******************************************************\n         */\n        /**\n         * Enable\n         */\n        this.enable = () => {\n        };\n        /**\n         * Enable\n         */\n        this.disable = () => {\n        };\n        // Set input\n        this.input = input;\n    }\n}\n/**\n * @param html:string\n * Duplicate of the class name because build change name of class\n */\nCrazypartial.html = null;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Crazypartial);\n\n\n//# sourceURL=webpack://crazy_demo/../CrazyPHP/src/Front/Library/Crazypartial.ts?");

/***/ }),

/***/ 8384:
/*!*****************************************************!*\
  !*** ../CrazyPHP/src/Front/Library/Crazyrequest.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Crazyrequest)\n/* harmony export */ });\n/* harmony import */ var _Crazycache__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Crazycache */ 7947);\n/* harmony import */ var object_hash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! object-hash */ 2618);\n/* harmony import */ var object_hash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(object_hash__WEBPACK_IMPORTED_MODULE_1__);\n/**\n * Front\n *\n * Front TS Scrips for your Crazy App\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\n\n\n/**\n * Crazy Request\n *\n * Methods for fetch http request\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\nclass Crazyrequest {\n    /**\n     * Constructor\n     */\n    constructor(url, options = {}) {\n        /** @var header */\n        this.header = null;\n        /** @var options */\n        this.options = {};\n        /** @var defaultOptions */\n        this.defaultOptions = {\n            method: \"get\",\n            header: {},\n            cache: false,\n            responseType: \"json\",\n            responseEncoding: \"utf8\",\n            from: \"internal\"\n        };\n        /** @var getParameters */\n        this.getParameters = \"\";\n        /** Public Methods\n         ******************************************************\n         */\n        /**\n         * Fetch\n         *\n         * Fetch current request\n         *\n         * @param body\n         * @return Promise<Response>\n         */\n        this.fetch = (body = undefined) => {\n            // Clean last response & last response type\n            this.lastResponse = undefined;\n            this.lastResponseContentType = undefined;\n            // Prepare request options\n            this.pushBodyInRequestOptions(body);\n            // Set url\n            let url = this.getUrl(true);\n            // Prepare request\n            let request = new Request(url, this.requestOptions);\n            // Get key of current request\n            let key = this.options.cache ? this.getKey(request, body) : null;\n            // Check if cache exists\n            if (key) {\n                // New cache\n                let cache = new _Crazycache__WEBPACK_IMPORTED_MODULE_0__[\"default\"](\"request\");\n                // Check if item has current key\n                let cachedData = cache.get(key);\n                // Check cachedData\n                if (cachedData !== null)\n                    // Return current cached data\n                    return cachedData;\n            }\n            // Return fetch result\n            return fetch(request)\n                .then(result => {\n                // Set last response\n                this.lastResponse = result;\n                // Check Crazy Hash\n                if (this.options.from === \"internal\" && result.headers.get(\"Crazy-Hash\")) {\n                    // Check if ignore hash\n                    if (!(\"ignoreHash\" in this.options && this.options.ignoreHash === true)) {\n                        // Get crazy hash\n                        let crazyHash = result.headers.get(\"Crazy-Hash\");\n                        // Check hash\n                        if (crazyHash) {\n                            // Set response hash\n                            this.lastResponseCrazyHash = crazyHash;\n                            // set hash in global\n                            window.Crazyobject.hash.set(crazyHash);\n                        }\n                    }\n                }\n                // Check content type\n                if (result.headers.has(\"Content-Type\")) {\n                    // Set content type\n                    let contentType = result.headers.get(\"Content-Type\");\n                    // Check if json\n                    if (contentType !== null && contentType.includes(\"application/json\")) {\n                        // This last response type\n                        this.lastResponseContentType = contentType;\n                        // Return json\n                        return result.json();\n                    }\n                }\n                // Return null\n                return null;\n            });\n        };\n        /** Private Methods | Fetch\n         ******************************************************\n         */\n        /**\n         * Ger Json\n         */\n        this.getJson = (result) => { result.value = result.json(); };\n        /** Private Methods\n         ******************************************************\n         */\n        /**\n         * Get Key\n         *\n         * Get Key from request\n         *\n         * @param request:Request\n         * @return string\n         */\n        this.getKey = (request, body) => {\n            // Declare result\n            let result;\n            // Declare result\n            let object = {\n                request: request,\n                body: body\n            };\n            // Prepare object to avoid type error inside object\n            object = JSON.parse(JSON.stringify(object));\n            // Hash object\n            result = object_hash__WEBPACK_IMPORTED_MODULE_1___default()(object);\n            // Return result\n            return result;\n        };\n        /**\n         * Prepare Given Options\n         *\n         * @param options:CrazyFetchOption\n         * @return void\n         */\n        this.prepareGivenOptions = (options) => {\n            // Copy default options in instance options\n            this.options = Object.assign({}, this.defaultOptions);\n            // Check options given isn't empty\n            if (Object.keys(options).length > 0)\n                // Iteration of options\n                for (let option in options)\n                    // Push into instance options\n                    this.options[option] = options[option];\n        };\n        /**\n         * Prepare Request Options\n         *\n         * @param url:string\n         * @return void\n         */\n        this.prepareRequestOptions = () => {\n            // Check requestOptions\n            if (this.requestOptions === undefined)\n                // Switch to object\n                this.requestOptions = {};\n            // Set method\n            this.requestOptions.method = this.options.method;\n            // New header\n            let headers = new Headers();\n            // Set header\n            if (this.options.header !== undefined && Object.keys(this.options.header).length > 0)\n                // Iteration of header\n                for (let key of Object.keys(this.options.header))\n                    // Append to header\n                    headers.append(key, this.options.header[key]);\n            // Push header in options\n            this.requestOptions.headers = headers;\n            // Check mode\n            if (this.options.from === \"internal\") {\n                // Set mode\n                this.requestOptions.mode = \"same-origin\";\n                // Set credentials\n                this.requestOptions.credentials = \"same-origin\";\n            }\n            else if (this.options.from === \"external\") {\n                // Set mode\n                this.requestOptions.mode = \"no-cors\";\n            }\n            // Check cache\n            if (this.options.cache == false) {\n                // Push pragma\n                this.requestOptions.headers.set(\"Pragma\", \"no-cache\");\n                // Push Cache-Control\n                // this.requestOptions.headers.set(\"Cache-Control\", \"no-cache\");\n                this.requestOptions.headers.set(\"Cache-Control\", \"no-store\");\n            }\n        };\n        /**\n         * Push Body In Request Options\n         *\n         * @param body body:BodyInit|undefined\n         * @return void\n         */\n        this.pushBodyInRequestOptions = (body) => {\n            var _a, _b, _c;\n            // Check requestOptions\n            if (this.requestOptions === undefined)\n                // Stop function\n                throw new Error('Request options have te be already set before push body content !');\n            // Check if body already set\n            if (this.requestOptions.body !== undefined)\n                // Reset body\n                this.requestOptions.body = \"\";\n            // Check body\n            if (body !== undefined) {\n                // Check method get or head\n                // if((this.requestOptions.method ?? \"GET\") in [\"GET\", \"HEAD\", \"get\", \"head\"]){\n                if ([\"GET\", \"HEAD\", \"get\", \"head\"].includes((_a = this.requestOptions.method) !== null && _a !== void 0 ? _a : \"get\")) {\n                    // Check body is object\n                    if (typeof body === \"object\") {\n                        // Convert result to URLSearchParams\n                        var getParameters = Crazyrequest.toQueryString(body);\n                        // Check get parameters \n                        if (this.getParameters)\n                            // Append value\n                            this.getParameters += `&${getParameters}`;\n                        else\n                            // Set value\n                            this.getParameters = getParameters;\n                    }\n                }\n                else \n                // For post\n                if ([\"POST\", \"post\"].includes((_b = this.requestOptions.method) !== null && _b !== void 0 ? _b : \"\")) {\n                    // Declare body content\n                    let bodyContent = null;\n                    // Check if formdata\n                    if (body instanceof FormData) {\n                        // Fill body content\n                        bodyContent = body;\n                        /* // Check header is defined\n                        if(!(this.requestOptions.headers instanceof Headers))\n    \n                            // Init headers\n                            this.requestOptions.headers = new Headers();\n    \n                        // Fill headers\n                        this.requestOptions.headers.append('Content-Type', 'multipart/form-data'); */\n                    }\n                    else \n                    // Push object\n                    if (typeof body === \"object\") {\n                        // Fill body content\n                        bodyContent = JSON.stringify(body);\n                        // Check header is defined\n                        if (!(this.requestOptions.headers instanceof Headers))\n                            // Init headers\n                            this.requestOptions.headers = new Headers();\n                        // Fill headers\n                        this.requestOptions.headers.set('Content-Type', 'application/json');\n                    }\n                    // Check body content\n                    if (bodyContent !== null)\n                        // Set body\n                        // @ts-ignore\n                        this.requestOptions.body = bodyContent;\n                }\n                else \n                // For put\n                if ([\"PUT\", \"put\"].includes((_c = this.requestOptions.method) !== null && _c !== void 0 ? _c : \"\")) {\n                    // Declare body content\n                    let bodyContent = null;\n                    // Check if formdata\n                    if (body instanceof FormData) {\n                        // Fill body content\n                        bodyContent = body;\n                    }\n                    // Check body content\n                    if (bodyContent !== null)\n                        // Set body\n                        this.requestOptions.body = bodyContent;\n                    // For other method\n                }\n                else {\n                    // Declare body content\n                    let bodyContent = null;\n                    // Check body given is object or array\n                    if (Array.isArray(body) || typeof body === \"object\")\n                        // Convert body to json\n                        bodyContent = JSON.stringify(body);\n                    else \n                    // Check if is string\n                    if (typeof body === \"string\")\n                        // Set body content\n                        bodyContent = body;\n                    // Check body content\n                    if (bodyContent !== null)\n                        // Set body\n                        this.requestOptions.body = bodyContent;\n                }\n            }\n        };\n        /**\n         * Get Url\n         *\n         * Get Url of the current request\n         *\n         * @param withQueryParameters:boolean Get Query Parameters with it\n         * @return string\n         */\n        this.getUrl = (withQueryParameters = false) => {\n            // Set result\n            var result;\n            result = (this.getParameters && withQueryParameters)\n                ? `${this.url}?${this.getParameters}`\n                : this.url;\n            // Return result\n            return result;\n        };\n        // Set url\n        this.url = url;\n        // Prepare options\n        this.prepareGivenOptions(options);\n        // Prepare request options\n        this.prepareRequestOptions();\n    }\n    /** Public static Methods\n     ******************************************************\n     */\n    /**\n     * To Query String\n     *\n     * Convert object to query string\n     *\n     * @source https://stackoverflow.com/questions/26084733/convert-multidimensional-object-to-query-string\n     *\n     * @param obj\n     * @param prefix\n     * @returns\n     */\n    static toQueryString(obj, prefix = \"\") {\n        var str = [], k, v;\n        for (var p in obj) {\n            if (!obj.hasOwnProperty(p)) {\n                continue;\n            } // skip things from the prototype\n            if (~p.indexOf('[')) {\n                k = prefix ? prefix + \"[\" + p.substring(0, p.indexOf('[')) + \"]\" + p.substring(p.indexOf('[')) : p;\n                // only put whatever is before the bracket into new brackets; append the rest\n            }\n            else {\n                k = prefix ? prefix + \"[\" + p + \"]\" : p;\n            }\n            v = obj[p];\n            var temp = typeof v == \"object\"\n                ? Crazyrequest.toQueryString(v, k)\n                : encodeURIComponent(k) + \"=\" + encodeURIComponent(v);\n            str.push(temp);\n        }\n        return str.join(\"&\");\n    }\n}\n\n\n//# sourceURL=webpack://crazy_demo/../CrazyPHP/src/Front/Library/Crazyrequest.ts?");

/***/ }),

/***/ 7764:
/*!***************************************************!*\
  !*** ../CrazyPHP/src/Front/Library/Crazystate.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Crazystate)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ 4539);\n/* harmony import */ var localforage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! localforage */ 8838);\n/* harmony import */ var localforage__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(localforage__WEBPACK_IMPORTED_MODULE_0__);\n/**\n * Front\n *\n * Front TS Scrips for your Crazy App\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\n\n\n/**\n * Crazy State\n *\n * Methods for store and manage your glable, system, local and component states\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\nclass Crazystate {\n    /**\n     * Constructor\n     *\n     * @param options:LoaderPageOptions Options with all page details\n     */\n    constructor(input) {\n        /** Private parameters | Store\n         ******************************************************\n         */\n        /** @var globalStore:LocalForage|null */\n        this.globalStore = null;\n        /** @var systemStore:LocalForage|null */\n        this.systemStore = null;\n        /** @var localStore:LocalForage|null */\n        this.localStore = null;\n        /** @var componentStore:LocalForage|null */\n        this.componentStore = null;\n        /** Private parameters | Database\n         ******************************************************\n         */\n        /** Database Name */\n        this.databaseName = \"crazyFrontDatabase\";\n        // Create global store\n        this.globalStore = localforage__WEBPACK_IMPORTED_MODULE_0__.createInstance({\n            name: this.databaseName,\n            storeName: 'globalStore',\n            description: 'Global state store'\n        });\n        // Create system store\n        this.systemStore = localforage__WEBPACK_IMPORTED_MODULE_0__.createInstance({\n            name: this.databaseName,\n            storeName: 'systemStore',\n            description: 'System state store'\n        });\n        // Create local store\n        this.localStore = localforage__WEBPACK_IMPORTED_MODULE_0__.createInstance({\n            name: this.databaseName,\n            storeName: 'localStore',\n            description: 'Local state store'\n        });\n        // Create local store\n        this.componentStore = localforage__WEBPACK_IMPORTED_MODULE_0__.createInstance({\n            name: this.databaseName,\n            storeName: 'componentStore',\n            description: 'Component state store'\n        });\n        // Set global state\n        this.globalStore\n            .ready()\n            .then(() => (this._setGlobalState(input)));\n        // Set system\n        this.systemStore\n            .ready()\n            .then(() => this._setSystemState());\n    }\n    /** Public methods | Global\n     ******************************************************\n     */\n    /**\n     * Set Global State\n     *\n     * @param input:CrazyObjectInput\n     * @return Promise<void>\n     */\n    _setGlobalState(input) {\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(this, void 0, void 0, function* () {\n            // Check input\n            if (input.globalStateCollection && Object.keys(input.globalStateCollection).length)\n                // Iteration of values\n                for (let key in input.globalStateCollection)\n                    // Set value\n                    yield this.setItemIfNot(key, input.globalStateCollection[key], this.globalStore);\n        });\n    }\n    /** Public methods | System\n     ******************************************************\n     */\n    /**\n     * Set System State\n     *\n     * @return void\n     */\n    _setSystemState() {\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(this, void 0, void 0, function* () {\n        });\n    }\n    /** Public methods | Local\n     ******************************************************\n     */\n    /** Public methods | Dynamic\n     ******************************************************\n     */\n    /** Public methods\n     ******************************************************\n     */\n    /**\n     * Set Item If Not\n     */\n    setItemIfNot(key_1, value_1) {\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(this, arguments, void 0, function* (key, value, store = this.globalStore) {\n            // Try\n            try {\n                // Ensure store is ready\n                yield (store === null || store === void 0 ? void 0 : store.ready());\n                // Get current value\n                const currentValue = yield (store === null || store === void 0 ? void 0 : store.getItem(key));\n                // If currentValue is not present, set the new value\n                if (!currentValue)\n                    // Return set value\n                    return yield (store === null || store === void 0 ? void 0 : store.setItem(key, value));\n                // If currentValue exists, return it\n                return currentValue;\n            }\n            catch (error) {\n                console.error(\"Error in setItemIfNot:\", error);\n                throw error;\n            }\n        });\n    }\n}\n\n\n//# sourceURL=webpack://crazy_demo/../CrazyPHP/src/Front/Library/Crazystate.ts?");

/***/ }),

/***/ 4368:
/*!*************************************************!*\
  !*** ../CrazyPHP/src/Front/Library/Crazyurl.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/**\n * Front\n *\n * Front TS Scrips for your Crazy App\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\n/**\n * Crazy Url\n *\n * Methods for manipulate URL of the current page\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\nclass Crazyurl {\n}\n/** Public methods\n ******************************************************\n */\n/**\n * Set\n *\n * Set pathname\n *\n * @param newPathname:string New pathname : exemple /home/page/\n * @return void\n */\nCrazyurl.set = (newPathname = \"\") => {\n    // Convert path to url if is a string\n    if (typeof newPathname === \"string\") {\n        newPathname = new URL(newPathname);\n    }\n    // Push new pathname\n    window.history.pushState({}, \"\", newPathname.toString());\n};\n/**\n * Get\n *\n * Get current url\n *\n * @param clearParameters Clear get parameters\n * @return {string}\n */\nCrazyurl.get = (clearParameters = false) => {\n    // Prepare result\n    let result = window.location.href;\n    // Check if clear parameters\n    if (clearParameters) {\n        // New url object\n        const urlObj = new URL(result);\n        // Set result\n        result = urlObj.origin + urlObj.pathname;\n    }\n    // Return result\n    return result;\n};\n/**\n * Qet Query Parameters\n *\n * Get all query parameters from the current URL.\n * @returns {Record<string, string>} An object with key-value pairs representing query parameters.\n */\nCrazyurl.getQueryParameters = () => {\n    // Set result\n    let result = {};\n    // Get params\n    const searchParams = new URLSearchParams(window.location.search);\n    // Iteration params\n    searchParams.forEach((value, key) => {\n        // Fill result\n        result[key] = value;\n    });\n    // Return result\n    return result;\n};\n/**\n * Add Query Parameters\n *\n * Add Query Parameters with support for booleans, null values, empty strings, and keys without values.\n *\n * @param params Parameters to add\n * @param prefix Optional Prefix (for recursive loop)\n * @return string\n */\nCrazyurl.addQueryParameters = (params, prefix) => {\n    // Search Parameters instances\n    const searchParams = new URLSearchParams(window.location.search);\n    // Loop entries\n    for (const [key, value] of Object.entries(params)) {\n        // Get current key\n        const paramKey = prefix ? `${prefix}[${key}]` : key;\n        // Check if value is an object (not null) for recursion\n        if (typeof value === \"object\" && value !== null) {\n            // Recursive call for nested objects\n            Crazyurl.addQueryParameters(value, paramKey);\n        }\n        else if (typeof value === \"boolean\") {\n            // Check already has param key\n            !paramKey.includes(\"[]\") && searchParams.has(paramKey)\n                // Set \n                ? searchParams.set(paramKey, value ? \"true\" : \"false\")\n                // Append\n                : searchParams.append(paramKey, value ? \"true\" : \"false\");\n        }\n        else if (value === null || value === \"\") {\n            // Check already has param key\n            !paramKey.includes(\"[]\") && searchParams.has(paramKey)\n                // Set \n                ? searchParams.set(paramKey, \"\")\n                // Append \n                : searchParams.append(paramKey, \"\");\n        }\n        else {\n            // Check already has param key\n            !paramKey.includes(\"[]\") && searchParams.has(paramKey)\n                // Set \n                ? searchParams.set(paramKey, value)\n                // Append \n                : searchParams.append(paramKey, value);\n        }\n    }\n    // Generate new URL with query parameters\n    const newUrl = `${window.location.origin}${window.location.pathname}?${searchParams.toString()}`;\n    // Set the URL (you may have a function for this)\n    Crazyurl.set(newUrl);\n    // Return the new URL\n    return newUrl;\n};\n/** Public static methods\n ******************************************************\n */\n/**\n * Remove Query Parameters\n *\n * Remove Query Parameters\n *\n * @param params:string|string[\n * @returns {void}\n */\nCrazyurl.removeQueryParameters = (params) => {\n    // Check params\n    if (params && params.length) {\n        // Check if string\n        if (typeof params === \"string\")\n            // Convert to array\n            params = [params];\n        // New search param instance\n        var searchParams = new URLSearchParams(window.location.search);\n        // Set any change\n        let anyChange = false;\n        // Iteration params\n        for (let paramNameToRemove of params)\n            // Check params is the url\n            if (searchParams.has(paramNameToRemove)) {\n                // Remove param\n                searchParams.delete(paramNameToRemove);\n                // Set any change\n                anyChange = true;\n            }\n        // Check any change \n        if (anyChange) {\n            // Set new url\n            const newUrl = `${window.location.pathname}?${searchParams.toString()}`;\n            // Push in browser\n            window.history.pushState(null, \"\", newUrl);\n        }\n    }\n};\n/**\n * Is Same Domain\n *\n * Check if given url is same domain\n *\n * @param href\n * @returns boolean\n */\nCrazyurl.isSameDomain = (href) => {\n    // Declare result\n    let result = false;\n    // Check href\n    if (!href)\n        // Return result\n        return result;\n    // Try\n    try {\n        // URL object\n        const hrefUrl = new URL(href);\n        // Compare the origins of the two URLs\n        result = window.location.origin === hrefUrl.origin;\n        // Catch error\n    }\n    catch (error) {\n        // Invalid URL\n        result = false;\n    }\n    // Return result\n    return result;\n};\n/**\n * To Query String\n *\n * Convert multidimensional object to query string\n *\n * @source https://stackoverflow.com/questions/26084733/convert-multidimensional-object-to-query-string\n * @param obj\n * @param prefix\n * @returns {string}\n */\nCrazyurl.toQueryString = (obj, prefix = \"\") => {\n    var str = [], k, v;\n    for (var p in obj) {\n        if (!obj.hasOwnProperty(p)) {\n            continue;\n        } // skip things from the prototype\n        if (~p.indexOf('[')) {\n            k = prefix ? prefix + \"[\" + p.substring(0, p.indexOf('[')) + \"]\" + p.substring(p.indexOf('[')) : p;\n            // only put whatever is before the bracket into new brackets; append the rest\n        }\n        else {\n            k = prefix ? prefix + \"[\" + p + \"]\" : p;\n        }\n        v = obj[p];\n        // @ts-ignore\n        str.push(typeof v == \"object\" ?\n            Crazyurl.toQueryString(v, k) :\n            encodeURI(k) + \"=\" + encodeURIComponent(v));\n    }\n    return str.join(\"&\");\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Crazyurl);\n\n\n//# sourceURL=webpack://crazy_demo/../CrazyPHP/src/Front/Library/Crazyurl.ts?");

/***/ }),

/***/ 4623:
/*!*****************************************************!*\
  !*** ../CrazyPHP/src/Front/Library/Current/Page.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Page)\n/* harmony export */ });\n/* harmony import */ var _Loader_Page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../Loader/Page */ 7211);\n/* harmony import */ var _Error_Page__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../Error/Page */ 6506);\n/**\n * Current\n *\n * Front TS Scrips for manage current elements\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\n/**\n * Dependances\n */\n\n\n/**\n * Crazy Page Current\n *\n * Methods for manage current page\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\nclass Page {\n    /**\n     * Constructor\n     */\n    constructor() {\n        /** Private parameters\n         ******************************************************\n         */\n        /** @param current:null|LoaderPageOptions */\n        this.current = null;\n        /** Methods | public\n         ******************************************************\n         */\n        /**\n         * Get\n         *\n         * Get current page option\n         *\n         * @return null|LoaderPageOptions\n         */\n        this.get = () => {\n            // Set result\n            let result = this.current;\n            // Return result\n            return result;\n        };\n        /**\n         * Set\n         *\n         * Set current page option\n         *\n         * @return void\n         */\n        this.set = (page) => {\n            // Set current\n            this.current = page;\n        };\n        /**\n         * Execute\n         *\n         * New instance of the current page\n         *\n         * @return void\n         */\n        this.execute = () => {\n            // Check this current\n            if (this.current === null)\n                // New error\n                throw new _Error_Page__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\"Pleae set a page before execute it\");\n            // Load current page\n            new _Loader_Page__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this.current);\n        };\n        /**\n         * Reload Page\n         */\n        this.reload = () => {\n        };\n        // Check i it is the first page registered\n        if (this.get() === null) {\n            // Get all page registered\n            let allPageRegistered = window.Crazyobject.registerPage.getAll();\n            // Get registered page\n            if (allPageRegistered.length === 0) {\n                // Function for event\n                let registerFirstcurrentPageEvent = (e) => {\n                    // Get first page\n                    let page = window.Crazyobject.registerPage.getAll().slice()[0];\n                    // Prepare loader page options\n                    let pageOptions = {\n                        name: page.className,\n                        // @ts-ignore\n                        scriptLoaded: page.classReference,\n                        status: {\n                            \"scriptRegistered\": true,\n                            \"contentLoaded\": true,\n                            \"styleLoaded\": true,\n                            \"urlLoaded\": true,\n                            \"urlUpdated\": true\n                        }\n                    };\n                    // Page loader\n                    new _Loader_Page__WEBPACK_IMPORTED_MODULE_0__[\"default\"](pageOptions);\n                    // New event listener\n                    document.removeEventListener(\"onFirstPageRegistered\", registerFirstcurrentPageEvent);\n                };\n                // New event listener\n                document.addEventListener(\"onFirstPageRegistered\", registerFirstcurrentPageEvent);\n            }\n            else {\n                // Get first page\n                let page = window.Crazyobject.registerPage.getAll()[0];\n                // Page loader\n                new _Loader_Page__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n                    name: page.className,\n                    // @ts-ignore\n                    scriptLoaded: page,\n                    status: {\n                        \"scriptRegistered\": true,\n                        \"contentLoaded\": true,\n                        \"styleLoaded\": true,\n                        \"urlLoaded\": true,\n                        \"urlUpdated\": true\n                    }\n                });\n            }\n        }\n    }\n}\n\n\n//# sourceURL=webpack://crazy_demo/../CrazyPHP/src/Front/Library/Current/Page.ts?");

/***/ }),

/***/ 3611:
/*!*************************************************!*\
  !*** ../CrazyPHP/src/Front/Library/Dom/Root.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _Error_Page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../Error/Page */ 6506);\n/**\n * Dom\n *\n * Front TS Scrips for load elements\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\n/**\n * Dependances\n */\n\n/**\n * Root\n *\n * Methods for manipulate dom root\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\nclass Root {\n}\n/** Public Constants\n ******************************************************\n */\n/** @var id:string Id of the root\n *\n */\nRoot.id = \"crazy-root\";\n/** Public static methods\n ******************************************************\n */\n/**\n * Get ID\n *\n * Get Id of the root element\n *\n * @return string\n */\nRoot.getId = () => {\n    // Check id\n    if (!Root.id)\n        // New error\n        throw new _Error_Page__WEBPACK_IMPORTED_MODULE_0__[\"default\"](\"ID of the root is not set.\");\n    // Return id\n    return Root.id;\n};\n/**\n * Get El\n *\n * Get Root Element\n *\n * @return HTMLElement\n */\nRoot.getEl = () => {\n    // Get id\n    const id = Root.id;\n    // Get el\n    let result = document.getElementById(id);\n    // Check result is null\n    if (result === null)\n        // New error\n        throw new _Error_Page__WEBPACK_IMPORTED_MODULE_0__[\"default\"](`Element \"#${id}\" does not exist in the dom.`);\n    return result;\n};\n/**\n * Set Content\n *\n * Set Content of the Root\n *\n * @return void\n */\nRoot.setContent = (content = \"\") => {\n    // Get crazy root\n    let rootEl = Root.getEl();\n    // Set content dom\n    let contentDom = document.createRange().createContextualFragment(content);\n    // Set content\n    rootEl.replaceWith(contentDom);\n    // Return content\n    return rootEl;\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Root);\n\n\n//# sourceURL=webpack://crazy_demo/../CrazyPHP/src/Front/Library/Dom/Root.ts?");

/***/ }),

/***/ 6506:
/*!***************************************************!*\
  !*** ../CrazyPHP/src/Front/Library/Error/Page.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Page)\n/* harmony export */ });\n/**\n * Error\n *\n * Front TS Scrips for manage error\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\n/**\n * Dependances\n */\n/**\n * Crazy Page Loader\n *\n * Methods for load a page\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\nclass Page extends Error {\n    /**\n     * Constructor\n     *\n     * @param message:string\n     * @param return self\n     */\n    constructor(message) {\n        // Call parent\n        super(message);\n    }\n}\n\n\n//# sourceURL=webpack://crazy_demo/../CrazyPHP/src/Front/Library/Error/Page.ts?");

/***/ }),

/***/ 2629:
/*!**********************************************************!*\
  !*** ../CrazyPHP/src/Front/Library/Error/RunnerError.ts ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ RunnerError)\n/* harmony export */ });\n/**\n * Error\n *\n * Front TS Scrips for manage error\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\n/**\n * Dependances\n */\n/**\n * Runner Error\n *\n * Methods for stop runner\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\nclass RunnerError extends Error {\n    /**\n     * Constructor\n     *\n     * @param message:string\n     */\n    constructor(message) {\n        // Call parent\n        super(message);\n    }\n}\n\n\n//# sourceURL=webpack://crazy_demo/../CrazyPHP/src/Front/Library/Error/RunnerError.ts?");

/***/ }),

/***/ 6233:
/*!**************************************************************!*\
  !*** ../CrazyPHP/src/Front/Library/File/PythonCollection.ts ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/**\n * Front\n *\n * Front TS Scrips for your Crazy App\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\n/**\n * Python Collection\n *\n * Methods for parse Python Collection\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\nclass PythonCollection {\n}\n/** Methods | Global\n ******************************************************\n */\n/**\n * check\n *\n * Check if input is python collection\n * @returns {boolean}\n */\nPythonCollection.check = (input) => {\n    // Set result\n    let result = false;\n    // Trim any leading or trailing whitespace\n    const trimmedInput = input.trim();\n    // Check for a dictionary (e.g., {'key': 'value'})\n    const isDict = trimmedInput.startsWith(\"{\") && trimmedInput.endsWith(\"}\");\n    // Check for a list (e.g., ['value1', 'value2'])\n    const isList = trimmedInput.startsWith(\"[\") && trimmedInput.endsWith(\"]\");\n    // A valid Python collection should also contain at least one colon (for dict) or comma (for both)\n    const hasDictColon = isDict && trimmedInput.includes(\":\");\n    const hasListComma = isList && trimmedInput.includes(\",\");\n    // Ensure the string is not empty inside the braces\n    const isNotEmpty = trimmedInput.length > 2;\n    // Return true if it is either a dictionary or a list\n    result = (isDict && hasDictColon && isNotEmpty) || (isList && hasListComma && isNotEmpty);\n    // Return result\n    return result;\n};\n/**\n * Encode\n *\n * @param input\n * @returns\n */\nPythonCollection.encode = (input) => {\n    // Set result\n    let result = \"\";\n    // Check input is null\n    if (input === null)\n        // Set result\n        result = \"None\";\n    else \n    // Check input is bool\n    if (typeof input === \"boolean\")\n        // Set result\n        result = input ? \"True\" : \"False\";\n    else \n    // If number of string\n    if (typeof input === \"number\")\n        // handles quotes and escape sequences correctly\n        result = JSON.stringify(result);\n    else \n    // If is string\n    if (typeof input === \"string\") {\n        // Escape single quotes and backslashes within strings\n        const escapedStr = input\n            // Escape backslashes\n            .replace(/\\\\/g, '\\\\\\\\')\n            // Escape single quotes\n            .replace(/'/g, \"\\\\'\");\n        // Set result\n        result = `'${escapedStr}'`;\n    }\n    else \n    // If array given\n    if (Array.isArray(input)) {\n        // Set elements\n        const elements = input.map(element => PythonCollection.encode(element));\n        // Set result\n        result = `[${elements.join(\", \")}]`;\n    }\n    else \n    // Object given\n    if (typeof input === \"object\") {\n        // Map entries\n        const entries = Object.entries(input)\n            .map(([key, value]) => {\n            // Ensure keys are properly formatted and escaped\n            const escapedKey = key\n                // Escape backslashes in keys\n                .replace(/\\\\/g, '\\\\\\\\')\n                // Escape single quotes in keys\n                .replace(/'/g, \"\\\\'\");\n            // Set python key\n            const pythonKey = typeof escapedKey === \"string\"\n                ? `'${escapedKey}'`\n                : escapedKey;\n            // Set python value\n            const pythonValue = PythonCollection.encode(value);\n            // Return result\n            return `${pythonKey}: ${pythonValue}`;\n        });\n        // Set result\n        result = `{${entries.join(\", \")}}`;\n    }\n    // Return result\n    return result;\n};\n/**\n * Decode\n *\n * @param input\n * @returns\n */\nPythonCollection.decode = (input) => {\n    // Set result\n    let result = \"\";\n    // Check if python collection\n    if (PythonCollection.check(input)) {\n        // Placeholder for \\\\'\n        let modifiedInput = input.replace(/\\\\'/g, '@@@@@@@@');\n        // Escape double quotes inside single-quoted values\n        modifiedInput = modifiedInput.replace(/'[^']*\\\"[^']*'/g, (match) => {\n            return match.replace(/\"/g, '\\\\\"');\n        });\n        // Convert Python-like collection string to JSON-compatible string\n        let jsonString = modifiedInput\n            .replace(/([{,]\\s*)'([^']+)':\\s*'([^']*)'/g, '$1\"$2\": \"$3\"') // Handles key-value pairs\n            .replace(/([{,]\\s*)'([^']+)':\\s*([^'{][^,]*)/g, '$1\"$2\": $3') // Handles other key-value pairs\n            .replace(/'/g, '\"') // Replaces single quotes with double quotes\n            .replace(/\\\\\\\\/g, '\\\\\\\\'); // Escapes backslashes\n        // Replace placeholder by '\n        jsonString = jsonString.replace(/@@@@@@@@/g, \"'\");\n        // Handle Python None, True, and False values\n        jsonString = jsonString\n            .replace(/None/g, 'null')\n            .replace(/True/g, 'true')\n            .replace(/False/g, 'false');\n        // Step 3: Parse the string to JSON\n        result = JSON.parse(jsonString);\n    }\n    // Return result\n    return result;\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PythonCollection);\n\n\n//# sourceURL=webpack://crazy_demo/../CrazyPHP/src/Front/Library/File/PythonCollection.ts?");

/***/ }),

/***/ 4763:
/*!********************************************************!*\
  !*** ../CrazyPHP/src/Front/Library/History/History.ts ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ History)\n/* harmony export */ });\n/**\n * History\n *\n * Front TS Scrips for manage history\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\n/**\n * Crazy Page History\n *\n * Methods for manage simple history\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\nclass History {\n    constructor() {\n        /** Private parameters\n         ******************************************************\n         */\n        /** @param _past Past collection */\n        this._previous = [];\n        /** @var _limit Limit of previous values stored */\n        this._limit = 50;\n        /** Public methods\n         ******************************************************\n         */\n        /**\n         * Set\n         *\n         * Set value in history\n         *\n         * @param value\n         */\n        this.set = (value) => {\n            // Prepare nez history item\n            let item = {\n                value: value,\n                dateCreated: new Date(),\n                type: typeof value\n            };\n            // Push into previous array\n            this._previous.push(item);\n            // Check Limit\n            this._checkLimit();\n        };\n        this.get = (key = 1) => {\n            // Let result\n            let result = undefined;\n            // Check key\n            if (key <= 0)\n                // Update key\n                key = 1;\n            // Deincrement key to match with array wich start at 0 <=> 1\n            key = key--;\n            // Check key exists in array\n            if (key in this._previous.keys())\n                // Set result\n                result = this._previous[key];\n            // Return result\n            return key;\n        };\n        /**\n         * Get All Previous\n         *\n         * @param filterByType Filter value of history by type\n         * @param order Newer or older\n         * @returns Array<any>\n         */\n        this.getAllPrevious = (filterByType = null, order = 'newer') => {\n            // Set result\n            let result = [];\n            // Check this._previous\n            if (this._previous.length)\n                // Iteration of previous\n                for (let item of this._previous) {\n                    // Check filterByType\n                    if (filterByType && item.type != filterByType)\n                        // Continue iteration\n                        continue;\n                    // Push value in result\n                    result.push(item.value);\n                }\n            // Check order\n            if (order == \"older\")\n                // Invert array\n                result.reverse();\n            // Return result\n            return result;\n        };\n        /**\n         * Set Limit\n         *\n         * Set Limit of previous value stored\n         *\n         * @param max Max number of previous values stored\n         */\n        this.setLimit = (max = 50) => {\n            // Check number\n            if (max < 0)\n                // Stop\n                return;\n            // Set limit\n            this._limit = max;\n            // Check limit\n            this._checkLimit();\n        };\n        /**\n         * Get Limit\n         *\n         * Get limit number of previous value\n         *\n         * @returns number\n         */\n        this.getLimit = () => this._limit;\n        /** Private methods\n         ******************************************************\n         */\n        /**\n         * Check Limit\n         *\n         * Check limit of the previous array based on the limit number\n         *\n         * @return void\n         */\n        this._checkLimit = () => {\n            // Check if previous has more than limit\n            if (this._previous.length > this._limit)\n                // Slice previous array\n                this._previous = this._previous.slice(0, this._limit);\n        };\n    }\n}\n\n\n//# sourceURL=webpack://crazy_demo/../CrazyPHP/src/Front/Library/History/History.ts?");

/***/ }),

/***/ 8912:
/*!*****************************************************!*\
  !*** ../CrazyPHP/src/Front/Library/History/Page.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Page)\n/* harmony export */ });\n/* harmony import */ var _Utility_Arrays__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Utility/Arrays */ 4989);\n/**\n * History\n *\n * Front TS Scrips for manage history\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\n/**\n * Dependances\n */\n\n/**\n * Crazy Page History\n *\n * Methods for load a page\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\nclass Page {\n    /**\n     * Constructor\n     *\n     */\n    constructor() {\n        /** Private parameters\n         ******************************************************\n         */\n        /** @param _past Past collection */\n        this._past = [];\n        /** @param _future */\n        this._future = [];\n        /** @param _collection Collection of url with state and LoaderPagOptions */\n        this._collection = [];\n        /** Public methods\n         ******************************************************\n         */\n        /**\n         * Register\n         *\n         * Register in collection new item\n         *\n         * @param item\n         * @return void\n         */\n        this.register = (item) => {\n            var _a;\n            // Check href\n            if (!item.href)\n                // Stop function\\\n                return;\n            // Check state\n            if (!(\"state\" in item) && item.state)\n                // Set state\n                item.state = null;\n            // Check if href in collection\n            let searchInCollection = _Utility_Arrays__WEBPACK_IMPORTED_MODULE_0__[\"default\"].filterByKey(this._collection, \"href\", item.href);\n            // Check searchInCollection\n            if (searchInCollection.length) {\n                // Second search\n                let secondSearchInCollection = _Utility_Arrays__WEBPACK_IMPORTED_MODULE_0__[\"default\"].filterByKey(searchInCollection, \"state\", (_a = item.state) !== null && _a !== void 0 ? _a : null);\n                // Check secondSearchInCollection\n                if (secondSearchInCollection.length)\n                    // Stop register because is already exists\n                    return;\n            }\n            // Push item in collection\n            this._collection.push(item);\n        };\n        /** Public methods\n         ******************************************************\n         */\n        /**\n         * Add To Back\n         *\n         * Add page loader page to Back\n         *\n         * @param pageOptions:LoaderPageOptions\n         * @return void\n         */\n        this.addToBack = (pageOptions) => {\n        };\n        /**\n         * Add To Foward\n         *\n         * Add page loader page to Foward\n         *\n         * @param pageOptions:LoaderPageOptions\n         * @return void\n         */\n        this.addToFoward = (pageOptions) => {\n        };\n        /**\n         * Get Back\n         *\n         * Get Back page\n         *\n         * @return LoaderPageOptions\n         */\n        this.getBack = () => {\n            // Prepare result\n            let result = null;\n            // Return page option\n            return result;\n        };\n        /**\n         * Get Forward\n         *\n         * Get Forward page\n         *\n         * @return LoaderPageOptions\n         */\n        this.getForward = () => {\n            // Prepare result\n            let result = null;\n            // Return page option\n            return result;\n        };\n        /** Private methods\n         ******************************************************\n         */\n        this._popStateInit = () => {\n            // Catch event\n            window.addEventListener(\"popstate\", this._popStateEvent);\n        };\n        this._popStateEvent = (e) => {\n            // Prevent default\n            e.defaultPrevented;\n            // Get new href\n            let newHref = window.location.href;\n            // Seatch new href in collection\n            let search = _Utility_Arrays__WEBPACK_IMPORTED_MODULE_0__[\"default\"].filterByKey(this._collection, \"href\", newHref);\n            // Check search\n            /* if(search.length){\n    \n                // Load\n    \n    \n                // Stop function\n                return;\n    \n            }\n    \n            // Seatch new href in collection\n            let searchBack = Arrays.filterByKey(this._collection, \"href\", newHref);\n    \n            // Check search\n            if(searchBack.length){\n    \n    \n    \n            } */\n        };\n        // Pop state init\n        this._popStateInit();\n        // Set current href\n        this._currentHref = window.location.href;\n    }\n}\n\n\n//# sourceURL=webpack://crazy_demo/../CrazyPHP/src/Front/Library/History/Page.ts?");

/***/ }),

/***/ 7211:
/*!****************************************************!*\
  !*** ../CrazyPHP/src/Front/Library/Loader/Page.ts ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ 4539);\n/* harmony import */ var _Loader_Script__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../Loader/Script */ 7879);\n/* harmony import */ var _Crazyrequest__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../Crazyrequest */ 8384);\n/* harmony import */ var _Crazycolor__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Crazycolor */ 9206);\n/* harmony import */ var _Crazyurl__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Crazyurl */ 4368);\n/* harmony import */ var _Dom_Root__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Dom/Root */ 3611);\n/**\n * Loader\n *\n * Front TS Scrips for load elements\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\nvar _a;\n\n/**\n * Dependances\n */\n\n\n\n\n\n/**\n * Crazy Page Loader\n *\n * Methods for load a page\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\nclass Page {\n    /**\n     * Constructor\n     *\n     * @param options:LoaderPageOptions Options with all page details\n     */\n    constructor(options) {\n        // Load page detail\n        return _a.loadPageDetail(options)\n            .then(\n        // Load Pre Action\n        _a.loadPreAction)\n            .then(\n        // Load Pre Action\n        _a.loadUrl)\n            .then(\n        // Load Pre Action\n        _a.loadColorSchema)\n            .then(\n        // Open New Tab (if needed)\n        _a.openNewTab)\n            .then(\n        // Load Script\n        _a.loadScript)\n            .then(\n        // Load Script\n        _a.updateUrl)\n            .then(\n        // Update Title\n        _a.updateTitle)\n            .then(\n        // Load Style\n        _a.loadStyle)\n            .then(\n        // Load Content\n        _a.loadContent)\n            .then(\n        // Load Content\n        _a.registerInHistory)\n            .then((options) => {\n            // Check ready state\n            if (document.readyState !== 'loading') {\n                // Load Content\n                _a.applyColorSchema(options)\n                    .then(\n                // Scan Partials\n                _a.scanPartials)\n                    .then(\n                // Scan Partials\n                _a.loadOnReadyScript)\n                    .then(\n                // Load Post Action\n                _a.loadPostAction)\n                    .then(\n                // Set current page\n                _a.setCurrentPage).catch(_a.catchError);\n            }\n            else {\n                // Event listener\n                document.addEventListener('DOMContentLoaded', () => {\n                    // Load Content\n                    _a.applyColorSchema(options)\n                        .then(\n                    // Scan Partials\n                    _a.scanPartials)\n                        .then(\n                    // Scan Partials\n                    _a.loadOnReadyScript)\n                        .then(\n                    // Load Post Action\n                    _a.loadPostAction)\n                        .then(\n                    // Set current page\n                    _a.setCurrentPage).catch(_a.catchError);\n                });\n            }\n        }).catch(_a.catchError);\n    }\n    /** Private methods\n     ******************************************************\n     */\n    static catchError(error) {\n        // Display error\n        console.error(error);\n    }\n    /** Private methods\n     ******************************************************\n     */\n    /**\n     * Set Status\n     *\n     * Set status in options\n     *\n     * @param options:LoaderPageOptions Options with all page details\n     * @param key:string Key of the status\n     * @param value :boolean True of False\n     * @return Promise<LoaderPageOptions>\n     */\n    static setStatus(options, key, value) {\n        // Check status is defined in options\n        if (!(\"status\" in options) || options.status === null || !options.status)\n            // Set status\n            options.status = {};\n        // Set key in status\n        options.status[key] = value;\n        // Return options\n        return options;\n    }\n    /**\n     * Reset option\n     *\n     *\n     */\n    static resetOptions(options) {\n        // Set options status\n        options = _a.setStatus(options, \"isCurrentPage\", false);\n        options = _a.setStatus(options, \"hasState\", false);\n        options = _a.setStatus(options, \"styleLoaded\", false);\n        options = _a.setStatus(options, \"contentLoaded\", false);\n        options = _a.setStatus(options, \"onReadyExecuted\", false);\n        options = _a.setStatus(options, \"postActionExecuted\", false);\n        options = _a.setStatus(options, \"urlUpdated\", false);\n        // Return options\n        return options;\n    }\n}\n_a = Page;\n/** Public methods\n ******************************************************\n */\n/**\n * Load Page Detail\n *\n * Load Detail of the page\n * Return an object following this schema\n *  {\n *      pageName:string\n *      pageUrl:string\n *      instance:Page\n *      content:\n *      style:\n *      preAction:callable\n *      postAction:callable\n *\n *  }\n *\n * @param options:LoaderPageOptions Options with all page details\n * @return Promise<LoaderPageOptions>\n */\nPage.loadPageDetail = (options) => (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(void 0, void 0, void 0, function* () {\n    // Let keys\n    let keys = [\"isCurrentPage\", \"hasState\", \"scriptRegistered\", \"urlLoaded\", \"preActionExecuted\", \"urlUpdated\", \"titleUpdated\", \"styleLoaded\", \"contentLoaded\", \"onReadyExecuted\", \"historyRegistered\", \"postActionExecuted\", \"hasColor\"];\n    // Prepare options\n    for (let currentKey of keys) {\n        // Check key is in options status\n        if (options.status !== undefined && options.status !== null && currentKey in options.status)\n            // Continue\n            continue;\n        // Set status\n        options = _a.setStatus(options, currentKey, false);\n    }\n    // Return options\n    return options;\n});\n/**\n * Load Pre Action\n *\n * Execute custom pre actions\n *\n * > Executed only the first time that the page is loaded\n *\n * @param options:LoaderPageOptions Options with all page details\n * @return Promise<LoaderPageOptions>\n */\nPage.loadPreAction = (options) => (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(void 0, void 0, void 0, function* () {\n    var _b;\n    // Check status\n    if (((_b = options.status) === null || _b === void 0 ? void 0 : _b.preActionExecuted) === true)\n        // Stop function\n        return options;\n    // Check if preAction is callable\n    if (typeof options.preAction === \"function\")\n        // Call preaction\n        options = options.preAction(options);\n    // Set status\n    options = _a.setStatus(options, \"preActionExecuted\", true);\n    // Return options\n    return options;\n});\n/**\n * Load Script\n *\n * Load Js scripts of the page\n *\n * @param options:LoaderPageOptions Options with all page details\n * @return Promise<LoaderPageOptions>\n */\nPage.loadScript = (options) => (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(void 0, void 0, void 0, function* () {\n    var _b;\n    // Check status\n    if (((_b = options.status) === null || _b === void 0 ? void 0 : _b.scriptRegistered) === false && options.name) {\n        // Get hash\n        let hash = window.Crazyobject.hash.get();\n        // Set url\n        let url = `/dist/page/app/${options.name}.${hash}.js`;\n        // Load script\n        let script = yield _Loader_Script__WEBPACK_IMPORTED_MODULE_0__[\"default\"].load(url, options.name, true);\n        // Get registered\n        let registered = window.Crazyobject.registerPage.getRegistered(options.name ? options.name : \"\");\n        // Check html\n        if (registered !== null && \"classReference\" in registered && \"html\" in (registered === null || registered === void 0 ? void 0 : registered.classReference) && (registered === null || registered === void 0 ? void 0 : registered.classReference.html)) {\n            // Set html in options\n            options.content = registered === null || registered === void 0 ? void 0 : registered.classReference.html;\n        }\n        // Check html\n        if (registered !== null && \"classReference\" in registered && \"css\" in (registered === null || registered === void 0 ? void 0 : registered.classReference) && (registered === null || registered === void 0 ? void 0 : registered.classReference.css) && \"default\" in (registered === null || registered === void 0 ? void 0 : registered.classReference.css) && typeof (registered === null || registered === void 0 ? void 0 : registered.classReference.css.default) === \"string\") {\n            // Set html in options\n            options.style = registered === null || registered === void 0 ? void 0 : registered.classReference.css.default.toString().replace(/\\r?\\n|\\r/g, \"\").replace(/\\/\\*[\\s\\S]*?\\*\\//g, \"\") // Remove /* Comment */\n            ;\n        }\n        // Set script loaded\n        options.scriptLoaded = registered === null || registered === void 0 ? void 0 : registered.classReference;\n        // Set options\n        options = _a.setStatus(options, \"scriptRegistered\", true);\n    }\n    // Return options\n    return options;\n});\n/**\n * Load Url\n *\n * Load url from name and arguments\n *\n * @param options:LoaderPageOptions Options with all page details\n * @return Promise<LoaderPageOptions>\n */\nPage.loadUrl = (options) => (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(void 0, void 0, void 0, function* () {\n    var _b;\n    // Check status\n    if (((_b = options.status) === null || _b === void 0 ? void 0 : _b.urlLoaded) === true)\n        // Stop function\n        return options;\n    // Check url is empty\n    if (\"url\" in options && options.url !== null)\n        // Return options\n        return options;\n    // Prepare query\n    let query = {\n        filters: {\n            name: options.name\n        },\n        options: {}\n    };\n    // Check options arguments\n    if (\"arguments\" in options && options.arguments !== null) {\n        // Add options\n        query[\"options\"].arguments = options.arguments;\n    }\n    // New request\n    let request = new _Crazyrequest__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\"/api/v2/Router/filter\", {\n        method: \"GET\",\n        responseType: \"json\",\n        from: \"internal\",\n        ignoreHash: true,\n        cache: false,\n    });\n    // Fetch request\n    yield request\n        .fetch(query)\n        .then(result => {\n        // Check result\n        if (result &&\n            \"results\" in result &&\n            Array.isArray(result.results) &&\n            result.results.length === 1 &&\n            \"name\" in result.results[0] &&\n            \"path\" in result.results[0]) {\n            // Load new page\n            options.url = result.results[0].path;\n            // Check state\n            if (\"state\" in result.results[0] && Object.keys(result.results[0].state).length) {\n                // Set state in options\n                options.state = result.results[0].state;\n                // Switch status\n                _a.setStatus(options, \"hasState\", true);\n            }\n        }\n        else {\n            // Error\n            throw new Error(`No page corresponding to \"${options.name}\" in the router collection`);\n        }\n    });\n    // Set status\n    options = _a.setStatus(options, \"urlLoaded\", true);\n    // Return options\n    return options;\n});\n/**\n * load Color Schema\n *\n * Load url from name and arguments\n *\n * @param options:LoaderPageOptions Options with all page details\n * @return Promise<LoaderPageOptions>\n */\nPage.loadColorSchema = (options) => (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(void 0, void 0, void 0, function* () {\n    var _b, _c, _d, _e, _f, _g;\n    // Get state\n    let state = yield ((_b = options.scriptLoaded) === null || _b === void 0 ? void 0 : _b.loadPageState());\n    // Get source color\n    if (typeof ((_d = (_c = state === null || state === void 0 ? void 0 : state._ui) === null || _c === void 0 ? void 0 : _c.materialDynamicColors) === null || _d === void 0 ? void 0 : _d.source) == \"string\" && ((_e = state._ui) === null || _e === void 0 ? void 0 : _e.materialDynamicColors.source)) {\n        // Get source\n        let source = (_g = (_f = state === null || state === void 0 ? void 0 : state._ui) === null || _f === void 0 ? void 0 : _f.materialDynamicColors) === null || _g === void 0 ? void 0 : _g.source;\n        // Check source\n        if (source) {\n            // Get colors\n            let colors = new _Crazycolor__WEBPACK_IMPORTED_MODULE_2__[\"default\"](source);\n            // Push to color\n            // @ts-ignore\n            options.color = colors;\n            // Set status\n            options = _a.setStatus(options, \"hasColor\", true);\n        }\n    }\n    // Return options\n    return options;\n});\n/**\n * Open New Tab\n *\n * Open new tab if needed\n *\n * @param options:LoaderPageOptions Options with all page details\n * @return Promise<LoaderPageOptions>\n */\nPage.openNewTab = (options) => (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(void 0, void 0, void 0, function* () {\n    var _b;\n    // Check openInNewTab\n    if (\"openInNewTab\" in options && options.openInNewTab && ((_b = options.status) === null || _b === void 0 ? void 0 : _b.urlLoaded) && \"url\" in options && typeof options.url === \"string\" && options.url) {\n        // Open \n        window.open(options.url, \"_blank\");\n        // Stop promise chain\n        throw 'Page open in new tab.';\n    }\n    // Return options\n    return options;\n});\n/**\n * Update Url\n *\n * Update url of the page\n *\n * @param options:LoaderPageOptions Options with all page details\n * @return Promise<LoaderPageOptions>\n */\nPage.updateUrl = (options) => (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(void 0, void 0, void 0, function* () {\n    var _b;\n    // Check status\n    if (((_b = options.status) === null || _b === void 0 ? void 0 : _b.urlUpdated) === true)\n        // Stop function\n        return options;\n    // Check url in options\n    if (\"url\" in options && options.url !== null)\n        // Set new url\n        _Crazyurl__WEBPACK_IMPORTED_MODULE_3__[\"default\"].set(options.url);\n    // Return options\n    return options;\n});\n/**\n * Update Title\n *\n * Update title of the page\n *\n * @param options:LoaderPageOptions Options with all page details\n * @return Promise<LoaderPageOptions>\n */\nPage.updateTitle = (options) => (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(void 0, void 0, void 0, function* () {\n    var _b;\n    // Check status\n    if (((_b = options.status) === null || _b === void 0 ? void 0 : _b.titleUpdated) === true)\n        // Stop function\n        return options;\n    // Declare new title\n    let titleNew = options.name;\n    // Check titleNew\n    if (titleNew)\n        // Set title\n        document.title = titleNew;\n    // Return options\n    return options;\n});\n/**\n * Load Style\n *\n * Load Css styles of the page\n *\n * @param options:LoaderPageOptions Options with all page details\n * @return Promise<LoaderPageOptions>\n */\nPage.loadStyle = (options) => (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(void 0, void 0, void 0, function* () {\n    var _b;\n    // Check status\n    if (((_b = options.status) === null || _b === void 0 ? void 0 : _b.styleLoaded) === true)\n        // Stop function\n        return options;\n    // Check if css is set\n    if (\"style\" in options && typeof options.style == \"string\") {\n        // Create style element\n        let styleEl = document.createElement(\"style\");\n        // Add id to style el\n        styleEl.setAttribute(\"id\", `style-${options.name}`);\n        // Set inner text\n        styleEl.innerText = options.style;\n        // Set status\n        _a.setStatus(options, \"styleLoaded\", true);\n        // Append the style element to the head of the document\n        document.head.appendChild(styleEl);\n    }\n    // Return options\n    return options;\n});\n/**\n * Load Content\n *\n * Load html Content of the page\n *\n * @param options:LoaderPageOptions Options with all page details\n * @return Promise<LoaderPageOptions>\n */\nPage.loadContent = (options) => (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(void 0, void 0, void 0, function* () {\n    var _b, _c;\n    // Check status\n    if (((_b = options.status) === null || _b === void 0 ? void 0 : _b.contentLoaded) === true)\n        // Stop function\n        return options;\n    // Declare state\n    let stateObject = {};\n    // Prepare stateObject\n    if ((_c = options.status) === null || _c === void 0 ? void 0 : _c.hasState) {\n        // Set state\n        stateObject = options.state;\n    }\n    else \n    // Check options.scriptLoaded\n    if (options.scriptLoaded && options.scriptLoaded !== null) {\n        // Get state\n        stateObject = yield options.scriptLoaded.loadPageState();\n        // check options status\n        if (options.status && options.status === null) {\n            // Set options status\n            options.status = {};\n            // Set status\n            options.status.hasState = true;\n        }\n    }\n    // Check content\n    if (\"content\" in options && typeof options.content === \"function\") {\n        // Get content\n        let content = options.content(stateObject);\n        // Set content of dom root\n        _Dom_Root__WEBPACK_IMPORTED_MODULE_4__[\"default\"].setContent(content);\n    }\n    // Return options\n    return options;\n});\n/**\n * Scan Partials\n *\n * Scan partials in html\n *\n * @param options\n * @returns\n */\nPage.scanPartials = (options) => (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(void 0, void 0, void 0, function* () {\n    var _b;\n    // Check status\n    if (((_b = options.status) === null || _b === void 0 ? void 0 : _b.partialsScanned) === true)\n        // Stop function\n        return options;\n    // Scan partials and get result\n    let partialsScanned = window.Crazyobject.partials.scan(\"body\");\n    // Check partials scanned\n    if (Object.keys(partialsScanned).length) {\n        // Set partials\n        options.partials = partialsScanned;\n        // Iteration partial script\n        for (let partial in options.partials) {\n            // Run partial script\n            let instance = new options.partials[partial].callable(options.partials[partial]);\n            // Push instance in options\n            options.partials[partial].scriptRunning = instance;\n        }\n    }\n    // Set status\n    options = _a.setStatus(options, \"partialsScanned\", true);\n    // Return options\n    return options;\n});\nPage.registerInHistory = (options) => (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(void 0, void 0, void 0, function* () {\n    var _b, _c;\n    // Check status\n    if (((_b = options.status) === null || _b === void 0 ? void 0 : _b.historyRegistered) === true)\n        // Stop function\n        return options;\n    // Get url\n    let urlString = options.url ? (_c = options.url) === null || _c === void 0 ? void 0 : _c.toString() : \"\";\n    // Check history in window Crazyobject\n    window.Crazyobject.historyPage.register({\n        href: urlString,\n        loader: _a.resetOptions(options),\n        state: {}\n    });\n    // Return options\n    return options;\n});\n/**\n * Apply Color Schema\n *\n * Apply color schema\n *\n * @param options:LoaderPageOptions Options with all page details\n * @return Promise<LoaderPageOptions>\n */\nPage.applyColorSchema = (options) => (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(void 0, void 0, void 0, function* () {\n    var _b;\n    // Check colors\n    if (((_b = options.status) === null || _b === void 0 ? void 0 : _b.hasColor) && options.color) {\n        // Apply theme\n        if (options.color.applyTheme())\n            // Set status\n            options = _a.setStatus(options, \"hasColorApplied\", true);\n    }\n    // Return options\n    return options;\n});\n/**\n * Load On Ready Script Action\n *\n * Execute on ready script\n *\n * @param options:LoaderPageOptions Options with all page details\n * @return Promise<LoaderPageOptions>\n */\nPage.loadOnReadyScript = (options) => (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(void 0, void 0, void 0, function* () {\n    var _b;\n    // Check status\n    if (((_b = options.status) === null || _b === void 0 ? void 0 : _b.onReadyExecuted) === true)\n        // Stop function\n        return options;\n    // Check script loaded\n    if (\"scriptLoaded\" in options && options.scriptLoaded && \"constructor\" in options.scriptLoaded) {\n        // Set current class\n        let currentClass = options.scriptLoaded;\n        // New instance of this class\n        let instance = new currentClass(options);\n        // Set scriptRunning\n        options.scriptRunning = instance;\n        // Set status\n        options = _a.setStatus(options, \"onReadyExecuted\", true);\n    }\n    // Return options\n    return options;\n});\n/**\n * Load Post Action\n *\n * Execute custom pre actions\n *\n * @param options:LoaderPageOptions Options with all page details\n * @return Promise<LoaderPageOptions>\n */\nPage.loadPostAction = (options) => (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(void 0, void 0, void 0, function* () {\n    var _b;\n    // Check status\n    if (((_b = options.status) === null || _b === void 0 ? void 0 : _b.postActionExecuted) === true)\n        // Stop function\n        return options;\n    // Check if preAction is callable\n    if (typeof options.postAction === \"function\")\n        // Call postAction\n        options = options.postAction(options);\n    // Set options is loaded\n    options = _a.setStatus(options, \"postActionExecuted\", true);\n    // Return options\n    return options;\n});\n/**\n * set Current Page\n *\n * Set current page\n *\n * @param options:LoaderPageOptions Options with all page details\n * @return Promise<LoaderPageOptions>\n */\nPage.setCurrentPage = (options) => (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(void 0, void 0, void 0, function* () {\n    var _b;\n    // Check status\n    if (((_b = options.status) === null || _b === void 0 ? void 0 : _b.onReadyExecuted) === true)\n        // Set curret page\n        window.Crazyobject.currentPage.set(options);\n    // Return options\n    return options;\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Page);\n\n\n//# sourceURL=webpack://crazy_demo/../CrazyPHP/src/Front/Library/Loader/Page.ts?");

/***/ }),

/***/ 183:
/*!*******************************************************!*\
  !*** ../CrazyPHP/src/Front/Library/Loader/Partial.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ 4539);\n/* harmony import */ var _Crazypage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Crazypage */ 2682);\n/**\n * Loader\n *\n * Front TS Scrips for load elements\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\nvar _a;\n\n\n/**\n * Crazy Partial Loader\n *\n * Methods for load a partial\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\nclass Partial {\n    /**\n     * Constructor\n     *\n     * @param options:LoaderPageOptions Options with all page details\n     */\n    constructor(options) {\n        // Load partial detail\n        return _a.loadPartialDetail(options)\n            .then(\n        // Load Pre Action\n        _a.loadPreAction)\n            .then(\n        // Load Script\n        _a.loadScript)\n            .then(\n        // Load Content\n        _a.loadContent)\n            .then(\n        // Scan Partials\n        _a.pushToDomEl)\n            .then(\n        // Load Script\n        _a.runScript)\n            .then(\n        // Load Post Action\n        _a.loadPostAction).catch(_a.catchError);\n    }\n    /** Private methods\n     ******************************************************\n     */\n    static catchError(error) {\n        // Display error\n        console.error(error);\n    }\n    /** Private methods\n     ******************************************************\n     */\n    /**\n     * Set Status\n     *\n     * Set status in options\n     *\n     * @param options:LoaderPartialOptions Options with all page details\n     * @param key:string Key of the status\n     * @param value :boolean True of False\n     * @return Promise<LoaderPartialOptions>\n     */\n    static setStatus(options, key, value) {\n        // Check status is defined in options\n        if ((typeof options == \"object\" && !(\"status\" in options)) || options.status === null || !options.status)\n            // Set status\n            options.status = {};\n        // Set key in status\n        options.status[key] = value;\n        // Return options\n        return options;\n    }\n}\n_a = Partial;\n/** Public methods\n ******************************************************\n */\n/**\n * Load Partial Detail\n *\n * Load Detail of the page\n * Return an object following this schema\n *  {\n *      pageName:string\n *      pageUrl:string\n *      instance:Page\n *      content:\n *      style:\n *      preAction:callable\n *      postAction:callable\n *\n *  }\n *\n * @param options:LoaderPartialOptions Options with all partial details\n * @return Promise<LoaderPartialOptions>\n */\nPartial.loadPartialDetail = (options) => (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function* () {\n    // Let keys\n    let keys = [\"hasState\", \"scriptRegistered\", \"preActionExecuted\", \"contentLoaded\", \"contentPushedToDom\", \"postActionExecuted\"];\n    // Prepare options\n    for (let currentKey of keys) {\n        // Check key is in options status\n        if (options.status !== undefined && options.status !== null && currentKey in options.status)\n            // Continue\n            continue;\n        // Set status\n        options = _a.setStatus(options, currentKey, false);\n    }\n    // Return options\n    return options;\n});\n/**\n * Load Pre Action\n *\n * Execute custom pre actions\n *\n * > Executed only the first time that the partial is loaded\n *\n * @param options:LoaderPartialOptions Options with all page details\n * @return Promise<LoaderPartialOptions>\n */\nPartial.loadPreAction = (options) => (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function* () {\n    var _b;\n    // Check status\n    if (((_b = options.status) === null || _b === void 0 ? void 0 : _b.preActionExecuted) === true)\n        // Stop function\n        return options;\n    // Check if preAction is callable\n    if (typeof options.preAction === \"function\")\n        // Call preaction\n        options = options.preAction(options);\n    // Set status\n    options = _a.setStatus(options, \"preActionExecuted\", true);\n    // Return options\n    return options;\n});\n/**\n * Load Script\n *\n * Load Js scripts of the partial\n *\n * @param options:LoaderPartialOptions Options with all page details\n * @return Promise<LoaderPartialOptions>\n */\nPartial.loadScript = (options) => (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function* () {\n    var _b;\n    // Check status\n    if (((_b = options.status) === null || _b === void 0 ? void 0 : _b.scriptRegistered) === false && options.name) {\n        // Get script from crazyobject\n        let script = window.Crazyobject.partials.get(options.name);\n        // Check script\n        if (script !== null) {\n            // Set script loaded\n            options.scriptLoaded = script;\n            // Set options\n            options = _a.setStatus(options, \"scriptRegistered\", true);\n        }\n    }\n    // Return options\n    return options;\n});\n/**\n * Load Content\n *\n * Load html Content of the page\n *\n * @param options:LoaderPartialOptions Options with all page details\n * @return Promise<LoaderPartialOptions>\n */\nPartial.loadContent = (options) => (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function* () {\n    var _b, _c, _d;\n    // Check status\n    if (((_b = options.status) === null || _b === void 0 ? void 0 : _b.contentLoaded) === true)\n        // Stop function\n        return options;\n    // Declare state\n    let stateObject = {};\n    // Prepare stateObject\n    if ((_c = options.status) === null || _c === void 0 ? void 0 : _c.hasState) {\n        // Set state\n        stateObject = options.state;\n    }\n    else \n    // Check options.scriptLoaded\n    if (options.scriptLoaded && options.scriptLoaded !== null) {\n        // Get state\n        // @ts-ignore\n        stateObject = yield _Crazypage__WEBPACK_IMPORTED_MODULE_0__[\"default\"].loadPageState();\n        // check options status\n        if (options.status && options.status === null) {\n            // Set options status\n            options.status = {};\n            // Set status\n            options.status.hasState = true;\n        }\n    }\n    // Push stateObject into state\n    options.state = stateObject;\n    // Check name\n    if (((_d = options.status) === null || _d === void 0 ? void 0 : _d.scriptRegistered) === true && options.scriptLoaded) {\n        // Push content into option\n        // @ts-ignore\n        options.content = options.scriptLoaded.html;\n        // Set options\n        options = _a.setStatus(options, \"contentLoaded\", true);\n    }\n    // Return options\n    return options;\n});\n/**\n * Push To Dom El\n *\n * Push html Content into the dom\n *\n * @param options:LoaderPartialOptions Options with all page details\n * @return Promise<LoaderPartialOptions>\n */\nPartial.pushToDomEl = (options) => (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function* () {\n    var _b;\n    // Check status\n    if (((_b = options.status) === null || _b === void 0 ? void 0 : _b.contentPushedToDom) === true)\n        // Stop function\n        return options;\n    // Check dom target\n    if (options.domTarget && options.content) {\n        // Search options.domTarget\n        let els = document.querySelectorAll(options.domTarget);\n        // Check els\n        if (els.length == 0)\n            // New error\n            throw new Error(`Partial loader doesn't found into the dom element \"${options.domTarget}\"`);\n        // Iteration els */\n        els.forEach(el => {\n            // Check content\n            if (typeof options.content == \"function\") {\n                // Convert content to dom\n                let node = new DOMParser().parseFromString(options.content(options.state), \"text/html\");\n                // Check node.body.firstChild\n                if (node.body.firstChild)\n                    // Replace content\n                    el.replaceWith(node.body.firstChild);\n            }\n            else\n                // New error\n                throw new Error(`Partial content isn't callable`);\n        });\n        // Switch status\n        _a.setStatus(options, \"contentPushedToDom\", true);\n    }\n    // Return options\n    return options;\n});\n/**\n * Run Script\n *\n * Push html Content into the dom\n *\n * @param options:LoaderPartialOptions Options with all page details\n * @return Promise<LoaderPartialOptions>\n */\nPartial.runScript = (options) => (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function* () {\n    var _b, _c;\n    // Check status\n    if (((_b = options.status) === null || _b === void 0 ? void 0 : _b.contentPushedToDom) === false || ((_c = options.status) === null || _c === void 0 ? void 0 : _c.scriptRegistered) === false)\n        // Stop function\n        return options;\n    // Run script\n    // @ts-ignore\n    options.scriptRunning = new options.scriptLoaded();\n    // Return options\n    return options;\n});\n/**\n * Load Post Action\n *\n * Execute custom pre actions\n *\n * @param options:LoaderPageOptions Options with all page details\n * @return Promise<LoaderPageOptions>\n */\nPartial.loadPostAction = (options) => (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function* () {\n    var _b;\n    // Check status\n    if (((_b = options.status) === null || _b === void 0 ? void 0 : _b.postActionExecuted) === true)\n        // Stop function\n        return options;\n    // Check if preAction is callable\n    if (typeof options.postAction === \"function\")\n        // Call postAction\n        options = options.postAction(options);\n    // Set options is loaded\n    options = _a.setStatus(options, \"postActionExecuted\", true);\n    // Return options\n    return options;\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Partial);\n\n\n//# sourceURL=webpack://crazy_demo/../CrazyPHP/src/Front/Library/Loader/Partial.ts?");

/***/ }),

/***/ 7879:
/*!******************************************************!*\
  !*** ../CrazyPHP/src/Front/Library/Loader/Script.ts ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/**\n * Loader\n *\n * Front TS Scrips for load elements\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\n/**\n * Crazy Script Loader\n *\n * Methods for load JS script\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\nclass Script {\n}\n/**\n * Load\n *\n * Load JS Script after page loaded\n *\n * @source https://www.educative.io/answers/how-to-dynamically-load-a-js-file-in-javascript\n *\n * @param url:string Url to load\n * @param async\n * @param target\n */\nScript.load = (url, id = \"\", async = true, type = \"text/javascript\", target = \"body\") => {\n    // Return a new promise\n    return new Promise((resolve, reject) => {\n        // Try\n        try {\n            // Create a htm element\n            const scriptEle = document.createElement(\"script\");\n            // Define the type\n            scriptEle.type = type;\n            // Set async\n            scriptEle.async = async;\n            // Define utl\n            scriptEle.src = url;\n            // Check if id\n            if (id)\n                // Set id in scriptEle\n                scriptEle.id = `script-${id}`;\n            // Event load\n            scriptEle.addEventListener(\"load\", e => {\n                // Resolve status\n                resolve({\n                    status: true\n                });\n            });\n            // Event error\n            scriptEle.addEventListener(\"error\", e => {\n                // Set reject\n                reject({\n                    // Set failed status\n                    status: false,\n                    // Set message\n                    message: `Failed to load the script ${url}`,\n                });\n            });\n            // Add script in body of head\n            document[target].appendChild(scriptEle);\n            // Catch error\n        }\n        catch (error) {\n            // Set reject\n            reject(error);\n        }\n    });\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Script);\n\n\n//# sourceURL=webpack://crazy_demo/../CrazyPHP/src/Front/Library/Loader/Script.ts?");

/***/ }),

/***/ 8287:
/*!*********************************************************!*\
  !*** ../CrazyPHP/src/Front/Library/Navigator/Client.ts ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Client)\n/* harmony export */ });\n/**\n * Navigator\n *\n * Front TS Scrips for multiple tasks\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\n/**\n * Dependances\n */\n/**\n * Client\n *\n * Methods for manage client navigator\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\nclass Client {\n    constructor() {\n        /** Private parameters\n         ******************************************************\n         */\n        /** @var message:string */\n        this._closeMessage = 'Are you sure you want to leave ?';\n        /** Public parameters\n         ******************************************************\n         */\n        /** @var isActive Check if event close is active */\n        this.isPreventCloseActive = false;\n        /** Public methods\n         ******************************************************\n         */\n        /**\n         * Prevent Close\n         *\n         * @param message\n         * @returns {void}\n         */\n        this.preventClose = (message = \"\") => {\n            // Set message\n            this._customCloseMessage = message ? message : this._closeMessage;\n            // Add event listener\n            window.addEventListener(\"beforeunload\", this._beforeUnloadEvent);\n            // Switch status\n            this.isPreventCloseActive = true;\n        };\n        /**\n         * Desable Close\n         *\n         * @param message\n         * @returns {void}\n         */\n        this.disablePreventClose = () => {\n            // Add event listener\n            window.removeEventListener(\"beforeunload\", this._beforeUnloadEvent);\n            // Switch status\n            this.isPreventCloseActive = false;\n        };\n        /** Private methods\n         ******************************************************\n         */\n        /**\n         * Before Unload Event\n         *\n         * @param event\n         * @returns {void}\n         */\n        this._beforeUnloadEvent = (event) => {\n            // Prevent default\n            event.preventDefault();\n            // \n            // @ts-ignore\n            event.returnValue = `Are you sure you want to leave?`;\n            /* // check if event dialog\n            if(\n                \"dialog\" in event &&\n                typeof event.dialog === \"object\" &&\n                event.dialog &&\n                \"setMessage\" in event.dialog &&\n                typeof event.dialog.setMessage === \"function\" &&\n                event.dialog.setMessage &&\n                \"setButtonLabel\" in event.dialog &&\n                typeof event.dialog.setButtonLabel === \"function\" &&\n                event.dialog.setButtonLabel\n            ){\n    \n                // Set message\n                event.dialog.setMessage(this._customCloseMessage);\n    \n                // Set button\n                event.dialog.setButtonLabel(\"Save\");\n    \n                // Check show\n                if(\"show\" in event.dialog && typeof event.dialog.show === \"function\")\n    \n                    // Show dialog\n                    event.dialog.show().then(async (result) => {\n                        if (result == \"Save\"){\n                            // save the document.\n                        }\n                    });\n            } */\n        };\n    }\n}\n\n\n//# sourceURL=webpack://crazy_demo/../CrazyPHP/src/Front/Library/Navigator/Client.ts?");

/***/ }),

/***/ 6844:
/*!*****************************************************!*\
  !*** ../CrazyPHP/src/Front/Library/Pageregister.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _Loader_Script__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Loader/Script */ 7879);\n/* harmony import */ var _Crazyrequest__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Crazyrequest */ 8384);\n/* harmony import */ var _Crazycache__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Crazycache */ 7947);\n/* harmony import */ var _Crazypage__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Crazypage */ 2682);\n/* harmony import */ var _Crazyurl__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Crazyurl */ 4368);\n/**\n * Front\n *\n * Front TS Scrips for your Crazy App\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\n/**\n * Dependances\n*/\n\n\n\n\n\n/**\n * Page Register\n *\n * Methods for manage page loaded and to load\n *\n * @deprecated\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\nclass Pageregister {\n    /**\n     * Constructor\n     */\n    constructor() {\n        /** Public Parameters\n         ******************************************************\n         */\n        /** @var routerAction:Object */\n        this.routerAction = [];\n        /** Private Parameters\n         ******************************************************\n         */\n        /** @var cacheInstance:Crazycache|null */\n        this.cacheInstance = null;\n        /** @var currentPage */\n        this.currentPage = null;\n        /** @var history */\n        this.history = [];\n        /** Methods | private\n         ******************************************************\n         */\n        /**\n         * Prepare Cache\n         *\n         * @param value:any\n         */\n        this.prepareCache = (value) => {\n            // Decalre option\n            let option = {};\n            // Check value\n            if (value !== null) {\n                // Set date\n                let date = new Date(value).toUTCString();\n                // Prepare option\n                option = {\n                    header: { \"If-Modified-Since\": date }\n                };\n            }\n            // New Request\n            let request = new _Crazyrequest__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\"/api/v1/config/Router\", option);\n            // Get date updated\n            request.fetch()\n                // Check fetch result\n                .then(value => {\n                var _a, _b, _c, _d, _e, _f;\n                // Check if data received\n                if (((_a = request.lastResponse) === null || _a === void 0 ? void 0 : _a.status) === 200) {\n                    // Set app in cache\n                    return (_b = this.cacheInstance) === null || _b === void 0 ? void 0 : _b.set('app', value.results.config.Router.app);\n                }\n                else \n                // Check if server approced internal cache\n                if (((_c = request.lastResponse) === null || _c === void 0 ? void 0 : _c.status) === 304) {\n                    // Set app in cache\n                    return (_d = this.cacheInstance) === null || _d === void 0 ? void 0 : _d.get('app');\n                }\n                else\n                    // Error\n                    throw new Error(\"Error when loading config router : \" + ((_e = request.lastResponse) === null || _e === void 0 ? void 0 : _e.statusText) + \"(\" + ((_f = request.lastResponse) === null || _f === void 0 ? void 0 : _f.status) + \")\");\n            })\n                // Dispatch event on ready\n                .then(value => {\n                console.log(\"__value___\");\n                console.log(value);\n                // New event\n                this.customEvent = new CustomEvent(\"routerReady\", { \"detail\": value });\n                // Dispatch custom event\n                document.dispatchEvent(this.customEvent);\n            });\n        };\n        /**\n         * Get current\n         *\n         * Get current page\n         *\n         * @return object\n         */\n        this.getCurrent = () => {\n            // Return object\n            return Object;\n        };\n        /**\n         * Get Set Current\n         *\n         * Get current page\n         *  - User give url\n         *  - Script send request to cache / server to know wich page match with the current url given\n         *  - Then script check if the script of the page is available / or if it has to be loaded from server\n         *\n         * @return object\n         */\n        this.setCurrent = (name = \"\") => {\n            // Check name\n            if (!name)\n                // Stop function\n                return;\n            // \n        };\n        /**\n         * Load Internal Page\n         *\n         * Receive as parameter input : {name: pageName, path: path}\n         *\n         * @param input:RouterResponseSchema\n         */\n        this.loadInternalPage = (input) => {\n            // Check if input given has a key in router action\n            if (input.name && input.name in this.routerAction) {\n                // \n                console.log(\"In the router action collection\");\n            }\n            else {\n                //\n                console.log(\"Router action has to be loaded\");\n                // Check input.name\n                if (input.name)\n                    // Load action of page missing\n                    _Crazypage__WEBPACK_IMPORTED_MODULE_3__[\"default\"].loadAction(input.name)\n                        .then(\n                    // Get result of load\n                    value => {\n                        var _a, _b;\n                        // Check status\n                        if (!value.status)\n                            // Error\n                            throw new Error(\"Failed to load action of page\");\n                        console.log(\"Refactor\");\n                        console.log((_a = this.cacheInstance) === null || _a === void 0 ? void 0 : _a.get('app'));\n                        console.log(\"End Refactor\");\n                        // Load app in cache instance\n                        return (_b = this.cacheInstance) === null || _b === void 0 ? void 0 : _b.get('app');\n                    }).then(value => {\n                        // New event\n                        this.customEvent = new CustomEvent(\"routerReady\", { \"detail\": value });\n                        // Dispatch custom event\n                        document.dispatchEvent(this.customEvent);\n                    });\n            }\n            // Set new url\n            _Crazyurl__WEBPACK_IMPORTED_MODULE_4__[\"default\"].set(input.path);\n        };\n        /** Private Methods | Utilities\n         ******************************************************\n         */\n        /**\n         * Array Filter\n         *\n         * @return any\n         */\n        this.filterArrayByKeyValue = (array = [], key, keyValue) => array.filter((aEl) => aEl[key] == keyValue);\n        // Init cache\n        this.cacheInstance = new _Crazycache__WEBPACK_IMPORTED_MODULE_2__[\"default\"](\"router\");\n        // Cache instance\n        this.cacheInstance\n            .get(\"dateUpdated\")\n            .then(this.prepareCache);\n    }\n    /** Methods | public\n     ******************************************************\n     */\n    /**\n     * Register\n     *\n     * Register page in current context\n     *\n     * @deprecated\n     *\n     * @param page:Crazypage\n     * @return void\n     */\n    register(page) {\n        let registerFunction = value => {\n            var _a;\n            // Check detail in value\n            if (\"detail\" in value &&\n                Array.isArray(value.detail) &&\n                \"className\" in page &&\n                typeof page.className === \"string\") {\n                // Check if page in detail\n                let currentContextCollection = this.filterArrayByKeyValue(value.detail, \"name\", page.className);\n                // Check current context\n                if (currentContextCollection.length) {\n                    // Push class in instance\n                    this.routerAction[page.className] = {\n                        instance: page,\n                        file: \"\",\n                        date: new Date()\n                    };\n                }\n                // Check current page, if null it means it's the first page loaded\n                if (this.currentPage === null) {\n                    // Execute page\n                    let currentPage = new page();\n                    // Add it to current page\n                    this.currentPage = currentPage;\n                    // Add it to history\n                    let newHistoryItem = {\n                        instance: page,\n                        date: new Date()\n                    };\n                    // Push in history\n                    this.history.push(newHistoryItem);\n                }\n                else {\n                    // Execute page\n                    let currentPage = new page();\n                    // Remove old css specific\n                    let stylePastPageEl = document.querySelector(\"[specific-to-page]\");\n                    // Check if exists\n                    if (stylePastPageEl !== null)\n                        // Remove it\n                        stylePastPageEl.remove();\n                    // Load css\n                    if (page.css !== null && \"default\" in page.css) {\n                        // Css string\n                        let cssString = (_a = page.css.default) === null || _a === void 0 ? void 0 : _a.toString();\n                        // Create style element\n                        let styleEl = document.createElement(\"style\");\n                        // Set content\n                        styleEl.innerText = cssString ? cssString : \"\";\n                        // Set attribute\n                        styleEl.setAttribute(\"specific-to-page\", page.className);\n                        // Add to document\n                        document.head.appendChild(styleEl);\n                    }\n                    // Load html\n                    if (typeof page[\"html\"] === \"function\") {\n                        // Get html string\n                        let htmlString = page[\"html\"]();\n                        // Convert to dom\n                        let htmlObject = new DOMParser().parseFromString(htmlString, \"text/html\");\n                        // Get crazy-root\n                        let crazyRootEl = document.getElementById(\"crazy-root\");\n                        // Get new content\n                        let newContent = htmlObject.getElementById(\"crazy-root\");\n                        // Check el\n                        if (crazyRootEl !== null && newContent !== null) {\n                            // Replace with new content\n                            crazyRootEl.replaceWith(newContent);\n                        }\n                        else {\n                        }\n                    }\n                    // Add it to current page\n                    this.currentPage = currentPage;\n                }\n            }\n            // Remove event listener\n            document.removeEventListener(\"routerReady\", registerFunction);\n        };\n        // Event listener on router ready\n        document.addEventListener(\"routerReady\", registerFunction);\n    }\n    /**\n     * Redirect\n     *\n     * Redirect to another page\n     *\n     * @return void\n     */\n    redirect(path = \"/\") {\n        // Option for request\n        let option = {};\n        // Body request\n        let body = {\n            filters: {\n                path: path\n            },\n            fields: [\n                \"name\"\n            ]\n        };\n        console.log(path);\n        // New Request\n        let request = new _Crazyrequest__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\"/api/v2/Router/filter\", option);\n        return;\n        /* // Fetch request\n        request.fetch(body)\n            // Check fetch result\n            .then(value => {\n                \n            })\n        ;\n\n        // Read cache\n        this.cacheInstance && this.cacheInstance?.get(\"app\").then(value => {\n\n            let name = \"Home\";\n        \n            // Get router by name\n            let routersFiltered:Array<Object> = this.filterArrayByKeyValue(value, \"name\", name);\n\n            // Check filter\n            if(!routersFiltered.length)\n\n                throw new Error(\"Path given isn't valid\");\n\n            console.log(routersFiltered.shift());\n\n            console.log(\"toto\");\n\n            console.log(this.routerAction);\n\n        }); */\n    }\n}\n/** Private Methods | Scripts\n ******************************************************\n */\n/**\n * Load Action\n *\n * Load Action if js file using the page name and the hash stored.\n * Template use : `/dist/page/app/${name}.${hash}.js`\n *\n * @return Promise\n */\nPageregister.loadAction = (name, async = true) => {\n    let hash;\n    // Check if watch mode\n    if (window.Crazyobject.hash.isWatch()) {\n        // Set from request\n        return window.Crazyobject.hash.setFromRequest().then(() => {\n            // Get hash\n            hash = window.Crazyobject.hash.get();\n            // Set url\n            let url = `/dist/page/app/${name}.${hash}.js`;\n            // Load script\n            return _Loader_Script__WEBPACK_IMPORTED_MODULE_0__[\"default\"].load(url, name, async);\n        });\n    }\n    else {\n        // Get hash\n        hash = window.Crazyobject.hash.get();\n        // Check hash\n        if (!hash) {\n            // Get meta\n            let metaTagEl = document.querySelector('meta[name=\"application-hash\"]');\n            // Check meta\n            if (metaTagEl === null || !(\"content\" in metaTagEl) || !metaTagEl.content)\n                // New error\n                throw new Error(`Hash is empty...`);\n            // Set hash\n            hash = metaTagEl.content;\n        }\n        // Set url\n        let url = `/dist/page/app/${name}.${hash}.js`;\n        // Load script\n        return _Loader_Script__WEBPACK_IMPORTED_MODULE_0__[\"default\"].load(url, name, async);\n    }\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Pageregister);\n\n\n//# sourceURL=webpack://crazy_demo/../CrazyPHP/src/Front/Library/Pageregister.ts?");

/***/ }),

/***/ 4101:
/*!******************************************************!*\
  !*** ../CrazyPHP/src/Front/Library/Register/Page.ts ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Page)\n/* harmony export */ });\n/* harmony import */ var _Utility_Arrays__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Utility/Arrays */ 4989);\n/**\n * Register\n *\n * Front TS Scrips for register elements\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\n\n/**\n * Crazy Page Loader\n *\n * Methods for register a page\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\nclass Page {\n    /**\n     * Constructor\n     */\n    constructor() {\n        /** Private methods\n         ******************************************************\n         */\n        /** @var registered Page registered */\n        this.registered = [];\n        /** Public static methods\n         ******************************************************\n         */\n        /**\n         * Register Page\n         *\n         * @param page:Crazypage instance to register\n         * @returns void\n         */\n        this.register = (page) => {\n            // Check if page already in registered\n            let result = _Utility_Arrays__WEBPACK_IMPORTED_MODULE_0__[\"default\"].filterByKey(this.registered, \"className\", page.className);\n            // Check if result is empty\n            if (result.length !== 0) {\n                // Return\n            }\n            // Register the page\n            else {\n                // Set new register\n                let newRegister = {\n                    className: page.className,\n                    classReference: page,\n                    dateLoaded: new Date(),\n                    scriptUrl: new URL(`${window.location.origin}/dist/${page.className}.${window.Crazyobject.hash.get()}.js`)\n                };\n                // Push register im registered\n                this.registered.push(newRegister);\n            }\n            // Check if first page loaded\n            window.Crazyobject.events.has(\"onFirstPageRegistered\");\n            // Dispatch event\n            window.Crazyobject.events.dispatch(\"onFirstPageRegistered\");\n        };\n        /**\n         * Get Registered\n         *\n         * @param name Name of the page registered\n         * @returns RegisterPageRegistered|null\n         */\n        this.getRegistered = (name) => {\n            // Set result\n            let result = null;\n            // Check name\n            if (name) {\n                // Search\n                let search = _Utility_Arrays__WEBPACK_IMPORTED_MODULE_0__[\"default\"].filterByKey(this.registered, \"className\", name);\n                // Chech search\n                if (search.length > 0)\n                    // Set result\n                    result = search[0];\n            }\n            // Return result\n            return result;\n        };\n        /**\n         * Get All\n         *\n         * Get All Page registered\n         *\n         * @returns Array<RegisterPageRegistered>\n         */\n        this.getAll = () => this.registered;\n    }\n}\n\n\n//# sourceURL=webpack://crazy_demo/../CrazyPHP/src/Front/Library/Register/Page.ts?");

/***/ }),

/***/ 8661:
/*!*********************************************************!*\
  !*** ../CrazyPHP/src/Front/Library/Register/Partial.ts ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Register)\n/* harmony export */ });\n/* harmony import */ var _Crazypartial__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Crazypartial */ 7784);\n/**\n * Register\n *\n * Front TS Scrips for register elements\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\n\n/**\n * Crazy Page Loader\n *\n * Methods for register a page\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\nclass Register {\n    /**\n     * Constructor\n     */\n    constructor() {\n        /** Private parameters\n         ******************************************************\n         */\n        /** @var _collection Collection of partials */\n        this._collection = {};\n        /** Public methods\n         ******************************************************\n         */\n        /**\n         * Register\n         *\n         * Register on or multiple partials\n         *\n         * @param inputs Inputs to register\n         * @returns void\n         */\n        this.register = (inputs = null) => {\n            // Check object length\n            if (inputs && Object.keys(inputs).length)\n                // Iteration of input\n                for (let input in inputs)\n                    // Check if value callable\n                    if (inputs[input].prototype instanceof _Crazypartial__WEBPACK_IMPORTED_MODULE_0__[\"default\"])\n                        // Push in collection\n                        this._collection[input] = inputs[input];\n        };\n        /**\n         * Get\n         *\n         * Get partial class by name\n         *\n         * @param name Name of the partial\n         * @returns null|Crazypartial\n         */\n        this.get = (name) => {\n            // Set result\n            let result = null;\n            // Check name\n            if (name && Object.keys(this._collection).length && name in this._collection)\n                // Set result\n                result = this._collection[name];\n            // Return result\n            return result;\n        };\n        /**\n         * Get All\n         *\n         * Get All Partial\n         *\n         * @returns null|Object\n         */\n        this.getAll = () => {\n            // Set result\n            let result = this._collection;\n            // Return result\n            return result;\n        };\n        /**\n         * Scan\n         *\n         * Scan all partial on dom\n         *\n         * @param parent Parent where search\n         * @returns Arrays\n         */\n        /** */\n        this.scan = (parent) => {\n            // Set result\n            let result = [];\n            let partialValue;\n            let tempValue;\n            let tempResult;\n            // Declare parent\n            let parentEls = [];\n            // Check parent is list of element\n            if (parent instanceof Element) {\n                // Set parent els\n                parentEls.push(parent);\n            }\n            else \n            // Check parent element[]\n            if (Array.isArray(parent)) {\n                // Check parent empty\n                if (parent.length)\n                    // Iteration of element\n                    for (let item of parent)\n                        // Check instance of parent\n                        if (item instanceof Element)\n                            // Push into parentEls\n                            parentEls.push(item);\n            }\n            else \n            // Check is string\n            if (typeof parent === \"string\") {\n                // Get els\n                let items = document.querySelectorAll(parent);\n                // Get parent\n                parentEls = Array.from(items);\n            }\n            // Check result\n            if (parentEls.length)\n                // Iterations parents\n                for (let parentEl of parentEls) {\n                    // Search elements with partial\n                    let resultEls = parentEl.querySelectorAll(\"[partial]\");\n                    // Check result\n                    if (resultEls.length)\n                        // Iteration results\n                        resultEls.forEach(resultEl => {\n                            // Get attributes\n                            partialValue = resultEl.getAttribute(\"partial\");\n                            // Check partial value\n                            if (partialValue) {\n                                // Get temp result object previously ingested in this instance of in the global instance\n                                tempValue = this.get(partialValue) || window.Crazyobject.partials.get(partialValue);\n                                // Check temp value\n                                if (tempValue) {\n                                    // Result temp result\n                                    tempResult = {\n                                        name: partialValue,\n                                        target: resultEl,\n                                        callable: tempValue,\n                                        id: Date.now()\n                                    };\n                                    // Push temp result in result\n                                    result.push(tempResult);\n                                }\n                            }\n                        });\n                }\n            ;\n            // Return result\n            return result;\n        };\n    }\n}\n\n\n//# sourceURL=webpack://crazy_demo/../CrazyPHP/src/Front/Library/Register/Partial.ts?");

/***/ }),

/***/ 4989:
/*!*******************************************************!*\
  !*** ../CrazyPHP/src/Front/Library/Utility/Arrays.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/**\n * Utility\n *\n * Front TS Scrips for multiple tasks\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\nvar _a;\n/**\n * Dependances\n */\n/**\n * Arrays\n *\n * Methods for manage arrays\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\nclass Arrays {\n}\n_a = Arrays;\n/** Public static methods\n ******************************************************\n */\n/**\n * Array Filter\n *\n * @param array\n * @param key\n * @param keyValue\n * @return any\n */\nArrays.filterByKey = (array = [], key, keyValue) => array.filter((aEl) => aEl[key] == keyValue);\n/**\n * Array Filter Multi Dimensional\n *\n * @param array\n * @param key\n * @param keyValue\n * @return any\n */\nArrays.filterByKeyMD = (array = [], key, keyValue) => array.filter((aEl) => _a.getNestedValue(aEl, key.split('.')) == keyValue);\n/**\n * Remove Objects By Key Value\n *\n * Removes all objects from the array where the specified parameter is equal to the given value.\n *\n * @param array The array of objects.\n * @param key The key to check in each object, supports nested keys with \".\" separator.\n * @param value The value to match for removal.\n * @return A new array with the objects removed.\n */\nArrays.removeObjectsByKeyValue = (array, key, value) => {\n    return array.filter(obj => _a.getNestedValue(obj, key.split('.')) !== value);\n};\n/** Private static methods\n ******************************************************\n */\n/**\n * Get Nested Values\n *\n * Helper function to get nested value from an object\n *\n * @param obj The object to traverse\n * @param keys Array of keys representing the path to the nested value\n * @return The nested value or undefined if any key is not found\n */\nArrays.getNestedValue = (obj, keys) => {\n    return keys.reduce((acc, key) => acc && acc[key], obj);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Arrays);\n\n\n//# sourceURL=webpack://crazy_demo/../CrazyPHP/src/Front/Library/Utility/Arrays.ts?");

/***/ }),

/***/ 6987:
/*!************************************************************!*\
  !*** ../CrazyPHP/src/Front/Library/Utility/ColorSchema.ts ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/**\n * Utility\n *\n * Front TS Scrips for multiple tasks\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\n/**\n * Events\n *\n * Methods for store custom events\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\nclass ColorSchema {\n    /** Construct\n     ******************************************************\n     */\n    constructor() {\n        // Get stored them\n        let storedTheme = ColorSchema.getTheme();\n        // Check document already loaded\n        if (document.readyState !== 'loading') {\n            // Set color theme\n            ColorSchema.setTheme(storedTheme);\n        }\n        else\n            // Check if local storage\n            document.addEventListener(\"DOMContentLoaded\", () => {\n                // Set color theme\n                ColorSchema.setTheme(storedTheme);\n            });\n        // Get dark mode preference\n        const darkModePreference = window.matchMedia(\"(prefers-color-scheme: dark)\");\n        // Detect change\n        darkModePreference.addEventListener(\"change\", e => e.matches && ColorSchema.setTheme(ColorSchema.get()));\n        // Get light mode preference\n        const lightModePreference = window.matchMedia(\"(prefers-color-scheme: light)\");\n        // Detect change\n        lightModePreference.addEventListener(\"change\", e => e.matches && ColorSchema.setTheme(ColorSchema.get()));\n    }\n}\n/** Public static methods\n ******************************************************\n */\n/**\n * Get\n *\n * Get color schema\n *\n * @source https://stackoverflow.com/questions/56393880/how-do-i-detect-dark-mode-using-javascript\n *\n * @return 'dark'|'light'\n */\nColorSchema.get = () => { var _a, _b; return ((_b = (_a = window === null || window === void 0 ? void 0 : window.matchMedia) === null || _a === void 0 ? void 0 : _a.call(window, '(prefers-color-scheme:dark)')) === null || _b === void 0 ? void 0 : _b.matches) ? 'dark' : 'light'; };\n/**\n * Set Theme\n *\n * Set theme of the page\n *\n * @param theme:'dark'|'light'\n * @param useLocalStorage:boolean\n *\n * @return void\n */\nColorSchema.setTheme = (theme, useLocalStorage = false) => {\n    // Set on html\n    document.documentElement.setAttribute('theme', theme);\n    // If useLocalStorage\n    if (\"localStorage\" in window && useLocalStorage)\n        // Set in local storage\n        window.localStorage.setItem('crazy-theme', theme);\n};\n/**\n * Get Theme\n *\n * Get them of the page\n *\n * @param useLocalStorage:boolean\n * @return 'dark'|'light'\n */\nColorSchema.getTheme = (useLocalStorage = false) => {\n    // Result\n    let result = ColorSchema.get();\n    // if useLocalStorage\n    if (\"localStorage\" in window && useLocalStorage) {\n        // Get in local storage\n        let localStorageValue = localStorage.getItem('crazy-theme') || ColorSchema.get();\n        // Check value is light or dark\n        if (localStorageValue in ['dark', 'light'])\n            // Set result\n            result = localStorageValue;\n    }\n    // Return result\n    return result;\n};\n/**\n * RGB to HEX\n *\n * @param r\n * @param g\n * @param b\n * @returns {string}\n */\nColorSchema.rgbToHex = (r, g, b) => {\n    return \"#\" + ColorSchema.componentToHex(r) + ColorSchema.componentToHex(g) + ColorSchema.componentToHex(b);\n};\n/**\n * Create Vertical Gradient\n *\n * @param colors\n * @param smooth\n * @returns\n */\nColorSchema.createVerticalGradient = (colors, smooth = true) => {\n    if (smooth) {\n        // Smooth gradient with normal blending between colors\n        const colorStops = colors\n            .map((color, index) => `rgba(${color}) ${(index / (colors.length - 1)) * 100}%`)\n            .join(', ');\n        return `background: linear-gradient(to bottom, ${colorStops});`;\n    }\n    else {\n        // Hard stop gradient without blending between colors\n        const colorStops = colors\n            .map((color, index) => {\n            const position = (index / colors.length) * 100;\n            return `rgba(${color}) ${position}%, rgba(${color}) ${(position + 100 / colors.length)}%`;\n        })\n            .join(', ');\n        return `linear-gradient(to bottom, ${colorStops});`;\n    }\n};\n/** Private static methods\n ******************************************************\n*/\n/**\n * Component To Hex\n * @param c\n * @returns\n */\nColorSchema.componentToHex = (c) => {\n    var hex = c.toString(16);\n    return hex.length == 1 ? \"0\" + hex : hex;\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ColorSchema);\n\n\n//# sourceURL=webpack://crazy_demo/../CrazyPHP/src/Front/Library/Utility/ColorSchema.ts?");

/***/ }),

/***/ 6119:
/*!****************************************************!*\
  !*** ../CrazyPHP/src/Front/Library/Utility/Csv.ts ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/**\n * Utility\n *\n * Front TS Scrips for multiple tasks\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\n/**\n * Csv\n *\n * Manipulate Csv file\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\nclass Csv {\n    /**\n     * Render\n     *\n     * Render csv\n     *\n     * @param results\n     * @returns {string}\n     */\n    static render(results) {\n        // This function converts your results array into CSV format\n        // It handles strings containing commas or line breaks by enclosing them in quotes\n        // and doubles any quotes within the strings.\n        const escapeField = (field) => {\n            if (typeof field === 'string' && (field.includes(',') || field.includes('\\n') || field.includes('\"'))) {\n                return `\"${field.replace(/\"/g, '\"\"')}\"`; // Enclose in quotes and escape existing quotes\n            }\n            return field;\n        };\n        const headers = Object.keys(results[0]).join(',');\n        const rows = results.map(obj => Object.values(obj).map(escapeField).join(','));\n        return [headers, ...rows].join('\\n');\n    }\n}\n/**\n * Donwload\n *\n */\nCsv.download = (object, filename) => {\n    // Get csv string\n    let csvString = Csv.render(object);\n    // Create a Blob from the CSV String\n    const blob = new Blob([csvString], { type: 'text/csv;charset=utf-8;' });\n    // Create a link element\n    const link = document.createElement(\"a\");\n    // Create a URL for the blob\n    const url = URL.createObjectURL(blob);\n    link.setAttribute(\"href\", url);\n    link.setAttribute(\"download\", filename);\n    // Append the link to the body\n    document.body.appendChild(link);\n    // Programmatically click the link to trigger the download\n    link.click();\n    // Remove the link after starting the download\n    document.body.removeChild(link);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Csv);\n\n\n//# sourceURL=webpack://crazy_demo/../CrazyPHP/src/Front/Library/Utility/Csv.ts?");

/***/ }),

/***/ 2834:
/*!*********************************************************!*\
  !*** ../CrazyPHP/src/Front/Library/Utility/DateTime.ts ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/**\n * Utility\n *\n * Front TS Scrips for multiple tasks\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\n/**\n * Dependances\n */\n/**\n * Date Time\n *\n * Class for manipulate time\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\nclass DateTime {\n}\n/** Publis static methods\n ******************************************************\n */\n/**\n * Get Utc string\n *\n * @param date\n * @returns {string}\n */\nDateTime.toUTCString = (date) => {\n    // Define pad\n    const pad = (n) => n < 10 ? '0' + n : n;\n    // Return\n    return date.getUTCFullYear() + '-' +\n        pad(date.getUTCMonth() + 1) + '-' + // Months are 0-indexed\n        pad(date.getUTCDate()) + ' ' +\n        pad(date.getUTCHours()) + ':' +\n        pad(date.getUTCMinutes()) + ':' +\n        pad(date.getUTCSeconds()) + ' UTC';\n};\n/**\n * To Iso String\n *\n * @param date\n * @returns {string}\n */\nDateTime.toISOString = (date) => {\n    // Define pad\n    const pad = (n) => n < 10 ? '0' + n : n;\n    // Return\n    return date.getUTCFullYear() +\n        '-' + pad(date.getUTCMonth() + 1) +\n        '-' + pad(date.getUTCDate()) +\n        'T' + pad(date.getUTCHours()) +\n        ':' + pad(date.getUTCMinutes()) +\n        ':' + pad(date.getUTCSeconds()) +\n        '.' + String((date.getUTCMilliseconds() / 1000).toFixed(3)).slice(2, 5) +\n        'Z';\n    ;\n};\n/**\n * To YYYYMMDD format\n *\n * To YYYY/MM/DD format\n *\n * @param date\n * @param separator\n * @returns\n */\nDateTime.toYYYYMMDDFormat = (date, separator = \"/\") => {\n    // Gets the full year (e.g., 2024)\n    const year = date.getFullYear();\n    // Months are 0-indexed; pad with leading zero\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    // Pad with leading zero if necessary\n    const day = String(date.getDate()).padStart(2, '0');\n    // Return result\n    return `${year}${separator}${month}${separator}${day}`;\n};\n/**\n * Get Next Day\n *\n * Return in format YYYY/MM/DD\n *\n * @param weekday\n * @returns string\n */\nDateTime.getNextDay = (weekday) => {\n    // Check week day\n    if (weekday < 1 || weekday > 7)\n        // New error\n        throw new Error(\"Invalid weekday number. Please enter a number between 1 (Monday) and 7 (Sunday).\");\n    // New date\n    const today = new Date();\n    const todayDayOfWeek = today.getUTCDay(); // Sunday - 0, Monday - 1, etc.\n    const daysUntilNext = (weekday - todayDayOfWeek + 7) % 7; // Calculate days until the next desired weekday\n    // Set the date to the next desired weekday\n    today.setUTCDate(today.getUTCDate() + daysUntilNext);\n    // Format the date as YYYY/MM/DD\n    const year = today.getUTCFullYear();\n    const month = (today.getUTCMonth() + 1).toString().padStart(2, '0'); // Months are zero-indexed\n    const day = today.getUTCDate().toString().padStart(2, '0');\n    // Return date\n    return `${year}/${month}/${day}`;\n};\n/**\n * Get Today Date YYMMDD\n *\n * @returns\n */\nDateTime.getTodayDateYYMMDD = () => {\n    const date = new Date();\n    const year = date.getFullYear().toString().slice(-2); // Get last two digits of the year\n    const month = (date.getMonth() + 1).toString().padStart(2, '0'); // Months are 0-indexed, pad with zero\n    const day = date.getDate().toString().padStart(2, '0'); // Pad with zero if needed\n    return `${year}${month}${day}`;\n};\n/**\n * Get Today Date YYYYMMDD\n *\n * @returns\n */\nDateTime.getTodayDateYYYYMMDD = () => {\n    const date = new Date();\n    const year = date.getFullYear().toString(); // Get last two digits of the year\n    const month = (date.getMonth() + 1).toString().padStart(2, '0'); // Months are 0-indexed, pad with zero\n    const day = date.getDate().toString().padStart(2, '0'); // Pad with zero if needed\n    return `${year}${month}${day}`;\n};\n/**\n * Get Today Date YYYY-MM-DD\n *\n * @returns\n */\nDateTime.getTodayDateYYYY_MM_DD = () => {\n    const date = new Date();\n    const year = date.getFullYear().toString(); // Get last two digits of the year\n    const month = (date.getMonth() + 1).toString().padStart(2, '0'); // Months are 0-indexed, pad with zero\n    const day = date.getDate().toString().padStart(2, '0'); // Pad with zero if needed\n    return `${year}-${month}-${day}`;\n};\n/**\n * Convert Date Fromat\n *\n * To D/M/YYYY\n *\n * @param dateStr\n * @returns\n */\nDateTime.convertDateFormat = (dateStr) => {\n    // Set result\n    let result = \"\";\n    // Check date\n    if (!dateStr)\n        // Return result\n        return result;\n    // Parse the input string into a Date object\n    const date = new Date(dateStr);\n    // Format the date as D/M/YYYY\n    // Note: getMonth() returns 0 for January, 1 for February, etc., so we add 1.\n    result = `${date.getMonth() + 1}/${date.getDate()}/${date.getFullYear()}`;\n    // Return result\n    return result;\n};\n/**\n * Get Today Date\n *\n * As YYYY-MM-DD\n *\n * @param separator By default \"-\"\n * @returns {string}\n */\nDateTime.getTodayDate = (separator = \"-\") => {\n    const today = new Date();\n    const year = today.getFullYear(); // Gets the full year (e.g., 2024)\n    const month = (today.getMonth() + 1).toString().padStart(2, '0'); // Month is 0-indexed, add 1 to get 1-12\n    const day = today.getDate().toString().padStart(2, '0'); // Day of the month\n    return `${year}${separator}${month}${separator}${day}`;\n};\n/**\n * Get the first date of a week based on an offset from the current week.\n *\n * @param weekOffset - The week offset from the current week (0 for this week, -1 for previous week, 1 for next week).\n * @param format - Optional format for the returned date. Default is 'YYYY-MM-DD'.\n * @returns {string} The first date of the specified week in the given format.\n */\nDateTime.getFirstDateOfWeek = (weekOffset, format = 'YYYY-MM-DD') => {\n    // Get current date\n    const today = new Date();\n    // Get day number 0 (Sunday) to 6 (Saturday)\n    const currentDay = today.getDay();\n    // Days since the last Monday\n    const daysSinceMonday = (currentDay + 6) % 7;\n    // Calculate the date of the last Monday\n    const lastMonday = new Date(today);\n    lastMonday.setDate(today.getDate() - daysSinceMonday);\n    // Calculate the first date of the target week\n    const targetMonday = new Date(lastMonday);\n    targetMonday.setDate(lastMonday.getDate() + weekOffset * 7);\n    // Format the date\n    return DateTime.formatDate(targetMonday, format);\n};\n/**\n * Is Date Current Week\n *\n * Check if a given date is in the current week.\n *\n * @param date - The date to check.\n * @returns True if the date is in the current week, false otherwise.\n */\nDateTime.isDateInCurrentWeek = (date) => {\n    // check date\n    if (typeof date == \"string\")\n        // Set date\n        date = new Date(date);\n    const today = new Date();\n    const dayOfWeek = today.getDay(); // 0 (Sunday) to 6 (Saturday)\n    const startOfWeek = new Date(today);\n    const endOfWeek = new Date(today);\n    // Calculate the start of the current week (Monday)\n    startOfWeek.setDate(today.getDate() - (dayOfWeek === 0 ? 6 : dayOfWeek - 1));\n    // Calculate the end of the current week (Sunday)\n    endOfWeek.setDate(startOfWeek.getDate() + 6);\n    // Set hours to 0 to compare only date parts\n    startOfWeek.setHours(0, 0, 0, 0);\n    endOfWeek.setHours(23, 59, 59, 999);\n    // Compare the given date with the start and end of the current week\n    return date >= startOfWeek && date <= endOfWeek;\n};\n/**\n * Is Valide Date\n *\n * Validate a simple date string\n *\n * @param dateString\n * @returns {boolean}\n */\nDateTime.isValidDate = (dateString) => {\n    // Return bool\n    return !isNaN(Date.parse(dateString));\n};\n/**\n * Format a Date object into a string based on the given format.\n *\n * @param date - The Date object to format.\n * @param format - The format string.\n * @returns {string} The formatted date string.\n */\nDateTime.formatDate = (date, format) => {\n    // Get full year\n    const year = date.getFullYear();\n    // Get month\n    const month = ('0' + (date.getMonth() + 1)).slice(-2);\n    // Get day\n    const day = ('0' + date.getDate()).slice(-2);\n    // Swtich\n    switch (format) {\n        case 'YYYY-MM-DD':\n            return `${year}-${month}-${day}`;\n        case 'MM/DD/YY':\n            return `${month}/${day}/${year.toString().slice(-2)}`;\n        case 'DD/MM/YYYY':\n            return `${day}/${month}/${year}`;\n        default:\n            throw new Error('Unsupported date format');\n    }\n};\n/**\n * Get All Days Between\n *\n * @param startDate\n * @param endDate\n * @returns\n */\nDateTime.getAllDaysBetween = (startDate, endDate) => {\n    // Prepare dates\n    const dates = [];\n    // Reset the time to midnight for both dates to avoid time discrepancies\n    const resetTime = (d) => {\n        d.setHours(0, 0, 0, 0);\n        return d;\n    };\n    let currentDate = resetTime(new Date(startDate)); // Clone startDate and reset time\n    const lastDate = resetTime(new Date(endDate)); // Clone endDate and reset time\n    // Loop through and add each day to the dates array\n    while (currentDate <= lastDate) {\n        dates.push(new Date(currentDate)); // Push a clone of currentDate\n        currentDate.setDate(currentDate.getDate() + 1); // Move to the next day\n    }\n    // Return dates\n    return dates;\n};\n/**\n * Is Weekend\n *\n * @param date\n * @returns\n */\nDateTime.isWeekend = (date) => {\n    const day = date.getDay(); // 0 is Sunday, 6 is Saturday\n    return day === 0 || day === 6; // Returns true if Saturday or Sunday\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (DateTime);\n\n\n//# sourceURL=webpack://crazy_demo/../CrazyPHP/src/Front/Library/Utility/DateTime.ts?");

/***/ }),

/***/ 3042:
/*!*******************************************************!*\
  !*** ../CrazyPHP/src/Front/Library/Utility/Events.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Events)\n/* harmony export */ });\n/* harmony import */ var _Error_Page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../Error/Page */ 6506);\n/**\n * Utility\n *\n * Front TS Scrips for multiple tasks\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\n/**\n * Dependances\n */\n\n/**\n * Events\n *\n * Methods for store custom events\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\nclass Events {\n    /**\n     * Constructor\n     */\n    constructor() {\n        /** Private parameters\n         ******************************************************\n         */\n        /** @param _collection Collection of the event */\n        this._collection = [];\n        /**\n         * Add\n         *\n         * Add Event\n         *\n         * @param name Name of the event\n         * @param detail Data you want pass into the event\n         */\n        this.add = (name, detail = null) => {\n            // Check name\n            if (!name)\n                // Error\n                throw new _Error_Page__WEBPACK_IMPORTED_MODULE_0__[\"default\"](\"Event must have a valid name\");\n            // Check if event already exists\n            if (this.has(name))\n                // Error\n                throw new _Error_Page__WEBPACK_IMPORTED_MODULE_0__[\"default\"](\"The Event already exists\");\n            // Declare var\n            let event;\n            // Check detail\n            if (detail === null)\n                // Set event\n                event = new Event(name);\n            else\n                // Set event\n                event = new CustomEvent(name, {\n                    detail: detail\n                });\n            // Push event in the collection\n            this._collection.push(event);\n        };\n        /**\n         * Get\n         *\n         * Get a event\n         *\n         * @param name Name of the event\n         * @returns Event|CustomEvent|null Null if not event with this name\n         */\n        this.get = (name) => {\n            // Prepare result\n            let result = null;\n            // Check name\n            if (name && this._collection.length)\n                // Iteration of the events\n                for (let event of this._collection)\n                    // Check if type is matching with name\n                    if (event.type == name) {\n                        // Set result\n                        result = event;\n                        // Break event\n                        break;\n                    }\n            // Return result\n            return result;\n        };\n        /**\n         * Get All\n         *\n         * Get All Events\n         *\n         * @returns Array<Event|CustomEvent>\n         */\n        this.getAll = () => this._collection;\n        /**\n         * Has\n         *\n         * Has event\n         *\n         * @param name\n         */\n        this.has = (name) => {\n            // Prepare result\n            let result = false;\n            // Check name\n            if (name && this._collection.length)\n                // Iteration of the events\n                for (let event of this._collection)\n                    // Check if type is matching with name\n                    if (event.type == name) {\n                        // Set result\n                        result = true;\n                        // Break event\n                        break;\n                    }\n            // Return result\n            return result;\n        };\n        /**\n         * Remove\n         *\n         * Remove Event\n         *\n         * @param name\n         * @returns boolean\n         */\n        this.remove = (name) => {\n            // Prepare result\n            let result = false;\n            // Check if event is set\n            if ((name && !this.has(name)) || this._collection.length === 0)\n                // Set result\n                result = true;\n            else \n            // Check name\n            if (name && this._collection.length)\n                // Iteration of the events\n                for (let eventKey in this._collection)\n                    // Check if type is matching with name\n                    if (this._collection[eventKey].type == name) {\n                        // Delete item\n                        delete this._collection[eventKey];\n                        // Set result\n                        result = true;\n                        // Break event\n                        break;\n                    }\n            // Return result\n            return result;\n        };\n        /**\n         * Dispatch\n         *\n         * dispatch event\n         *\n         * @param name\n         */\n        this.dispatch = (name, target = document) => {\n            // Check name\n            if (!name)\n                // Return\n                return;\n            // Check if name is string\n            if (typeof name === \"string\")\n                // Convert it to array\n                name = [name];\n            // Declare event\n            let currentEvent;\n            // Check name\n            if (name.length)\n                // Iteration of the name\n                for (let current of name) {\n                    // Get event\n                    currentEvent = this.get(current);\n                    // check current event\n                    if (currentEvent !== null)\n                        // Dispatch event\n                        target.dispatchEvent(currentEvent);\n                }\n        };\n    }\n}\n\n\n//# sourceURL=webpack://crazy_demo/../CrazyPHP/src/Front/Library/Utility/Events.ts?");

/***/ }),

/***/ 729:
/*!*****************************************************!*\
  !*** ../CrazyPHP/src/Front/Library/Utility/Form.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! tslib */ 4539);\n/* harmony import */ var _Error_Page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../Error/Page */ 6506);\n/* harmony import */ var _Strings__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Strings */ 7237);\n/* harmony import */ var _Crazyrequest__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Crazyrequest */ 8384);\n/* harmony import */ var tom_select__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tom-select */ 4467);\n/* harmony import */ var tom_select__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(tom_select__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var maska__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! maska */ 1206);\n/* harmony import */ var _Dom_Root__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Dom/Root */ 3611);\n/**\n * Utility\n *\n * Front TS Scrips for multiple tasks\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\n\n\n\n\n\n\n\n/**\n * Form\n *\n * Methods for retrieve value from form\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\nclass Form {\n    /** Construct\n     ******************************************************\n     */\n    constructor(form) {\n        /** Public method\n         ******************************************************\n         */\n        /**\n         * Scan\n         *\n         * Scan form in crazy root\n         *\n         * @deprecated\n         * @return number\n         */\n        this.scan = () => {\n            // Declare result\n            let result = 0;\n            // Get root\n            let rootEl = _Dom_Root__WEBPACK_IMPORTED_MODULE_5__[\"default\"].getEl();\n            // Check root\n            if (rootEl === null)\n                // Return\n                return result;\n            // Searh crazy form \n            let searchEls = rootEl.querySelectorAll(\"form.crazy-form\");\n            // Set result\n            result = searchEls.length;\n            // Check result\n            if (result > 0)\n                // Iteration of searchls\n                for (let i = 0; i < searchEls.length; i++) {\n                    // Add event on them\n                    searchEls[i].addEventListener(\"submit\", this.eventOnSubmit);\n                }\n            // Return\n            return result;\n        };\n        /** Punlic methods\n         ******************************************************\n         */\n        /**\n         * Get Schema\n         *\n         * Get schema by name\n         *\n         * @param formName:\n         * @return HTMLElement|null\n         */\n        this.getForm = (formName) => {\n            // Declare result\n            let result = null;\n            // Check formname\n            if (formName)\n                // Return result\n                return result;\n            // Search form\n            let searchEl = document.querySelector(`form#${formName}`);\n            // Check search\n            if (searchEl === null)\n                // Return result\n                return result;\n            // Set result\n            result = searchEl;\n            // Return result\n            return result;\n        };\n        /**\n         * Set Value\n         *\n         * Set value of form\n         *\n         * @param values\n         * @param valuesID\n         * @returns void\n         */\n        this.setValue = (values, valuesID = null) => {\n            var _a;\n            // Declare var\n            let currentName;\n            let currentType;\n            // Get all select and input on form el\n            let items = this._formEl.querySelectorAll(\"select, input\");\n            // Check items\n            if (items.length)\n                // Iteration items\n                for (let i = 0; i < items.length; i++) {\n                    // Check if name\n                    if (\"name\" in items[i] && items[i][\"name\"] !== \"\") {\n                        // Get name\n                        currentName = items[i][\"name\"] /* .replace(`${formName}_`, \"\") */;\n                        // Get type\n                        currentType = (_a = items[i][\"type\"]) !== null && _a !== void 0 ? _a : \"\";\n                        // Check if in values\n                        if (Object.keys(values).includes(currentName)) {\n                            // Check itemEl\n                            if (typeof this[`${currentType}Set`] === \"function\") {\n                                // Set result\n                                this[`${currentType}Set`](items[i], values[currentName], valuesID);\n                            }\n                        }\n                    }\n                }\n        };\n        /**\n         * Reset Value\n         *\n         * Set value of form\n         *\n         * @param clear Do not use default and just clear value\n         * @returns void\n         */\n        this.resetValue = (clear = false) => {\n            // Get all select and input on form el\n            let items = this._formEl.querySelectorAll(\"select, input\");\n            // Check items\n            if (items.length)\n                // Iteration items\n                for (let i = 0; i < items.length; i++) {\n                    // Check if name\n                    if ((items[i] instanceof HTMLSelectElement || items[i] instanceof HTMLInputElement) && \"name\" in items[i] && items[i][\"name\"] !== \"\") {\n                        /**\n                         * Retrieve default value\n                         */\n                        // Get default value\n                        let defaultValue = clear\n                            ? null\n                            : this._getDefaultOfInput(items[i]);\n                        // Check if radio\n                        // @ts-ignore\n                        if (items[i].type === \"radio\") {\n                            console.log(\"--debug--\");\n                            // @ts-ignore\n                            console.log(items[i].name);\n                            console.log(defaultValue);\n                        }\n                        /**\n                         * Clean current value\n                         */\n                        // Check is tom select\n                        if (\"tomselect\" in items[i]) {\n                            // Get tome select instance\n                            // @ts-ignore\n                            let tomSelectInstance = items[i].tomselect;\n                            // Clear\n                            tomSelectInstance.clear();\n                            // Continue iteration\n                            continue;\n                        }\n                        // Check if item has value\n                        if (items[i].hasAttribute(\"value\")) {\n                            // Check if defaultValue\n                            if (defaultValue === null)\n                                // Reset value\n                                items[i].removeAttribute(\"value\");\n                            else \n                            // Check default value is string\n                            if (defaultValue) {\n                                // Set value\n                                items[i].setAttribute(\"value\", defaultValue.toString());\n                                // Check html inpit\n                                if (items[i] instanceof HTMLInputElement)\n                                    // Set value\n                                    // @ts-ignore\n                                    items[i].value = defaultValue.toString();\n                            }\n                        }\n                        // Check if item has value_id\n                        if (items[i].hasAttribute(\"value_id\"))\n                            // Reset value\n                            items[i].removeAttribute(\"value_id\");\n                        // Check if item has checked\n                        // @ts-ignore\n                        if (items[i].hasAttribute(\"checked\") || items[i].type == \"checkbox\") {\n                            // Check if defaultValue\n                            if (defaultValue === null) {\n                                // Remove checked\n                                items[i].removeAttribute(\"checked\");\n                                // Remove check\n                                // @ts-ignore\n                                items[i].checked = false;\n                            }\n                            else \n                            // Check default value is string\n                            if (defaultValue) {\n                                // Check html inpit\n                                if (items[i] instanceof HTMLInputElement)\n                                    // Set value\n                                    // @ts-ignore\n                                    items[i].checked = defaultValue;\n                            }\n                        }\n                    }\n                }\n            // Check if form has value_id\n            if (this._formEl.hasAttribute(\"value_id\"))\n                // Reset value\n                this._formEl.removeAttribute(\"value\");\n        };\n        /**\n         * Get Form Data\n         *\n         * Get formdata by name\n         *\n         * @param formName:string\n         * @param processAndValidate:boolean\n         * @return null|Arrays<null>\n         */\n        this.getFormData = (formName) => {\n            // Declare var\n            let formEl;\n            let itemResult;\n            // Check form name\n            if (typeof formName == \"string\") {\n                // Get form\n                formEl = this.getForm(formName);\n                // Check form el\n                if (formEl === null)\n                    // New error\n                    throw new Error(\"Form do not exists\");\n            }\n            else\n                // Set form el\n                formEl = formName;\n            // Set formdata\n            let result = new FormData();\n            // Get all select and input on form el\n            let items = formEl.querySelectorAll(\"select, input\");\n            // Check items\n            if (items.length)\n                // Iteration items\n                for (let i = 0; i < items.length; i++) {\n                    // Get result\n                    itemResult = this.extractKeyValue(items[i]);\n                    // Check itemResult\n                    if (itemResult !== null)\n                        // Push value of current input\n                        result.append(itemResult[0], itemResult[1]);\n                }\n            // Return result\n            return result;\n        };\n        /**\n         * Clear values\n         *\n         * Clear values from form\n         * @param formName:string\n         * @return void\n         */\n        /** Private methods | Event\n         ******************************************************\n         */\n        /**\n         * Event On Submit\n         *\n         * Event on submit form\n         *\n         * @param e:Event\n         * @return void\n         */\n        this.eventOnSubmit = (e) => {\n            // Prevent default action\n            e.preventDefault();\n            // Check target\n            if (e.target === null)\n                // Stop\n                return;\n            // Set target\n            let target = e.target;\n            // Get formdata\n            let formData = this.getFormData(target);\n            // Lock form\n            this.lock();\n            // Get entity\n            let entity = target.attributes.getNamedItem(\"entity\");\n            // Get value_id\n            let valueID = target.attributes.getNamedItem(\"value_id\");\n            // Check entity or value id\n            if (entity !== null && valueID !== null)\n                // Create item\n                this._onSubmitUpdate(entity.value, valueID.value, formData)\n                    .then(v => {\n                    // Unlock target\n                    this.unlock();\n                });\n            else \n            // Check entity\n            if (entity !== null) {\n                // Create item\n                this._onSubmitCreate(entity.value, formData)\n                    .then(value => {\n                    // Check v\n                    if (value.results.length)\n                        // Set values\n                        this.setValue(value.results[0], value.results[0]._id);\n                    // Unlock target\n                    this.unlock();\n                });\n            }\n        };\n        /**\n         * Event On Reset\n         *\n         * Event on reset\n         *\n         * @param e:Event\n         * @return void\n         */\n        this.eventOnReset = (e) => {\n            // Prevent default\n            e.preventDefault();\n            // Lock form\n            this.lock();\n            // Check form in e.target\n            if (e.currentTarget instanceof HTMLFormElement) {\n                // Get target\n                let formEl = e.currentTarget;\n                // Get value_id\n                let valueID = formEl.attributes.getNamedItem(\"value_id\");\n                // Get value_id\n                let entity = formEl.attributes.getNamedItem(\"entity\");\n                // Check valueID\n                if (valueID && entity) {\n                    this._onSubmiDelete(entity.value, valueID.value)\n                        .then(v => {\n                    }).then(v => {\n                        // Retrive other value\n                        this._initOnReady();\n                    });\n                }\n                else {\n                    // Reset value\n                    this.resetValue();\n                    // Unlock\n                    this.unlock();\n                }\n            }\n        };\n        /** Private methods | Event Specific Action\n         ******************************************************\n         */\n        /**\n         * On Submit Create\n         *\n         * Create item in back\n         *\n         * @param entityValue\n         * @param formData\n         * @return Promise<any>\n         */\n        this._onSubmitCreate = (entityValue, formData) => (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, function* () {\n            // Prepare request\n            let request = new _Crazyrequest__WEBPACK_IMPORTED_MODULE_2__[\"default\"](`/api/v2/${entityValue}/create`, {\n                method: \"POST\",\n                header: {\n                    'Cache-Control': 'no-cache, no-store, must-revalidate'\n                },\n                cache: false\n            });\n            // Run request\n            return request.fetch(formData);\n        });\n        /**\n         * On Submit Update\n         *\n         * Update item in back\n         *\n         * @param entityValue\n         * @param valueID\n         * @param formData\n         * @return Promise<any>\n         */\n        this._onSubmitUpdate = (entityValue, valueID, formData) => (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, function* () {\n            // Prepare request\n            let request = new _Crazyrequest__WEBPACK_IMPORTED_MODULE_2__[\"default\"](`/api/v2/${entityValue}/update/${valueID}`, {\n                method: \"PUT\",\n                header: {\n                    'Cache-Control': 'no-cache, no-store, must-revalidate'\n                },\n                cache: false\n            });\n            // Run request\n            return request.fetch(formData);\n        });\n        /**\n         * On Submit Delete\n         *\n         * Delete item in back\n         *\n         * @param entityValue\n         * @param valueID\n         * @return Promise<any>\n         */\n        this._onSubmiDelete = (entityValue, valueID) => (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, function* () {\n            // Prepare request\n            let request = new _Crazyrequest__WEBPACK_IMPORTED_MODULE_2__[\"default\"](`/api/v2/${entityValue}/delete/${valueID}`, {\n                method: \"DELETE\",\n                header: {\n                    'Cache-Control': 'no-cache, no-store, must-revalidate'\n                },\n                cache: false\n            });\n            // Run request\n            return request.fetch();\n        });\n        /** Public methods | UI\n         ******************************************************\n         */\n        /**\n         * Lock\n         *\n         * Lock form\n         *\n         * @returns void\n         */\n        this.lock = () => {\n            // Get all select and input on form el\n            let items = this._formEl.querySelectorAll(\"select, input, button[type=\\\"submit\\\"], button[type=\\\"reset\\\"]\");\n            // Check items\n            if (items.length)\n                // Iteration items\n                for (let i = 0; i < items.length; i++) {\n                    // Check tag name\n                    if (items[i].tagName == \"INPUT\") {\n                        // Set Read only\n                        items[i].setAttribute(\"readonly\", \"loading\");\n                    }\n                    else \n                    // Chech button\n                    if (items[i].tagName == \"BUTTON\") {\n                        // Set Read only\n                        items[i].setAttribute(\"disabled\", \"loading\");\n                    }\n                }\n        };\n        /**\n         * Lock\n         *\n         * Lock form\n         *\n         * @returns void\n         */\n        this.unlock = () => {\n            // Get all select and input on form el\n            let items = this._formEl.querySelectorAll(\"select, input, button[type=\\\"submit\\\"], button[type=\\\"reset\\\"]\");\n            // Check items\n            if (items.length)\n                // Iteration items\n                for (let i = 0; i < items.length; i++) {\n                    // Check tag name\n                    if (items[i].tagName == \"INPUT\" && items[i].hasAttribute(\"readonly\") && items[i].getAttribute(\"readonly\") == \"loading\") {\n                        // Set Read only\n                        items[i].removeAttribute(\"readonly\");\n                    }\n                    else \n                    // Check tag name\n                    if (items[i].tagName == \"INPUT\" && items[i].hasAttribute(\"disabled\") && items[i].getAttribute(\"disabled\") == \"loading\") {\n                        console.log(items[i]);\n                        // Set Read only\n                        items[i].removeAttribute(\"disabled\");\n                    }\n                    else \n                    // Chech button\n                    if (items[i].tagName == \"BUTTON\" && items[i].hasAttribute(\"disabled\") && items[i].getAttribute(\"disabled\") == \"loading\") {\n                        // Set Read only\n                        items[i].removeAttribute(\"disabled\");\n                    }\n                }\n        };\n        /** Private methods | Form\n         ******************************************************\n         */\n        /**\n         * Ingest Form\n         *\n         * Ingest form on instance\n         *\n         * @param form\n         * @return void\n         */\n        this._ingestForm = (form) => (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, function* () {\n            // Declare variable\n            let formEl;\n            // Check form is string\n            if (typeof form === \"string\") {\n                // Check \n                if (!form)\n                    // New error\n                    throw new _Error_Page__WEBPACK_IMPORTED_MODULE_0__[\"default\"](`Form is not valid`);\n                // Search el\n                formEl = _Dom_Root__WEBPACK_IMPORTED_MODULE_5__[\"default\"].getEl().querySelector(form);\n                // Check \n                if (formEl === null)\n                    // New error\n                    throw new _Error_Page__WEBPACK_IMPORTED_MODULE_0__[\"default\"](`Form \"#${form}\" can't be found on the page`);\n            }\n            else \n            // El\n            if (form.nodeName === \"FORM\") {\n                // Set form EL\n                formEl = form;\n                // If not form el\n            }\n            else\n                // New error\n                throw new _Error_Page__WEBPACK_IMPORTED_MODULE_0__[\"default\"](`Element given in form instance is not a form node`);\n            // Push form\n            this._formEl = formEl;\n        });\n        /**\n         * Init Form\n         *\n         * Prepare form input\n         *\n         * @returns {Promise<void>}\n         */\n        this._initForm = () => (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, function* () {\n            // Get all input\n            let allInputEls = this._formEl.querySelectorAll(\"input, select\");\n            // Check inputs\n            if (allInputEls.length)\n                // Iteration\n                for (let inputEl of Array.from(allInputEls)) {\n                    // Check if item given is input or select\n                    if (inputEl instanceof HTMLInputElement || inputEl instanceof HTMLSelectElement) {\n                        // Check is validate is enable\n                        if (inputEl.classList.contains(\"validate\"))\n                            // Init validate on input\n                            yield this._initEventValidateOnInput(inputEl, allInputEls);\n                        // Check if required is enable\n                        if (inputEl.required == true)\n                            // Init required on input\n                            yield this._initEventRequiredOnInput(inputEl, allInputEls);\n                        // Get input type\n                        let inputType = \"type\" in inputEl.dataset && typeof inputEl.dataset.type === \"string\" && inputEl.dataset.type\n                            ? inputEl.dataset.type\n                            : inputEl.type;\n                        // Get init method name\n                        let initMethodName = `_init${_Strings__WEBPACK_IMPORTED_MODULE_1__[\"default\"].ucfirst(inputType.toLowerCase())}Input`;\n                        // Check initMethodName in this \n                        if (initMethodName in this) {\n                            // Run method\n                            this[initMethodName](inputEl);\n                        }\n                        else\n                            // Check init\n                            console.info(`Need to implement \"${initMethodName}\"`);\n                    }\n                }\n        });\n        /**\n         * Init On Ready\n         *\n         * Check action to accompish before loading\n         *\n         * @returns {Promise<void>}\n         */\n        this._initOnReady = () => (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, function* () {\n            // Get attribute on ready and entity\n            let onreadyAttr = this._formEl.getAttribute(\"onready\");\n            // Get attribute entity\n            let entityAttr = this._formEl.getAttribute(\"entity\");\n            // Check if last\n            if (entityAttr && onreadyAttr && /^last\\/[0-9]+$/.test(onreadyAttr)) {\n                // Prepare request \n                let request = new _Crazyrequest__WEBPACK_IMPORTED_MODULE_2__[\"default\"](`/api/v2/${entityAttr}/${onreadyAttr}`, {\n                    method: \"get\",\n                    cache: false,\n                    responseType: \"json\",\n                    from: \"internal\"\n                });\n                // Fetch request\n                request.fetch()\n                    .then(value => {\n                    // Unlock\n                    this.unlock();\n                    // Check result\n                    if (value.results.length)\n                        // Set values\n                        this.setValue(value.results[0], value.results[0]._id);\n                });\n                // If not action, unlock form\n            }\n            else\n                // Unlock\n                this.unlock();\n        });\n        /**\n         * Init Event on submit\n         *\n         * Event On submit on form\n         *\n         * @return Promise<void>\n         */\n        this._initEventOnSubmit = () => (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, function* () {\n            // Add event on them\n            this._formEl.addEventListener(\"submit\", this.eventOnSubmit);\n        });\n        /**\n         * Init Event on reset\n         *\n         * Event On reset on form\n         *\n         * @return Promise<void>\n         */\n        this._initEventOnReset = () => (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, function* () {\n            // Add event on reset\n            this._formEl.addEventListener(\"reset\", this.eventOnReset);\n        });\n        /**\n         * Init Event Validate On Input\n         *\n         * @param inputEl\n         * @param allInputEls\n         */\n        this._initEventValidateOnInput = (inputEl, allInputEls) => (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, function* () {\n            // Add event on input els\n            inputEl.addEventListener(\"invalid\", (e) => {\n                // Prevent default\n                e.preventDefault();\n                // Check currentTarget and its parent\n                if (e.target && e.target instanceof HTMLElement && e.target.closest(\"div.input-field\")) {\n                    // Get parent input field\n                    let inputFieldEl = e.target.closest(\"div.input-field\");\n                    // Add error\n                    inputFieldEl === null || inputFieldEl === void 0 ? void 0 : inputFieldEl.classList.add(\"error\");\n                    // Suffix\n                    // Check if already suffix\n                    let suffixEl = inputFieldEl === null || inputFieldEl === void 0 ? void 0 : inputFieldEl.querySelector(\"div.suffix\");\n                    // Check suffix el\n                    if (suffixEl) {\n                        // Replace class\n                        suffixEl.classList.replace(\"suffix\", \"suffix-hidden\");\n                    }\n                    // Create error suffix\n                    let suffixErrorEl = this._newSuffixErrorEl();\n                    // Add suffix\n                    inputEl.before(suffixErrorEl);\n                    // supporting-text\n                    // Check if already suffix\n                    let supportingTextEl = inputFieldEl === null || inputFieldEl === void 0 ? void 0 : inputFieldEl.querySelector(\"span.supporting-text\");\n                    // Check suffix el\n                    if (supportingTextEl) {\n                        // Replace class\n                        supportingTextEl.classList.replace(\"supporting-text\", \"suffix-hidden\");\n                    }\n                    // Create error suffix\n                    let supportingTextErrorEl = this._newSupportingTextErrorEl(inputEl, allInputEls);\n                    // Add suffix\n                    inputFieldEl === null || inputFieldEl === void 0 ? void 0 : inputFieldEl.append(supportingTextErrorEl);\n                }\n                console.log(e);\n            });\n        });\n        /**\n         * Init Event Required On Input\n         *\n         * With delay when key up\n         *\n         * @param inputEl\n         * @param allInputEls\n         */\n        this._initEventRequiredOnInput = (inputEl, allInputEls) => (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, function* () {\n            // Check if input\n            if (inputEl instanceof HTMLInputElement) {\n                // Event function\n                let eventRequiredOnInput = (e) => {\n                    // Prevent default\n                    e.preventDefault();\n                    console.log(e);\n                };\n                // Set timer\n                let timeout = null;\n                // Set wait time\n                let waitTime = 500;\n                // Add event on change\n                inputEl.addEventListener('keyup', (e) => {\n                    // Check timeout\n                    if (timeout !== null) {\n                        // Clear timeout\n                        clearTimeout(timeout);\n                    }\n                    // Set timeout\n                    timeout = setTimeout(() => {\n                        // call event\n                        eventRequiredOnInput(e);\n                    }, waitTime);\n                });\n            }\n        });\n        /** Private methods | Retrieve value\n         ******************************************************\n         */\n        /**\n         * Extract Key Value\n         *\n         * @param itemEl:HTMLElement\n         * @return FormObjectForFormDataAppend\n         */\n        this.extractKeyValue = (itemEl) => {\n            // Declare result\n            let result = null;\n            // Check itemEl\n            if (\"type\" in itemEl && itemEl.type && typeof itemEl.type === \"string\" && typeof this[`${itemEl.type}Retrieve`] === \"function\")\n                // Set result\n                result = this[`${itemEl.type}Retrieve`](itemEl);\n            // Return null\n            return result;\n        };\n        /**\n         * Retrieve Text\n         *\n         * @param itemEl:HTMLElement\n         * @return null|Array<any>\n         */\n        this.textRetrieve = (itemEl) => {\n            // Set result\n            let result = null;\n            // Check value\n            if (\"value\" in itemEl && \"name\" in itemEl) {\n                let key = itemEl.name;\n                // Set result\n                let value = itemEl.value;\n                // Push in result\n                result = [key, value];\n            }\n            // Return result\n            return result;\n        };\n        /**\n         * Password Text\n         *\n         * @param itemEl:HTMLElement\n         * @return null|Array<any>\n         */\n        this.passwordRetrieve = (itemEl) => {\n            // Set result\n            let result = null;\n            // Check value\n            if (\"value\" in itemEl && \"name\" in itemEl) {\n                let key = itemEl.name;\n                // Set result\n                let value = itemEl.value;\n                // Push in result\n                result = [key, value];\n            }\n            // Return result\n            return result;\n        };\n        /** Private methods | Set value\n         ******************************************************\n         */\n        /**\n         * Set Text\n         *\n         * Set text in item\n         *\n         * @param itemEl:HTMLElement\n         * @param value:string\n         * @return void\n         */\n        this.textSet = (itemEl, value, valuesID) => {\n            // Check itemEl \n            if (itemEl.tagName == \"INPUT\") {\n                // Set value\n                itemEl.setAttribute(\"value\", value);\n                // Check values id is string\n                if (typeof valuesID === \"string\") {\n                    // Set entity_id\n                    itemEl.setAttribute(\"value_id\", valuesID);\n                }\n                else \n                // Check value is object\n                if (valuesID !== null && Object.keys(valuesID).includes(itemEl[\"name\"])) {\n                    // Set entity_id\n                    itemEl.setAttribute(\"value_id\", valuesID[itemEl[\"name\"]]);\n                }\n                else \n                // Check if $oid\n                if (valuesID && typeof valuesID === \"object\" && \"$oid\" in valuesID) {\n                    // Set entity_id\n                    itemEl.setAttribute(\"value_id\", valuesID[\"$oid\"]);\n                }\n            }\n        };\n        /**\n         * Set Password\n         *\n         * Set text in item\n         *\n         * @param itemEl:HTMLElement\n         * @param value:string\n         * @return void\n         */\n        this.passwordSet = (itemEl, value, valuesID) => {\n            // Check itemEl \n            if (itemEl.tagName == \"INPUT\") {\n                // Set value\n                itemEl.setAttribute(\"value\", value);\n                // Set id\n                this._setID(valuesID, itemEl);\n            }\n        };\n        /** Private methods | Default\n         ******************************************************\n         */\n        /**\n         * Get Default\n         *\n         * @param inputEl\n         * @returns {any}\n         */\n        this._getDefaultOfInput = (inputEl) => {\n            // Set result\n            let result = null;\n            // Get type\n            let type = inputEl.type;\n            // Get name\n            let name = inputEl.name;\n            // Is multiple\n            let isMultiple = name && name.slice(-2) == \"[]\";\n            // Check if input\n            if (inputEl instanceof HTMLInputElement) {\n                // Check if default in current insput\n                if (inputEl.hasAttribute(\"default\") && typeof inputEl.getAttribute(\"default\") === \"string\") {\n                    // Set result\n                    result = inputEl.getAttribute(\"default\");\n                    // Check type is checkbox\n                    if (!isMultiple && type == \"checkbox\") {\n                        // Check result\n                        result = ['1', 'true', 'on', 'yes'].includes(result)\n                            ? true\n                            : false;\n                    }\n                    else \n                    // Check type is range\n                    if (!isMultiple && [\"range\", \"number\"].includes(type)) {\n                        // Get number of result\n                        result = Number(result);\n                    }\n                    else \n                    // Check is date (to implement datetime)\n                    if (!isMultiple && [\"date\"].includes(type)) {\n                        // Convert to date\n                        result = new Date(result);\n                    }\n                    else \n                    // If radio\n                    if (type === \"radio\") {\n                        // Get parent\n                        let parent = inputEl.closest(`[data-radio-name=\"${name.replace(\"[]\", \"\")}\"]`);\n                        // Check parent\n                        if (parent) {\n                            // Search all radioEls in parent\n                            let radioInputEls = parent.querySelectorAll(`input[name=\"${name}\"]`);\n                            // Check radioInputEls\n                            if (radioInputEls === null || radioInputEls === void 0 ? void 0 : radioInputEls.length) {\n                                // Iteration radioInputEls\n                                radioInputEls.forEach((radioInputEl) => {\n                                    // Check radioInputEl\n                                    if (radioInputEl instanceof HTMLInputElement && radioInputEl.hasAttribute(\"default\") && radioInputEl.hasAttribute(\"value\")) {\n                                        // Check multiple\n                                        if (isMultiple) {\n                                            // Check result\n                                            if (!Array.isArray(result))\n                                                // Set result\n                                                result = [];\n                                            // Set result\n                                            // @ts-ignore\n                                            result.push(radioInputEl.value);\n                                        }\n                                        else {\n                                            // Set result\n                                            result = radioInputEl.value;\n                                        }\n                                    }\n                                });\n                            }\n                        }\n                    }\n                    else \n                    // Check is date (to implement datetime)\n                    if (!isMultiple && [\"date\"].includes(type)) {\n                        // Convert to date\n                        result = new Date(result);\n                    }\n                    else \n                    // If radio\n                    if (type === \"select\") {\n                        // Search all radioEls in parent\n                        let optionInputEls = inputEl.querySelectorAll(\"option\");\n                        // Check radioInputEls\n                        if (optionInputEls === null || optionInputEls === void 0 ? void 0 : optionInputEls.length) {\n                            // Iteration radioInputEls\n                            optionInputEls.forEach((optionInputEl) => {\n                                // Check radioInputEl\n                                if (optionInputEl instanceof HTMLOptionElement && optionInputEl.hasAttribute(\"default\") && optionInputEl.hasAttribute(\"value\")) {\n                                    // Check multiple\n                                    if (isMultiple) {\n                                        // Check result\n                                        if (!Array.isArray(result))\n                                            // Set result\n                                            result = [];\n                                        // Set result\n                                        // @ts-ignore\n                                        result.push(optionInputEl.value);\n                                    }\n                                    else {\n                                        // Set result\n                                        result = optionInputEl.value;\n                                    }\n                                }\n                            });\n                        }\n                    }\n                }\n            }\n            else \n            // Check if select\n            if (inputEl instanceof HTMLSelectElement) {\n                // If radio\n                if (type === \"select\") {\n                    // Search all radioEls in parent\n                    let optionInputEls = inputEl.querySelectorAll(\"option\");\n                    // Check radioInputEls\n                    if (optionInputEls === null || optionInputEls === void 0 ? void 0 : optionInputEls.length) {\n                        // Iteration radioInputEls\n                        optionInputEls.forEach((optionInputEl) => {\n                            // Check radioInputEl\n                            if (optionInputEl instanceof HTMLOptionElement && optionInputEl.hasAttribute(\"default\") && optionInputEl.hasAttribute(\"value\")) {\n                                // Check multiple\n                                if (isMultiple) {\n                                    // Check result\n                                    if (!Array.isArray(result))\n                                        // Set result\n                                        result = [];\n                                    // Set result\n                                    // @ts-ignore\n                                    result.push(optionInputEl.value);\n                                }\n                                else {\n                                    // Set result\n                                    result = optionInputEl.value;\n                                }\n                            }\n                        });\n                    }\n                }\n            }\n            // Return result \n            return result;\n        };\n        /** Private methods | Init input\n         ******************************************************\n         */\n        /**\n         * Init Number Input\n         *\n         * @param inputEl\n         * @returns {void}\n         */\n        this._initNumberInput = (inputEl) => {\n            // Check maska\n            if (inputEl instanceof HTMLInputElement && inputEl.dataset && \"maska\" in inputEl.dataset) {\n                // Init maska\n                new maska__WEBPACK_IMPORTED_MODULE_4__.MaskInput(inputEl);\n            }\n        };\n        /**\n         * Init Password Input\n         *\n         * @param inputEl\n         * @returns {void}\n         */\n        this._initPasswordInput = (inputEl) => {\n            // Check maska\n            if (inputEl instanceof HTMLInputElement && inputEl.dataset && \"passwordVisible\" in inputEl.dataset && inputEl.parentNode) {\n                // Get password visible\n                let passwordVisible = inputEl.dataset.passwordVisible;\n                // Get prefix\n                let suffixEl = inputEl.parentNode.querySelector(\"div.suffix\");\n                // Add event on password\n                typeof passwordVisible === \"string\" && suffixEl && suffixEl.addEventListener(\"click\", (e) => {\n                    // Get password visible\n                    let passwordVisible = inputEl.dataset.passwordVisible;\n                    // Check e.target\n                    if (e.currentTarget && e.currentTarget instanceof HTMLDivElement) {\n                        // Change input type\n                        inputEl.type = passwordVisible == \"0\"\n                            ? \"text\"\n                            : \"password\";\n                        // Get icon\n                        let suffixIconEl = suffixEl && suffixEl.querySelector(\"i\");\n                        // Check suffix icon\n                        if (suffixIconEl && suffixIconEl instanceof HTMLElement)\n                            // Change icon\n                            suffixIconEl.innerHTML = passwordVisible == \"0\"\n                                ? \"visibility_off\"\n                                : \"visibility\";\n                        // Change attribute\n                        inputEl.dataset.passwordVisible = passwordVisible == \"0\"\n                            ? \"1\"\n                            : \"0\";\n                    }\n                }, true);\n            }\n        };\n        /**\n         * Init Number Input\n         *\n         * @param inputEl\n         * @returns {void}\n         */\n        this._initSelectInput = (inputEl) => {\n            // Check maska\n            if (inputEl instanceof HTMLInputElement || inputEl instanceof HTMLSelectElement) {\n                // Set option\n                let option = {\n                    persist: false,\n                    createOnBlur: true,\n                    create: true,\n                    plugins: {}\n                };\n                // Check clear\n                if (inputEl.dataset && \"selectClear\" in inputEl.dataset)\n                    // Set plugin\n                    // @ts-ignore\n                    option.plugins[\"clear_button\"] = {\n                        title: inputEl.dataset.selectClear\n                    };\n                // Check clear\n                if ((inputEl.dataset && \"selectTag\" in inputEl.dataset) || (\"multiple\" in inputEl && inputEl.multiple)) {\n                    // Set plugin caret position\n                    // @ts-ignore\n                    option.plugins[\"caret_position\"] = {};\n                    // Set plugin drag drop\n                    // @ts-ignore\n                    option.plugins[\"drag_drop\"] = {};\n                }\n                // Init maska\n                new (tom_select__WEBPACK_IMPORTED_MODULE_3___default())(inputEl, option);\n            }\n        };\n        /** Private methods | Error\n         ******************************************************\n         */\n        /**\n         * New Suffix Error Element\n         *\n         * @param classContent\n         * @param textContent\n         */\n        this._newSuffixErrorEl = (classContent = \"material-icons\", textContent = \"error\") => {\n            // Create icon\n            let iconEl = document.createElement(\"i\");\n            // Add class on icon\n            iconEl.classList.add(classContent\n                ? classContent\n                : \"material-icons\");\n            // Add text\n            iconEl.innerText = textContent\n                ? textContent\n                : \"error\";\n            // Create suffix el\n            let suffixEl = document.createElement(\"div\");\n            // Add class on suffix el\n            suffixEl.classList.add(\"suffix\");\n            // Append icon el\n            suffixEl.appendChild(iconEl);\n            // Return el\n            return suffixEl;\n        };\n        /**\n         *\n         * New Supporting Text Error El\n         *\n         * @param inputEl\n         * @param allInputEls\n         */\n        this._newSupportingTextErrorEl = (inputEl, allInputEls) => {\n            // Create icon\n            let spanEl = document.createElement(\"span\");\n            // Add class on suffix el\n            spanEl.classList.add(\"supporting-text\");\n            // Add text\n            spanEl.innerText = inputEl.dataset && \"error\" in inputEl.dataset && inputEl.dataset.error\n                ? inputEl.dataset.error\n                : \"Invalid entry\";\n            // Return el\n            return spanEl;\n        };\n        // Scan current form\n        this._ingestForm(form)\n            .then(this._initForm).then(this._initOnReady).then(this._initEventOnSubmit).then(this._initEventOnReset);\n    }\n    /** Private methods | Set value | Set Custom Data\n     ******************************************************\n     */\n    /**\n     * Set ID\n     *\n     * Set ID of the item of the from\n     *\n     * @param valueID\n     * @param itemEl\n     * @returns void\n     */\n    _setID(valueID, itemEl) {\n        // Declare key collection\n        let keysCollection = [];\n        let currentValueID;\n        // Check values id is string\n        if (typeof valueID === \"string\") {\n            // Set entity_id\n            itemEl.setAttribute(\"value_id\", valueID);\n        }\n        else \n        // Check value is object\n        if (valueID !== null && Object.keys(valueID).includes(itemEl[\"name\"])) {\n            // Set entity_id\n            itemEl.setAttribute(\"value_id\", valueID[itemEl[\"name\"]]);\n        }\n        else \n        // Check if $oid\n        if (valueID && typeof valueID === \"object\" && \"$oid\" in valueID) {\n            // Set entity_id\n            itemEl.setAttribute(\"value_id\", valueID[\"$oid\"]);\n        }\n        // Get items of form\n        let itemsEls = this._formEl.querySelectorAll(\"select, input\");\n        // Iterations items\n        for (let i = 0; i < itemsEls.length; i++) {\n            // Get value ID\n            currentValueID = itemsEls[i].getAttribute(\"value_id\");\n            // Check if attribute _ID\n            if (currentValueID === null)\n                // Stop method\n                return;\n            // Check if key in keysCollection\n            if (!keysCollection.includes(currentValueID))\n                // Push key in collection\n                keysCollection.push(currentValueID);\n        }\n        // Check if multiple keus in key collection\n        if (keysCollection.length > 1)\n            // Stop method\n            return;\n        // Iteration of items\n        for (let i = 0; i < itemsEls.length; i++)\n            // Remove attribute value id\n            itemsEls[i].removeAttribute(\"value_id\");\n        // Push value id in form\n        this._formEl.setAttribute(\"value_id\", keysCollection.pop());\n    }\n}\n/** Public static methods\n ******************************************************\n */\n/**\n * Is Html Form Element\n *\n * Check is element is Html Form Element\n *\n * @param element\n * @returns\n */\nForm.isHTMLFormElement = (element) => {\n    return element instanceof HTMLFormElement;\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Form);\n\n\n//# sourceURL=webpack://crazy_demo/../CrazyPHP/src/Front/Library/Utility/Form.ts?");

/***/ }),

/***/ 1259:
/*!*****************************************************!*\
  !*** ../CrazyPHP/src/Front/Library/Utility/Hash.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Hash)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ 4539);\n/* harmony import */ var _Crazyrequest__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Crazyrequest */ 8384);\n/* harmony import */ var _History_History__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../History/History */ 4763);\n/**\n * Utility\n *\n * Front TS Scrips for multiple tasks\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\n\n/**\n * Dependances\n */\n\n\n/**\n * Hash\n *\n * Methods for store hash value\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\nclass Hash {\n    /**\n     * Constructor\n     *\n     * @param hash Set hash value\n     */\n    constructor(hash = null) {\n        /** Private parameters\n         ******************************************************\n         */\n        /** @var _hash Variable for store hash */\n        this._hash = null;\n        /** Public methods\n         ******************************************************\n         */\n        /**\n         * Get\n         *\n         * Get hash\n         *\n         * @returns ?string\n         */\n        this.get = () => {\n            // Declare result\n            let result;\n            // Check if watch mode\n            if (this.isWatch())\n                // Set from meta tag\n                this.setFromRequest();\n            // Set result\n            result = this._hash;\n            // Return result\n            return result;\n        };\n        /**\n         * Set\n         *\n         * Set hash\n         *\n         * @param hash\n         */\n        this.set = (hash) => {\n            // Set result\n            let result = false;\n            // Check hash\n            if (hash) {\n                // Push old value to history if needed\n                this._setIntoHistory();\n                // Set new hash\n                this._hash = hash;\n                // Set result\n                result = true;\n            }\n            // Return result\n            return result;\n        };\n        /**\n         * Set From Meta Tag\n         *\n         * Exemple of meta tag :\n         * `<meta name=\"application-hash\" content=\"4fe1efd8\">`\n         *\n         * @param tagName\n         * @returns\n         */\n        this.setFromMetaTag = (tagName = \"application-hash\") => {\n            // Set result\n            let result = false;\n            // Check tagname\n            if (tagName) {\n                // Get metatag\n                const metaTag = document.querySelector(`meta[name=\"${tagName}\"]`);\n                // Check metatage\n                if (metaTag instanceof HTMLMetaElement)\n                    // Set hash\n                    result = this.set(metaTag.content);\n            }\n            // Return result\n            return result;\n        };\n        /**\n         * Set From Request\n         *\n         * Set hash from request to crazy app url\n         * > Value stored in the header `Crazy-Hash`\n         *\n         * @param url Url to fetch request\n         */\n        this.setFromRequest = (...args_1) => (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__awaiter)(this, [...args_1], void 0, function* (url = \"/api/v2/Router/count\") {\n            // Set result\n            let result = null;\n            // Check url\n            if (url) {\n                // New request instance\n                let request = new _Crazyrequest__WEBPACK_IMPORTED_MODULE_0__[\"default\"](url, {\n                    from: \"internal\",\n                    cache: false\n                });\n                // Fetch request\n                return yield request.fetch();\n            }\n            // Return result\n            return result;\n        });\n        /**\n         * Get All From History\n         *\n         * Return all old hash stored\n         *\n         * @returns Array<string>\n         */\n        this.getAllFromHistory = () => {\n            // Prepare result\n            let result = [];\n            // Check history\n            if (this._history !== null)\n                // Get all previous value\n                result = this._history.getAllPrevious();\n            // Return result\n            return result;\n        };\n        /**\n         * Is Watch\n         *\n         * Check if watch mode is enable in back\n         *\n         * @return void\n         */\n        this.isWatch = () => {\n            // Set result\n            let result = false;\n            // Get metatag\n            const metaTag = document.querySelector(`meta[name=\"application-watch\"]`);\n            // Check metatage\n            if (metaTag instanceof HTMLMetaElement && metaTag.content && metaTag.content == \"true\")\n                // Set result\n                result = true;\n            // Return result\n            return result;\n        };\n        /** Private methods\n         ******************************************************\n         */\n        this._getFromHistory = (key = 1) => {\n            // Set result\n            let result = undefined;\n            // Prepare result\n            if (key <= 0)\n                // Set result\n                result = this._hash;\n            else \n            // Check history in instanced\n            if (this._history !== null) {\n                // Get from history\n                let valueFromHistory = this._history.get(key);\n                // Check value is null or is string\n                if (valueFromHistory === null || typeof valueFromHistory == \"string\")\n                    // Set result\n                    result = valueFromHistory;\n            }\n            // Return result\n            return result;\n        };\n        /**\n         * Set Into History\n         *\n         * Push current hash into history object\n         *\n         * @returns void\n         */\n        this._setIntoHistory = () => {\n            // Prepare result\n            let result = true;\n            // check current hash\n            if (this._hash) {\n                // Check history\n                if (this._history === null)\n                    // New history instance\n                    this._history = new _History_History__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\n                // Set into history\n                result = this._history.set(this._hash);\n            }\n            // Return result\n            return result;\n        };\n        // Check hash given\n        if (hash)\n            // Set hash\n            this.set(hash);\n        // New history\n        this._history = new _History_History__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\n    }\n}\n\n\n//# sourceURL=webpack://crazy_demo/../CrazyPHP/src/Front/Library/Utility/Hash.ts?");

/***/ }),

/***/ 3879:
/*!******************************************************!*\
  !*** ../CrazyPHP/src/Front/Library/Utility/Money.ts ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/**\n * Utility\n *\n * Front TS Scrips for multiple tasks\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\n/**\n * Dependances\n */\n/**\n * Money\n *\n * Methods for manage money\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\nclass Money {\n}\n/** Public static methods\n ******************************************************\n */\n/**\n * Dollar\n *\n * Format number to US dollar\n *\n * @param input\n * @returns {string}\n */\nMoney.dollar = (input) => {\n    // Set result\n    let result = `${input}`;\n    // Check number\n    if (input) {\n        // Set us dollat\n        let USDollar = new Intl.NumberFormat('en-US', {\n            style: 'currency',\n            currency: 'USD',\n        });\n        // Set result\n        result = USDollar.format(input);\n    }\n    // Return result\n    return result;\n};\n/**\n * Pounds\n *\n * Format number to British pounds\n *\n * @param input\n * @returns {string}\n */\nMoney.pounds = (input) => {\n    // Set result\n    let result = `${input}`;\n    // Check number\n    if (input) {\n        // Set us dollat\n        let pounds = Intl.NumberFormat('en-GB', {\n            style: 'currency',\n            currency: 'GBP',\n        });\n        // Set result\n        result = pounds.format(input);\n    }\n    // Return result\n    return result;\n};\n/**\n * Rupee\n *\n * Format number to Indian rupee\n *\n * @param input\n * @returns {string}\n */\nMoney.rupee = (input) => {\n    // Set result\n    let result = `${input}`;\n    // Check number\n    if (input) {\n        // Set rupee\n        let rupee = new Intl.NumberFormat('en-IN', {\n            style: 'currency',\n            currency: 'INR',\n        });\n        // Set result\n        result = rupee.format(input);\n    }\n    // Return result\n    return result;\n};\n/**\n * Euro\n *\n * Format number to Euro\n *\n * @param input\n * @returns {string}\n */\nMoney.euro = (input) => {\n    // Set result\n    let result = `${input}`;\n    // Check number\n    if (input) {\n        // Set euro\n        let euro = Intl.NumberFormat('en-DE', {\n            style: 'currency',\n            currency: 'EUR',\n        });\n        // Set result\n        result = euro.format(input);\n    }\n    // Return result\n    return result;\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Money);\n\n\n//# sourceURL=webpack://crazy_demo/../CrazyPHP/src/Front/Library/Utility/Money.ts?");

/***/ }),

/***/ 2067:
/*!********************************************************!*\
  !*** ../CrazyPHP/src/Front/Library/Utility/Objects.ts ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/**\n * Utility\n *\n * Front TS Scrips for multiple tasks\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\nvar _a;\n/**\n * Dependances\n */\n/**\n * Arrays\n *\n * Methods for manage arrays\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\nclass Objects {\n}\n_a = Objects;\n/** Public static methods\n ******************************************************\n */\n/**\n * Array Filter\n *\n * @param obj Input object\n * @param separator Separator to nested (default \".\")\n * @return any\n */\nObjects.convertToNestedObject = (obj, separator = '.') => {\n    // Declare result\n    const result = {};\n    // Iteration obj\n    for (const key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            if (key.includes(separator)) {\n                const keys = key.split(separator);\n                let current = result;\n                for (let i = 0; i < keys.length; i++) {\n                    if (i === keys.length - 1) {\n                        current[keys[i]] = obj[key];\n                    }\n                    else {\n                        current[keys[i]] = current[keys[i]] || {};\n                        current = current[keys[i]];\n                    }\n                }\n            }\n            else if (typeof obj[key] === 'object' && obj[key] !== null) {\n                result[key] = _a.convertToNestedObject(obj[key], separator);\n            }\n            else {\n                result[key] = obj[key];\n            }\n        }\n    }\n    // Return result\n    return result;\n};\n/**\n * Flatten\n *\n * Convert nested structure to a flat structure with separator\n *\n * @param obj - The object to flatten\n * @param prefix - The prefix for keys (default is an empty string)\n * @param separator - The separator used between keys (default is \".\")\n * @returns A flattened object\n */\nObjects.flatten = (obj = {}, prefix = '', separator = '.') => {\n    const result = {};\n    for (const [key, value] of Object.entries(obj)) {\n        const newKey = prefix ? `${prefix}${separator}${key}` : key;\n        if (typeof value === 'object' && value !== null && !Array.isArray(value)) {\n            Object.assign(result, _a.flatten(value, newKey, separator));\n        }\n        else {\n            result[newKey] = value;\n        }\n    }\n    return result;\n};\n/**\n * Unflatten\n *\n * Convert a flat object to a nested structure using a separator\n *\n * @param obj - The flat object to unflatten\n * @param separator - The separator used in the keys (default is \".\")\n * @returns A nested object\n */\nObjects.unflatten = (obj = {}, separator = '.') => {\n    const result = {};\n    for (const [key, value] of Object.entries(obj)) {\n        const parts = key.split(separator);\n        let temp = result;\n        for (let i = 0; i < parts.length; i++) {\n            const part = parts[i];\n            if (!temp[part] || typeof temp[part] !== 'object') {\n                temp[part] = {};\n            }\n            if (i === parts.length - 1) {\n                temp[part] = value;\n            }\n            else {\n                temp = temp[part];\n            }\n        }\n    }\n    return result;\n};\n/**\n * Deep merge\n *\n * Deeply merge multiple objects.\n *\n * @param createIfNotExists - Whether to create a new entry if the key does not exist in the merged object\n * @param inputs - All objects to merge\n * @returns The merged object\n */\nObjects.deepMergeOld = (createIfNotExists = false, ...inputs) => {\n    // Base object to start merging into\n    const merged = {};\n    // Iterate over each input object\n    for (const obj of inputs) {\n        for (const [key, value] of Object.entries(obj)) {\n            if (typeof value === 'object' && !Array.isArray(value) && value !== null) {\n                // If the value is an object and the key exists in the merged object, merge them recursively\n                merged[key] = _a.deepMerge(createIfNotExists, merged[key] || {}, value);\n            }\n            else {\n                // Handle createIfNotExists flag\n                if (createIfNotExists && merged[key] !== undefined) {\n                    merged[key] = Array.isArray(merged[key])\n                        ? [...merged[key], value]\n                        : [merged[key], value];\n                }\n                else {\n                    // Otherwise, assign the value directly\n                    merged[key] = value;\n                }\n            }\n        }\n    }\n    return merged;\n};\n/**\n * Deep Merge Alt\n *\n * Deeply merge multiple objects.\n *\n * @param createIfNotExists - Whether to create a new entry if the key does not exist in the merged object\n * @param inputs - All objects to merge\n * @returns The merged object\n */\nObjects.deepMerge = (createIfNotExists, ...inputs) => {\n    const merge = (target, source) => {\n        if (source === null || source === undefined) {\n            return target;\n        }\n        if (Array.isArray(source)) {\n            if (!Array.isArray(target)) {\n                target = [];\n            }\n            source.forEach((item, index) => {\n                target[index] = merge(target[index], item);\n            });\n        }\n        else if (typeof source === 'object') {\n            if (typeof target !== 'object' || Array.isArray(target)) {\n                target = {};\n            }\n            for (const key of Object.keys(source)) {\n                if (target[key] === undefined && !createIfNotExists) {\n                    target[key] = source[key];\n                }\n                else {\n                    target[key] = merge(target[key], source[key]);\n                }\n            }\n        }\n        else {\n            // Primitive types (string, number, boolean, etc.)\n            if (createIfNotExists || target !== undefined) {\n                target = source;\n            }\n        }\n        return target;\n    };\n    return inputs.reduce((acc, obj) => merge(acc, obj), {});\n};\n/**\n * Deep merge with separator\n *\n * Deeply merge multiple objects with an optional separator for string values.\n *\n * @param createIfNotExists - Whether to create a new entry if the key does not exist in the merged object\n * @param separator - String used to concatenate values for the same key\n * @param inputs - All objects to merge\n * @returns The merged object\n */\nObjects.deepMergeWithSeparator = (createIfNotExists, separator, ...inputs) => {\n    const merge = (target, source) => {\n        if (source === null || source === undefined) {\n            return target;\n        }\n        if (Array.isArray(source)) {\n            if (!Array.isArray(target)) {\n                target = [];\n            }\n            source.forEach((item, index) => {\n                target[index] = merge(target[index], item);\n            });\n        }\n        else if (typeof source === 'object') {\n            if (typeof target !== 'object' || Array.isArray(target)) {\n                target = {};\n            }\n            for (const key of Object.keys(source)) {\n                if (createIfNotExists || target[key] !== undefined) {\n                    target[key] = merge(target[key], source[key]);\n                }\n                else {\n                    target[key] = source[key];\n                }\n            }\n        }\n        else if (typeof source === 'string') {\n            if (typeof target === 'string') {\n                target += separator + source;\n            }\n            else {\n                target = source;\n            }\n        }\n        else {\n            // For other primitive types, just assign the source value\n            target = source;\n        }\n        return target;\n    };\n    return inputs.reduce((acc, obj) => merge(acc, obj), {});\n};\n/**\n * Sort By Key\n *\n * @param input\n * @param orderKey\n * @param maxOrder\n * @returns {Record<string, Item>}\n */\nObjects.sortByKey = (input, orderKey = 'order') => {\n    // Convert the object to an array of key-value pairs\n    const entries = Object.entries(input);\n    // Filter, handle missing `orderKey`, and sort based on the specified `orderKey` property\n    const sortedEntries = entries\n        .filter(([, value]) => typeof value[orderKey] === 'number' && value[orderKey] > 0)\n        .sort(([, a], [, b]) => a[orderKey] - b[orderKey]);\n    // Convert the sorted array back to an object\n    const sortedObject = {};\n    for (const [key, value] of sortedEntries) {\n        sortedObject[key] = value;\n    }\n    return sortedObject;\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Objects);\n\n\n//# sourceURL=webpack://crazy_demo/../CrazyPHP/src/Front/Library/Utility/Objects.ts?");

/***/ }),

/***/ 4346:
/*!********************************************************!*\
  !*** ../CrazyPHP/src/Front/Library/Utility/Process.ts ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/**\n * Utility\n *\n * Front TS Scrips for multiple tasks\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\n/**\n * Dependances\n */\n/**\n * Process\n *\n * Methods for process data\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\nclass Process {\n    /**\n     * Space Before Capital\n     *\n     * Insert a space before each capital letter, like this:\n     * - HelloWorld <=> Hello World\n     *\n     * > Exception if it is the first character\n     *\n     * @param input The input string\n     * @return {string} The resulting string with spaces before capital letters\n     */\n    static spaceBeforeCapital(input) {\n        // Set result\n        let result = input;\n        // Check input\n        if (input)\n            // Using JavaScript's string replace method with a regex pattern\n            result = input.replace(/(?<!^)([A-Z])/g, ' $1');\n        // Return result\n        return result;\n    }\n}\n/**\n * Capitalize\n *\n * @param input\n * @return {string}\n */\nProcess.capitalize = (input) => {\n    // Capitalize    \n    return input\n        ? input[0].toUpperCase() + input.slice(1)\n        : input;\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Process);\n\n\n//# sourceURL=webpack://crazy_demo/../CrazyPHP/src/Front/Library/Utility/Process.ts?");

/***/ }),

/***/ 7593:
/*!*******************************************************!*\
  !*** ../CrazyPHP/src/Front/Library/Utility/Runner.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Runner)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ 4539);\n/* harmony import */ var _Navigator_Client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../Navigator/Client */ 8287);\n/* harmony import */ var _Register_Partial__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Register/Partial */ 8661);\n/* harmony import */ var _Process__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Process */ 4346);\n/* harmony import */ var _Arrays__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Arrays */ 4989);\n/* harmony import */ var _Error_RunnerError__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Error/RunnerError */ 2629);\n/**\n * Utility\n *\n * Front TS Scrips for multiple tasks\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\n\n/**\n * Dependances\n */\n\n\n\n\n\n/**\n * Runner\n *\n * Methods for retrieve run and execute them one by one\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\nclass Runner {\n    /**\n     * Constructor\n     *\n     * @param extra\n     */\n    constructor(extra = null, viewer = null) {\n        /** Public parameters\n         ******************************************************\n         */\n        /**\n         * Viewer\n         */\n        this.viewer = null;\n        /** Private parameters\n         ******************************************************\n         */\n        /**\n         * Partials\n         */\n        this._partials = [];\n        /** Public methods | Runner Info\n         ******************************************************\n         */\n        /**\n         * Set Name\n         *\n         * Set the name of the runner\n         *\n         * @param name Name\n         */\n        this.setName = (name) => {\n            // Set name\n            this._options._info.name = name;\n        };\n        /** Public methods\n         ******************************************************\n         */\n        /**\n         * Execute\n         *\n         * Method to execute all 'run' methods in sequence\n         *\n         * @returns\n         */\n        this.execute = () => {\n            // Get run methods\n            let runMethods = this.getAllMethodsStartingByRun();\n            // Load Options\n            let options = this._loadOptions();\n            // Chain the methods in sequence using Promises\n            let chain = Promise.resolve(options);\n            // New navigator client\n            this._navigatorClient = new _Navigator_Client__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n            // Initial setup before any methods\n            chain = chain.then(options => {\n                // Set info\n                options._info.run.total = runMethods.length;\n                // Set current\n                options._info.run.current = 0;\n                // Set options > status\n                options._info.status = \"Ready\";\n                // Iteration methods\n                for (let method of runMethods)\n                    // Push info\n                    options._info.run.name.push({\n                        method: method,\n                        label: _Process__WEBPACK_IMPORTED_MODULE_2__[\"default\"].capitalize(_Process__WEBPACK_IMPORTED_MODULE_2__[\"default\"].spaceBeforeCapital(method))\n                    });\n                // Start prevent close\n                this._navigatorClient.preventClose();\n                // Check viewer\n                if (this.viewer) {\n                    // Open viewer\n                    this.viewer.open({\n                        progression: `${options._info.run.current}/${options._info.run.total}`,\n                        text: `Starting ${options._info.name.toLowerCase()}`\n                    });\n                }\n                // Return \"abstract\" class\n                return this.setUpBeforeClass(options);\n            });\n            // Run each methods\n            runMethods.forEach(method => {\n                chain = chain\n                    .then(options => {\n                    // Increment current\n                    options._info.run.current++;\n                    // Set in progress\n                    if (options._info.run.current > 0)\n                        options._info.status = \"In Progress\";\n                    // Check viewer\n                    if (this.viewer) {\n                        // Open viewer\n                        this.viewer.update({\n                            progression: `${options._info.run.current}/${options._info.run.total}`,\n                            text: `${options._info.run.name[options._info.run.current - 1] ? options._info.run.name[options._info.run.current - 1].label : \"Oups\"}`\n                        });\n                    }\n                    // Let result\n                    let result = this.setUpBeforeMethod(options);\n                    // Run setup\n                    return result;\n                })\n                    .then(this[method])\n                    .then(options => {\n                    // Return last method\n                    let result = this.tearDownAfterMethod(options);\n                    // Close prevent close\n                    this._navigatorClient.disablePreventClose();\n                    // Return result\n                    return result;\n                });\n            });\n            // Final teardown after all methods\n            chain = chain.then(options => {\n                // Check viewer\n                if (this.viewer) {\n                    // Open viewer\n                    this.viewer.close();\n                }\n                // Set status\n                options._info.status = \"Complete\";\n                // Return custom last method\n                return this.tearDownAfterClass(options);\n            });\n            // Catch any errors\n            chain.catch(error => {\n                // Check error instance of Runner error\n                if (error instanceof _Error_RunnerError__WEBPACK_IMPORTED_MODULE_4__[\"default\"]) {\n                    // Check message\n                    if (error.message) {\n                        // Display message\n                        console.log(error.message);\n                    }\n                }\n                else {\n                    // Check error\n                    if (error instanceof Error) {\n                        // Display error\n                        console.error(error.message);\n                        console.error('An error occurred during execution:', error);\n                    }\n                }\n            });\n            // Return chain\n            return chain;\n        };\n        /** Public methods | Runner Preparation\n         ******************************************************\n         */\n        /**\n         * Set Up Before Class\n         *\n         * Method call at the very begin of the runner\n         *\n         * @return {Promise<RunnerOption>}\n         */\n        this.setUpBeforeClass = (options) => (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(this, void 0, void 0, function* () {\n            // Return object\n            return options;\n        });\n        /**\n         * Set Up Before Method\n         *\n         * Method call before every method\n         *\n         * @return {Promise<RunnerOption>}\n         */\n        this.setUpBeforeMethod = (options) => (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(this, void 0, void 0, function* () {\n            // Return object\n            return options;\n        });\n        /**\n         * Tear Down After Method\n         *\n         * Class call at the end of the runner\n         *\n         * @return {Promise<RunnerOption>}\n         */\n        this.tearDownAfterMethod = (options) => (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(this, void 0, void 0, function* () {\n            // Return object\n            return options;\n        });\n        /**\n         * Tear Down After Class\n         *\n         * Class call at the end of the runner\n         *\n         * @return {Promise<Object>}\n         */\n        this.tearDownAfterClass = (options) => (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(this, void 0, void 0, function* () {\n            // Return object\n            return options;\n        });\n        /** Public methods | Partials\n         ******************************************************\n         */\n        /**\n         * Clean Partials\n         *\n         * @returns {void}\n         */\n        this.cleanPartials = () => {\n            // Clean partials\n            this._partials = [];\n        };\n        /**\n         * Load Partials\n         *\n         * Load and run partials found into a given parent el\n         *\n         * @param parent Parent element where search partials\n         * @param runScriptsFound Run script found or not\n         * @returns {RegisterPartialScanned[]}\n         */\n        this.loadPartials = (parent, runScriptsFound = true) => {\n            // Set partials scanned\n            let partialsScanned = [];\n            // New partials instance\n            let partialRegister = new _Register_Partial__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\n            // Scan in parent\n            partialsScanned = partialRegister.scan(parent);\n            // Check partial\n            if (partialsScanned.length && runScriptsFound)\n                // Iteration of partialsScanned\n                for (let key in partialsScanned) {\n                    // New run script\n                    // @ts-ignore\n                    partialsScanned[key].scriptRunning = new partialsScanned[key].callable(partialsScanned[key]);\n                }\n            // Append partials into _partials\n            this._partials.push(...partialsScanned);\n            // Return result\n            return partialsScanned;\n        };\n        /**\n         * Get All Partials\n         * @returns {RegisterPartialScanned[]}\n         */\n        this.getAllPartials = () => {\n            // Set result\n            let result = this._partials;\n            // Return result\n            return result;\n        };\n        /**\n         * Get Partial By Name\n         *\n         * @param name\n         * @returns {RegisterPartialScanned[]|null}\n         */\n        this.getPartialName = (name) => {\n            // Set result\n            let result = null;\n            // Check name\n            if (name) {\n                // Search\n                let search = _Arrays__WEBPACK_IMPORTED_MODULE_3__[\"default\"].filterByKey(this._partials, \"name\", name);\n                // Get search\n                if (search.length) {\n                    // Set result\n                    result = search;\n                }\n            }\n            // Return search\n            return result;\n        };\n        /** Public methods | Exit\n         ******************************************************\n         */\n        /**\n         * Stop\n         *\n         * Stop runner\n         *\n         * @param message\n         * @param options\n         * @param callback\n         * @returns {void}\n         */\n        this.stop = (options, message = \"Runner stopped\", callback) => {\n            // Check viewer\n            if (this.viewer)\n                // Close viewer\n                this.viewer.close();\n            // Check callback\n            if (callback)\n                // Execute callback\n                callback(options);\n            // Run tearDownAfterClass\n            this.tearDownAfterClass(options);\n            // Stop runner\n            throw new _Error_RunnerError__WEBPACK_IMPORTED_MODULE_4__[\"default\"](message);\n        };\n        /** Public methods | Options\n         ******************************************************\n         */\n        /**\n         * Register Options\n         *\n         * @param {RunnerOption}\n         * @returns {void}\n         */\n        this.registerOptions = (options) => {\n            // Set options\n            this._options = options;\n        };\n        /** Private methods | Options\n         ******************************************************\n         */\n        /**\n         * Load Options\n         *\n         * @returns {RunnerOption}\n         */\n        this._loadOptions = () => {\n            return this._options;\n        };\n        /** Private methods | Utilities\n         ******************************************************\n         */\n        /**\n         * Get All Methods Starting By Run\n         *\n         * @source https://stackoverflow.com/questions/31054910/get-functions-methods-of-a-class\n         *\n         * @returns\n         */\n        this.getAllMethodsStartingByRun = () => {\n            const props = [];\n            let obj = this;\n            do {\n                const properties = Object.getOwnPropertyNames(obj);\n                // @ts-expect-error\n                props.push(...properties);\n                obj = Object.getPrototypeOf(obj);\n            } while (obj);\n            let propsAlt = Object.keys(this);\n            let result = props.filter((e, i, arr) => {\n                // @ts-expect-error\n                if (e != arr[i + 1] && typeof this[e] == 'function' && e.startsWith('run'))\n                    return true;\n            });\n            return result;\n        };\n        // Set options\n        let options = {\n            result: null,\n            _info: {\n                status: \"Waiting\",\n                name: \"\",\n                run: {\n                    total: 0,\n                    current: 0,\n                    name: []\n                }\n            }\n        };\n        // Check viewer\n        if (viewer)\n            // Setup viewer\n            this.viewer = new viewer(options);\n        // Check extra\n        if (extra && extra !== null)\n            options.extra = extra;\n        // Push options\n        this._options = options;\n    }\n}\n\n\n//# sourceURL=webpack://crazy_demo/../CrazyPHP/src/Front/Library/Utility/Runner.ts?");

/***/ }),

/***/ 7237:
/*!********************************************************!*\
  !*** ../CrazyPHP/src/Front/Library/Utility/Strings.ts ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/**\n * Utility\n *\n * Front TS Scrips for multiple tasks\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\n/**\n * Dependances\n */\n/**\n * Arrays\n *\n * Methods for manage arrays\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\nclass Strings {\n}\n/** Public static methods\n ******************************************************\n */\n/**\n * Remove duplicate lines from a string.\n *\n * @param input - The input string.\n * @returns A string with duplicate lines removed.\n */\nStrings.removeDuplicateLines = (input) => {\n    // Split the input string into an array of lines\n    const lines = input.split('\\n');\n    // Use a Set to filter out duplicate lines\n    const uniqueLines = Array.from(new Set(lines));\n    // Join the unique lines back into a single string\n    return uniqueLines.join('\\n');\n};\n/**\n * UCFirst\n *\n * Capitalize the first character of a string.\n *\n * @param str - The input string.\n * @returns The string with the first character capitalized.\n */\nStrings.ucfirst = (str) => {\n    // Check string given\n    if (!str)\n        // Stop method\n        return str;\n    // Return result\n    return str.charAt(0).toUpperCase() + str.slice(1);\n};\n/**\n * UCWords\n *\n * Capitalize the first character of each word in a string.\n *\n * @param str - The input string.\n * @returns The string with the first character of each word capitalized.\n */\nStrings.ucwords = (str) => {\n    // Check string given\n    if (!str)\n        // Stop method\n        return str;\n    // Return result\n    return str\n        .split(' ')\n        .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n        .join(' ');\n};\n/**\n * kebabToCamel\n *\n * Convert a kebab-case string to PascalCase or camelCase\n * @param input - The kebab-case string to convert\n * @param capitalizeFirst - If true, the first letter will be uppercase (PascalCase), otherwise lowercase (camelCase)\n * @returns The converted string\n */\nStrings.kebabToCamel = (input, capitalizeFirst = false) => input\n    ? input\n        .split('-') // Split by hyphen\n        .map((word, index) => {\n        if (index === 0 && !capitalizeFirst) {\n            // For camelCase, first word should be lowercase\n            return word.toLowerCase();\n        }\n        // Capitalize the first letter of each word\n        return word.charAt(0).toUpperCase() + word.slice(1).toLowerCase();\n    })\n        .join('') // Join the parts together\n    : input;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Strings);\n\n\n//# sourceURL=webpack://crazy_demo/../CrazyPHP/src/Front/Library/Utility/Strings.ts?");

/***/ }),

/***/ 1804:
/*!**************************************!*\
  !*** ../CrazyPHP/src/Front/index.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ColorSchema: () => (/* reexport safe */ _Library_Utility_ColorSchema__WEBPACK_IMPORTED_MODULE_4__[\"default\"]),\n/* harmony export */   Componentregister: () => (/* reexport safe */ _Library_Componentregister__WEBPACK_IMPORTED_MODULE_1__[\"default\"]),\n/* harmony export */   Crazycache: () => (/* reexport safe */ _Library_Crazycache__WEBPACK_IMPORTED_MODULE_27__[\"default\"]),\n/* harmony export */   Crazycolor: () => (/* reexport safe */ _Library_Crazycolor__WEBPACK_IMPORTED_MODULE_29__[\"default\"]),\n/* harmony export */   Crazycomponent: () => (/* reexport safe */ _Library_Crazycomponent__WEBPACK_IMPORTED_MODULE_8__[\"default\"]),\n/* harmony export */   Crazyconsole: () => (/* reexport safe */ _Library_Crazyconsole__WEBPACK_IMPORTED_MODULE_17__[\"default\"]),\n/* harmony export */   Crazyelement: () => (/* reexport safe */ _Library_Crazyelement__WEBPACK_IMPORTED_MODULE_20__[\"default\"]),\n/* harmony export */   Crazyevents: () => (/* reexport safe */ _Library_Crazyevents__WEBPACK_IMPORTED_MODULE_24__[\"default\"]),\n/* harmony export */   Crazylanguage: () => (/* reexport safe */ _Library_Crazylanguage__WEBPACK_IMPORTED_MODULE_14__[\"default\"]),\n/* harmony export */   Crazynavigator: () => (/* reexport safe */ _Library_Crazynavigator__WEBPACK_IMPORTED_MODULE_9__[\"default\"]),\n/* harmony export */   Crazyobject: () => (/* reexport safe */ _Core_Crazyobject__WEBPACK_IMPORTED_MODULE_30__[\"default\"]),\n/* harmony export */   Crazypage: () => (/* reexport safe */ _Library_Crazypage__WEBPACK_IMPORTED_MODULE_31__[\"default\"]),\n/* harmony export */   Crazypartial: () => (/* reexport safe */ _Library_Crazypartial__WEBPACK_IMPORTED_MODULE_19__[\"default\"]),\n/* harmony export */   Crazyrequest: () => (/* reexport safe */ _Library_Crazyrequest__WEBPACK_IMPORTED_MODULE_18__[\"default\"]),\n/* harmony export */   Crazystate: () => (/* reexport safe */ _Library_Crazystate__WEBPACK_IMPORTED_MODULE_28__[\"default\"]),\n/* harmony export */   Crazyurl: () => (/* reexport safe */ _Library_Crazyurl__WEBPACK_IMPORTED_MODULE_32__[\"default\"]),\n/* harmony export */   CurrentPage: () => (/* reexport safe */ _Library_Current_Page__WEBPACK_IMPORTED_MODULE_22__[\"default\"]),\n/* harmony export */   DomRoot: () => (/* reexport safe */ _Library_Dom_Root__WEBPACK_IMPORTED_MODULE_35__[\"default\"]),\n/* harmony export */   Form: () => (/* reexport safe */ _Library_Utility_Form__WEBPACK_IMPORTED_MODULE_33__[\"default\"]),\n/* harmony export */   Hash: () => (/* reexport safe */ _Library_Utility_Hash__WEBPACK_IMPORTED_MODULE_34__[\"default\"]),\n/* harmony export */   HistoryPage: () => (/* reexport safe */ _Library_History_Page__WEBPACK_IMPORTED_MODULE_23__[\"default\"]),\n/* harmony export */   LoaderPage: () => (/* reexport safe */ _Library_Loader_Page__WEBPACK_IMPORTED_MODULE_26__[\"default\"]),\n/* harmony export */   LoaderPartial: () => (/* reexport safe */ _Library_Loader_Partial__WEBPACK_IMPORTED_MODULE_13__[\"default\"]),\n/* harmony export */   NavigatorClient: () => (/* reexport safe */ _Library_Navigator_Client__WEBPACK_IMPORTED_MODULE_2__[\"default\"]),\n/* harmony export */   Pageregister: () => (/* reexport safe */ _Library_Pageregister__WEBPACK_IMPORTED_MODULE_21__[\"default\"]),\n/* harmony export */   PythonCollection: () => (/* reexport safe */ _Library_File_PythonCollection__WEBPACK_IMPORTED_MODULE_0__[\"default\"]),\n/* harmony export */   RegisterPage: () => (/* reexport safe */ _Library_Register_Page__WEBPACK_IMPORTED_MODULE_15__[\"default\"]),\n/* harmony export */   UtilityArrays: () => (/* reexport safe */ _Library_Utility_Arrays__WEBPACK_IMPORTED_MODULE_12__[\"default\"]),\n/* harmony export */   UtilityCsv: () => (/* reexport safe */ _Library_Utility_Csv__WEBPACK_IMPORTED_MODULE_25__[\"default\"]),\n/* harmony export */   UtilityDateTime: () => (/* reexport safe */ _Library_Utility_DateTime__WEBPACK_IMPORTED_MODULE_3__[\"default\"]),\n/* harmony export */   UtilityEvents: () => (/* reexport safe */ _Library_Utility_Events__WEBPACK_IMPORTED_MODULE_10__[\"default\"]),\n/* harmony export */   UtilityMoney: () => (/* reexport safe */ _Library_Utility_Money__WEBPACK_IMPORTED_MODULE_16__[\"default\"]),\n/* harmony export */   UtilityObjects: () => (/* reexport safe */ _Library_Utility_Objects__WEBPACK_IMPORTED_MODULE_6__[\"default\"]),\n/* harmony export */   UtilityProcess: () => (/* reexport safe */ _Library_Utility_Process__WEBPACK_IMPORTED_MODULE_5__[\"default\"]),\n/* harmony export */   UtilityRunner: () => (/* reexport safe */ _Library_Utility_Runner__WEBPACK_IMPORTED_MODULE_11__[\"default\"]),\n/* harmony export */   UtilityStrings: () => (/* reexport safe */ _Library_Utility_Strings__WEBPACK_IMPORTED_MODULE_7__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _Library_File_PythonCollection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Library/File/PythonCollection */ 6233);\n/* harmony import */ var _Library_Componentregister__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Library/Componentregister */ 2130);\n/* harmony import */ var _Library_Navigator_Client__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Library/Navigator/Client */ 8287);\n/* harmony import */ var _Library_Utility_DateTime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Library/Utility/DateTime */ 2834);\n/* harmony import */ var _Library_Utility_ColorSchema__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Library/Utility/ColorSchema */ 6987);\n/* harmony import */ var _Library_Utility_Process__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Library/Utility/Process */ 4346);\n/* harmony import */ var _Library_Utility_Objects__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Library/Utility/Objects */ 2067);\n/* harmony import */ var _Library_Utility_Strings__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Library/Utility/Strings */ 7237);\n/* harmony import */ var _Library_Crazycomponent__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Library/Crazycomponent */ 5150);\n/* harmony import */ var _Library_Crazynavigator__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./Library/Crazynavigator */ 1816);\n/* harmony import */ var _Library_Utility_Events__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./Library/Utility/Events */ 3042);\n/* harmony import */ var _Library_Utility_Runner__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./Library/Utility/Runner */ 7593);\n/* harmony import */ var _Library_Utility_Arrays__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./Library/Utility/Arrays */ 4989);\n/* harmony import */ var _Library_Loader_Partial__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./Library/Loader/Partial */ 183);\n/* harmony import */ var _Library_Crazylanguage__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./Library/Crazylanguage */ 4139);\n/* harmony import */ var _Library_Register_Page__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./Library/Register/Page */ 4101);\n/* harmony import */ var _Library_Utility_Money__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./Library/Utility/Money */ 3879);\n/* harmony import */ var _Library_Crazyconsole__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./Library/Crazyconsole */ 4600);\n/* harmony import */ var _Library_Crazyrequest__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./Library/Crazyrequest */ 8384);\n/* harmony import */ var _Library_Crazypartial__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./Library/Crazypartial */ 7784);\n/* harmony import */ var _Library_Crazyelement__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./Library/Crazyelement */ 6033);\n/* harmony import */ var _Library_Pageregister__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./Library/Pageregister */ 6844);\n/* harmony import */ var _Library_Current_Page__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./Library/Current/Page */ 4623);\n/* harmony import */ var _Library_History_Page__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./Library/History/Page */ 8912);\n/* harmony import */ var _Library_Crazyevents__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./Library/Crazyevents */ 2160);\n/* harmony import */ var _Library_Utility_Csv__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./Library/Utility/Csv */ 6119);\n/* harmony import */ var _Library_Loader_Page__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./Library/Loader/Page */ 7211);\n/* harmony import */ var _Library_Crazycache__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./Library/Crazycache */ 7947);\n/* harmony import */ var _Library_Crazystate__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./Library/Crazystate */ 7764);\n/* harmony import */ var _Library_Crazycolor__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./Library/Crazycolor */ 9206);\n/* harmony import */ var _Core_Crazyobject__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./Core/Crazyobject */ 1304);\n/* harmony import */ var _Library_Crazypage__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./Library/Crazypage */ 2682);\n/* harmony import */ var _Library_Crazyurl__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./Library/Crazyurl */ 4368);\n/* harmony import */ var _Library_Utility_Form__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./Library/Utility/Form */ 729);\n/* harmony import */ var _Library_Utility_Hash__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./Library/Utility/Hash */ 1259);\n/* harmony import */ var _Library_Dom_Root__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./Library/Dom/Root */ 3611);\n/**\n * Index\n *\n * Index of the front script for declare types\n *\n * @package    kzarshenas/crazyphp\n * @author     kekefreedog <kevin.zarshenas@gmail.com>\n * @copyright  2022-2024 Kévin Zarshenas\n */\n/**\n * Dependances\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=webpack://crazy_demo/../CrazyPHP/src/Front/index.ts?");

/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ __webpack_require__.O(0, ["vendors"], () => (__webpack_exec__(2196)));
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ }
]);